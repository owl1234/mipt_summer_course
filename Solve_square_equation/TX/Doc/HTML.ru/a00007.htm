<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>TX Library: [TXNetwork] Очень простой пример. Простая пересылка вводимой строки.</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript">
$(document).ready(initResizable);
</script>
<link href="Doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!-- Создано системой Doxygen 1.7.3 -->
<div id="top">
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="TXLib.png"></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">TX Library&#160;<span id="projectnumber">Help &ndash; Version: 00173a, Revision: 165</span></div>
   <div id="projectbrief"><s>&nbsp;ALL&nbsp;</s> Windows graphics in a sandbox</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('a00007.htm','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<h1>[TXNetwork] Очень простой пример. Простая пересылка вводимой строки. </h1>  </div>
</div>
<div class="contents">
<div class="textblock"><hr/>
 <h2><a class="anchor" id="Example1_01"></a>
Простейшая программа</h2>
<p>Первое, что вы должны сделать при использовании библиотеки TXNetwork это указать компилятору, что нужно присоединить файл Ws2_32 (который используется Winsock'ом). Делается это просто: в настройках линкера укажите файл Ws2_32 (без расширения). Настройки линкера находятся в (Code::Blocks)"Settings\Compiler...". Далее выбираете вкладку "Linker Settings", и смотрите в левое окно: Если есть что-то похожее на "Ws2_32", то все хорошо. Иначе нажмите кнопку "Add", и введите это название. Нажмите "ОК". Все, вы готовы использовать TXNetwork. Также можно указать опцию компилятора -lWs2_32</p>
<dl class="user"><dt><b>Подключение и инициализация</b></dt><dd>В коде библиотека подключается как обычно. При использовании с TXLib'ом подключайте TXNetwork до него. Например:</dd></dl>
<div class="fragment"><pre class="fragment"><span class="preprocessor">    #include &quot;<a class="code" href="a00059.htm">TXNetwork.h</a>&quot;</span>
<span class="preprocessor">    #include &quot;<a class="code" href="a00058.htm" title="Библиотека Тупого Художника (The Dumb Artist Library, TX Library, TXLib).">TXLib.h</a>&quot;</span>
</pre></div><p>Разберем пример пересылки <small>&#160;</small><span class="s"> кота </span><small>&#160;</small> строки.</p>
<p>Первый файл - файл протокола общения. В нем описываются общие части клиента и сервера, а также сам порядок общения.</p>
<div class="fragment"><pre class="fragment">    <span class="comment">// 1. server -&gt; client: Message (char[Message_size])</span>
    <span class="comment">// 2. server &lt;- client: Message (char[Message_size])</span>

<span class="preprocessor">    #include &quot;<a class="code" href="a00059.htm">TXNetwork.h</a>&quot;</span>
<span class="preprocessor">    #include &quot;<a class="code" href="a00058.htm" title="Библиотека Тупого Художника (The Dumb Artist Library, TX Library, TXLib).">TXlib.h</a>&quot;</span>

    <span class="keyword">const</span> <span class="keywordtype">size_t</span> Message_size = 256;
</pre></div><p>Второй файл - пример клиента. В начале идет подключение файла протокола и определение IP адреса.</p>
<div class="fragment"><pre class="fragment"><span class="preprocessor">    #include &quot;proto.h&quot;</span>
<span class="preprocessor">    #define SERVER_IP &quot;localhost&quot; // IP адрес писать здесь. Например: &quot;192.168.0.1&quot;</span>
</pre></div><p>Далее объявляется main, открывается окно и печатается приветственное сообщение.</p>
<div class="fragment"><pre class="fragment">    <span class="keywordtype">int</span> main()
    {
    <a class="code" href="a00081.htm#gafce21ce98474d5559f316b3d47cdbfab" title="Создание окна рисования">txCreateWindow</a> (1024, 768);

    printf (<span class="stringliteral">&quot;Searching for server...\n&quot;</span>);
</pre></div><p>Тут начинается использование <small>&#160;</small><span class="s"> черной магии </span><small>&#160;</small> txNetwork'a. Объявляется и создается сокет.</p>
<div class="fragment"><pre class="fragment">    <a class="code" href="a00015.htm" title="Cокет TXLib&amp;#39;a.">TX_SOCKET</a> client = <a class="code" href="a00077.htm#ga28c1c1600ff0df0a1b4443284e14b6d5" title="Создаёт сокет TXNetwork.">txCreateSocket</a> (<a class="code" href="a00077.htm#gga0696d269feb958d9f6fa2d0e1cf7e517a5594ab6ae4c1de966d629c79fd2ffc58" title="Сокет является клиентом.">TX_CLIENT</a>, SERVER_IP);
</pre></div><p>Далее создается буфер обмена.</p>
<div class="fragment"><pre class="fragment">    <span class="keywordtype">char</span> str[Message_size] = <span class="stringliteral">&quot;&quot;</span>;
</pre></div><p>Теперь принимаем строку от клиента и записываем ее в свежесозданный буфер.</p>
<div class="fragment"><pre class="fragment">    <a class="code" href="a00077.htm#gaf700cdda64317854f43186f0cfa003a1" title="Функция для приема данных через сокет">txRecvFrom</a> (client, str, Message_size);
</pre></div><p>Выводим полученную строку на экран и вводим ту строку, которую мы хотим отправить серверу.</p>
<div class="fragment"><pre class="fragment">    printf (<span class="stringliteral">&quot;in: %s\nout: &quot;</span>, str);
    scanf (<span class="stringliteral">&quot;%s&quot;</span>, str);
</pre></div><p>Отправляем строку серверу и завершаемся.</p>
<div class="fragment"><pre class="fragment">    <a class="code" href="a00077.htm#gab1932ecc57580c15659f0cc01b695262" title="Функция для отправки данных через сокет">txSendTo</a> (client, str, Message_size);

    <span class="keywordflow">return</span> 0;
    }
</pre></div><p>В коде сервера все аналогично, за исключением порядка пересылки строк. Далее представлен весь код примеров.</p>
<hr/>
 <h2><a class="anchor" id="Example0_Client_Code"></a>
Файл: client.cpp - код клиента.</h2>
<div class="fragment"><pre class="fragment">














<span class="comment">// client.cpp</span>

<span class="preprocessor">#include &quot;proto.h&quot;</span>

<span class="preprocessor">#define SERVER_IP &quot;localhost&quot; //IP адрес писать здесь.</span>
<span class="preprocessor"></span>
<span class="keywordtype">int</span> main()
{
<a class="code" href="a00081.htm#gafce21ce98474d5559f316b3d47cdbfab" title="Создание окна рисования">txCreateWindow</a> (1024, 768);

printf (<span class="stringliteral">&quot;Searching for server...\n&quot;</span>);
<a class="code" href="a00015.htm" title="Cокет TXLib&amp;#39;a.">TX_SOCKET</a> client = <a class="code" href="a00077.htm#ga28c1c1600ff0df0a1b4443284e14b6d5" title="Создаёт сокет TXNetwork.">txCreateSocket</a> (<a class="code" href="a00077.htm#gga0696d269feb958d9f6fa2d0e1cf7e517a5594ab6ae4c1de966d629c79fd2ffc58" title="Сокет является клиентом.">TX_CLIENT</a>, SERVER_IP);

<span class="keywordtype">char</span> str[Message_size] = <span class="stringliteral">&quot;&quot;</span>;

<a class="code" href="a00077.htm#gaf700cdda64317854f43186f0cfa003a1" title="Функция для приема данных через сокет">txRecvFrom</a> (client, str, Message_size);
printf (<span class="stringliteral">&quot;in: %s\nout: &quot;</span>, str);

scanf (<span class="stringliteral">&quot;%s&quot;</span>, str);
<a class="code" href="a00077.htm#gab1932ecc57580c15659f0cc01b695262" title="Функция для отправки данных через сокет">txSendTo</a> (client, str, Message_size);

<span class="keywordflow">return</span> 0;
}
</pre></div><hr/>
 <h2><a class="anchor" id="Example0_Server_Code"></a>
Файл: server.cpp - код клиента.</h2>
<div class="fragment"><pre class="fragment">












<span class="comment">// server.cpp</span>

<span class="preprocessor">#include &quot;proto.h&quot;</span>

<span class="keywordtype">int</span> main()
{
<a class="code" href="a00081.htm#gafce21ce98474d5559f316b3d47cdbfab" title="Создание окна рисования">txCreateWindow</a> (1024, 768);

printf (<span class="stringliteral">&quot;Searching for client...\n&quot;</span>);
<a class="code" href="a00015.htm" title="Cокет TXLib&amp;#39;a.">TX_SOCKET</a> client = <a class="code" href="a00077.htm#ga28c1c1600ff0df0a1b4443284e14b6d5" title="Создаёт сокет TXNetwork.">txCreateSocket</a> (<a class="code" href="a00077.htm#gga0696d269feb958d9f6fa2d0e1cf7e517a348f2bd7cd4f969b024f32d9cb4c417c" title="Сокет является сервером, создается первым.">TX_SERVER</a>, <span class="stringliteral">&quot;&quot;</span>);

<span class="keywordtype">char</span> str[Message_size] = <span class="stringliteral">&quot;&quot;</span>;

printf (<span class="stringliteral">&quot;out: &quot;</span>);
scanf (<span class="stringliteral">&quot;%s&quot;</span>, str);
<a class="code" href="a00077.htm#gab1932ecc57580c15659f0cc01b695262" title="Функция для отправки данных через сокет">txSendTo</a> (client, str, Message_size);

<a class="code" href="a00077.htm#gaf700cdda64317854f43186f0cfa003a1" title="Функция для приема данных через сокет">txRecvFrom</a> (client, str, Message_size);
printf (<span class="stringliteral">&quot;in: %s\n&quot;</span>, str);

<span class="keywordflow">return</span> 0;
}
</pre></div><hr/>
 <h2><a class="anchor" id="Example0_Proto_Code"></a>
Файл: proto.h - общие структуры и данные сервера и клиента.</h2>
<div class="fragment"><pre class="fragment">










<span class="comment">// proto.h</span>

<span class="comment">// 1. server -&gt; client: Message (char[Message_size])</span>
<span class="comment">// 2. server &lt;- client: Message (char[Message_size])</span>

<span class="preprocessor">#include &quot;<a class="code" href="a00059.htm">TXNetwork.h</a>&quot;</span>
<span class="preprocessor">#include &quot;<a class="code" href="a00058.htm" title="Библиотека Тупого Художника (The Dumb Artist Library, TX Library, TXLib).">TXLib.h</a>&quot;</span>

<span class="keyword">const</span> <span class="keywordtype">size_t</span> Message_size = 256;
</pre></div> </div></div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
<!-- --------------------------------------------------------------------------
  Doxygen_HTM.htm
  $Version: 00173a, Revision: 165 $
  $Copyright: (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru> $
  $Date: 2020-03-26 02:25:56 +0400 $
 -------------------------------------------------------------------------- -->

<table class="" width="100%"><tr valign="top">

  <td align="left">
    <small><a href="http://orphus.ru">Нашли ошибку? Выделите ее мышкой и нажмите Ctrl+ENTER. &copy;&#160;Orphus.ru.</a></small><br>
    <a href="http://orphus.ru" id="orphus" target="_blank"><img class = "footer" alt="Orphus" src="http://storage.ded32.net.ru/orphus.gif" border="0"></a>
    </td>

  <td align="right">
    Документация по TX Library. Дата: Thu Aug 13 2020 00:46:50. Создано&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.3
    <img src="http://storage.ded32.net.ru/stat/TXLib-Help.chm" width=1px height=1px border="0">
    </td>
  </tr></table>

</ul>
</div>

<script type="text/javascript">var gaJsHost = (("https:" == document.location.protocol)? "https://ssl." : "http://www."); document.write (unescape ("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); try { var pageTracker = _gat._getTracker ("UA-7927138-1"); pageTracker._trackPageview(); } catch (err) {}</script>
<script type="text/javascript" src="http://storage.ded32.net.ru/orphus.js"></script>

</body>
</html>
