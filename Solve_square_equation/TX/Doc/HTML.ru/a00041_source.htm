<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>TX Library: Исходный файл Movie.cpp</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript">
$(document).ready(initResizable);
</script>
<link href="Doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!-- Создано системой Doxygen 1.7.3 -->
<div id="top">
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="TXLib.png"></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">TX Library&#160;<span id="projectnumber">Help &ndash; Version: 00173a, Revision: 165</span></div>
   <div id="projectbrief"><s>&nbsp;ALL&nbsp;</s> Windows graphics in a sandbox</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('a00041.htm','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<h1>Movie.cpp</h1>  </div>
</div>
<div class="contents">
<a href="a00041.htm">См. документацию.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">//{===========================================================================</span>
<a name="l00011"></a>00011 <span class="comment"></span><span class="comment">//          (C) Никита Уваров, 6 класс, 2009</span>
<a name="l00012"></a>00012 <span class="comment">//}===========================================================================</span>
<a name="l00013"></a>00013 
<a name="l00014"></a>00014 <span class="preprocessor">#include &quot;TXLib.h&quot;</span>
<a name="l00015"></a>00015 
<a name="l00016"></a>00016 <span class="preprocessor">#if !defined (_TX_VER) || (_TX_VER &lt; 0x172a0000)</span>
<a name="l00017"></a>00017 <span class="preprocessor"></span><span class="preprocessor">#error Must use TXLib.h version &gt;= 1.72 to compile this. -- Ded</span>
<a name="l00018"></a>00018 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00019"></a>00019 <span class="preprocessor"></span>
<a name="l00020"></a>00020 <span class="comment">//============================================================================</span>
<a name="l00021"></a>00021 
<a name="l00022"></a>00022 <span class="comment">// Utilities</span>
<a name="l00023"></a>00023 
<a name="l00024"></a>00024 COLORREF mixColor (COLORREF first, COLORREF second, <span class="keywordtype">int</span> percentage);
<a name="l00025"></a>00025 COLORREF getTransparentColor (COLORREF toSet, COLORREF back, <span class="keywordtype">int</span> alpha);
<a name="l00026"></a>00026 
<a name="l00027"></a>00027 RECT convert (<span class="keywordtype">int</span> cameraX, <span class="keywordtype">int</span> cameraY, RECT <span class="keywordtype">object</span>);
<a name="l00028"></a>00028 <span class="keywordtype">bool</span> in (RECT in, POINT toCheck);
<a name="l00029"></a>00029 <span class="keywordtype">bool</span> needToDraw (RECT what);
<a name="l00030"></a>00030 
<a name="l00031"></a>00031 <span class="keywordtype">int</span> centerOutByLeftCorner (<span class="keyword">const</span> <span class="keywordtype">char</span>* toCenter);
<a name="l00032"></a>00032 
<a name="l00033"></a>00033 POINT getPoint (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y);
<a name="l00034"></a>00034 POINT getPointOnEllipse (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> w, <span class="keywordtype">int</span> h, <span class="keywordtype">double</span> angle);
<a name="l00035"></a>00035 
<a name="l00036"></a>00036 <span class="keywordtype">int</span> sqr (<span class="keywordtype">int</span> a);
<a name="l00037"></a>00037 <span class="keywordtype">int</span> getRandom (<span class="keywordtype">int</span> min, <span class="keywordtype">int</span> max);
<a name="l00038"></a>00038 <span class="keywordtype">int</span> getMainLoopBasedValue (<span class="keywordtype">int</span> mainLoop, <span class="keywordtype">int</span> from, <span class="keywordtype">int</span> to);
<a name="l00039"></a>00039 
<a name="l00040"></a>00040 <span class="keywordtype">double</span> DELAY = -1;
<a name="l00041"></a>00041 <span class="keywordtype">int</span>    SPEED =  1;
<a name="l00042"></a>00042 
<a name="l00043"></a>00043 <span class="keywordtype">void</span> doSleep (<span class="keywordtype">int</span> time);
<a name="l00044"></a>00044 
<a name="l00045"></a>00045 <span class="comment">// Loading and deleting</span>
<a name="l00046"></a>00046 
<a name="l00047"></a>00047 <span class="keywordtype">void</span> doHDCPreparations();
<a name="l00048"></a>00048 <span class="keywordtype">void</span> deleteDCs();
<a name="l00049"></a>00049 
<a name="l00050"></a>00050 FILE* sourceFile      = NULL;
<a name="l00051"></a>00051 HDC*  sourceCodeParts = NULL;
<a name="l00052"></a>00052 <span class="keywordtype">int</span>   partsAmount     = 0;
<a name="l00053"></a>00053 
<a name="l00054"></a>00054 <span class="keywordtype">void</span> initIO();
<a name="l00055"></a>00055 HDC  readNextSourceCodePart();
<a name="l00056"></a>00056 <span class="keywordtype">void</span> readCodePro();
<a name="l00057"></a>00057 <span class="keywordtype">void</span> releaseScrollingSource();
<a name="l00058"></a>00058 
<a name="l00059"></a>00059 <span class="comment">// Trigonometric pack</span>
<a name="l00060"></a>00060 
<a name="l00061"></a>00061 <span class="keywordtype">int</span> pointOfRest_x = 0, pointOfRest_y = 0;
<a name="l00062"></a>00062 <span class="keywordtype">double</span> sinTable[360] = {0}, cosTable[360] = {0};
<a name="l00063"></a>00063 
<a name="l00064"></a>00064 <span class="keywordtype">void</span> calculateTables();
<a name="l00065"></a>00065 
<a name="l00066"></a>00066 <span class="keywordtype">int</span> trigonometricGetNormalAngle (<span class="keywordtype">int</span> angle);
<a name="l00067"></a>00067 <span class="keywordtype">int</span> trigonometricGetAngleOfLine (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> x2, <span class="keywordtype">int</span> y2);
<a name="l00068"></a>00068 
<a name="l00069"></a>00069 <span class="keywordtype">void</span> trigonometricSetPointOfRest (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y);
<a name="l00070"></a>00070 <span class="keywordtype">void</span> trigonometricMove (<span class="keywordtype">int</span> angle, <span class="keywordtype">int</span> lenght);
<a name="l00071"></a>00071 <span class="keywordtype">void</span> trigonometricDrawLine (<span class="keywordtype">int</span> angle, <span class="keywordtype">int</span> lenght);
<a name="l00072"></a>00072 <span class="keywordtype">void</span> trigonometricDrawLineAndReturn (<span class="keywordtype">int</span> angle, <span class="keywordtype">int</span> lenght);
<a name="l00073"></a>00073 
<a name="l00074"></a>00074 <span class="comment">// Lightning engine</span>
<a name="l00075"></a>00075 
<a name="l00076"></a>00076 <span class="keyword">struct </span>Lightning;
<a name="l00077"></a>00077 
<a name="l00078"></a>00078 <span class="keywordtype">void</span> lightningEngineLoop();
<a name="l00079"></a>00079 <span class="keywordtype">void</span> drawElectra (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> angle, <span class="keywordtype">int</span> nOfSteps, <span class="keywordtype">int</span> stepLenght, <span class="keywordtype">int</span> randomness, <span class="keywordtype">int</span> thickness, COLORREF center, COLORREF border, <span class="keywordtype">int</span> chance);
<a name="l00080"></a>00080 
<a name="l00081"></a>00081 <span class="comment">// Matrix engine &amp; Assembler randomizing system</span>
<a name="l00082"></a>00082 
<a name="l00083"></a>00083 <span class="keyword">const</span> <span class="keywordtype">char</span>* oneRegisterCommands[] = { <span class="stringliteral">&quot;push&quot;</span>, <span class="stringliteral">&quot;pop&quot;</span>, <span class="stringliteral">&quot;not&quot;</span>, <span class="stringliteral">&quot;inc&quot;</span>, <span class="stringliteral">&quot;dec&quot;</span> };
<a name="l00084"></a>00084 <span class="keyword">const</span> <span class="keywordtype">char</span>* twoRegisterCommands[] = { <span class="stringliteral">&quot;mov&quot;</span>, <span class="stringliteral">&quot;add&quot;</span>, <span class="stringliteral">&quot;sub&quot;</span>, <span class="stringliteral">&quot;mul&quot;</span>, <span class="stringliteral">&quot;div&quot;</span>, <span class="stringliteral">&quot;or&quot;</span>, <span class="stringliteral">&quot;and&quot;</span>, <span class="stringliteral">&quot;xor&quot;</span> };
<a name="l00085"></a>00085 <span class="keyword">const</span> <span class="keywordtype">char</span>* functionNames[]       = { <span class="stringliteral">&quot;hello&quot;</span>, <span class="stringliteral">&quot;f&quot;</span>, <span class="stringliteral">&quot;label&quot;</span>, <span class="stringliteral">&quot;forHelp&quot;</span>, <span class="stringliteral">&quot;Ded&quot;</span>, <span class="stringliteral">&quot;function&quot;</span>, <span class="stringliteral">&quot;main&quot;</span> };
<a name="l00086"></a>00086 <span class="keyword">const</span> <span class="keywordtype">char</span>* registers[]           = { <span class="stringliteral">&quot;AX&quot;</span>, <span class="stringliteral">&quot;BX&quot;</span>, <span class="stringliteral">&quot;CX&quot;</span>, <span class="stringliteral">&quot;DX&quot;</span>, <span class="stringliteral">&quot;SI&quot;</span>, <span class="stringliteral">&quot;DI&quot;</span> };
<a name="l00087"></a>00087 
<a name="l00088"></a>00088 <span class="keyword">const</span> <span class="keywordtype">char</span>* getRandomRegister();
<a name="l00089"></a>00089 <span class="keyword">const</span> <span class="keywordtype">char</span>* getRandomCommand();
<a name="l00090"></a>00090 
<a name="l00091"></a>00091 <span class="keywordtype">int</span>*   matrixElementsYPositions = NULL;
<a name="l00092"></a>00092 <span class="keywordtype">char</span>** matrixElementsNames      = NULL;
<a name="l00093"></a>00093 <span class="keywordtype">int</span>    matrixElementsNumber     = 0;
<a name="l00094"></a>00094 
<a name="l00095"></a>00095 <span class="keywordtype">void</span> matrixFireball (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keyword">const</span> <span class="keywordtype">char</span>* text, <span class="keywordtype">int</span> len, <span class="keywordtype">int</span> textHeight, COLORREF color);
<a name="l00096"></a>00096 <span class="keywordtype">void</span> matrixEngineInit (<span class="keywordtype">int</span> count);
<a name="l00097"></a>00097 <span class="keywordtype">void</span> matrixEngineLoop (<span class="keywordtype">int</span> spd, COLORREF col);
<a name="l00098"></a>00098 <span class="keywordtype">void</span> destroyBinaryStairsAndMatrix();
<a name="l00099"></a>00099 
<a name="l00100"></a>00100 <span class="comment">// Binary stairs</span>
<a name="l00101"></a>00101 
<a name="l00102"></a>00102 <span class="keywordtype">char</span>** binaryStairsGrounds = NULL;
<a name="l00103"></a>00103 <span class="keywordtype">int</span>    binaryStairsHeight  = 0;
<a name="l00104"></a>00104 
<a name="l00105"></a>00105 <span class="keyword">const</span> <span class="keywordtype">char</span>* getStairsGround (<span class="keywordtype">int</span> lenght);
<a name="l00106"></a>00106 <span class="keywordtype">void</span> generateBinaryStairs (<span class="keywordtype">int</span> difference, <span class="keywordtype">int</span> flats);
<a name="l00107"></a>00107 <span class="keywordtype">void</span> drawBinaryStairs (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, COLORREF color);
<a name="l00108"></a>00108 
<a name="l00109"></a>00109 <span class="comment">// Graphics</span>
<a name="l00110"></a>00110 
<a name="l00111"></a>00111 <span class="comment">// Graphic utilities</span>
<a name="l00112"></a>00112 
<a name="l00113"></a>00113 <span class="keywordtype">void</span> drawGradientLine (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> x2, <span class="keywordtype">int</span> y2, <span class="keywordtype">int</span> thickness, COLORREF border, COLORREF center);
<a name="l00114"></a>00114 <span class="keywordtype">void</span> drawGradientRectangle (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> x2, <span class="keywordtype">int</span> y2, COLORREF topColor, COLORREF downColor);
<a name="l00115"></a>00115 <span class="keywordtype">void</span> drawGradientCircle (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> radius, COLORREF centerColor, COLORREF borderColor);
<a name="l00116"></a>00116 <span class="keywordtype">void</span> drawStripedCircle (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> stripeRadius, <span class="keywordtype">int</span> numberOfPairs, COLORREF fisrtStripe, COLORREF secondStripe);
<a name="l00117"></a>00117 <span class="keywordtype">void</span> drawPies (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> xsize, <span class="keywordtype">int</span> ysize, <span class="keywordtype">int</span> pieAngle, <span class="keywordtype">int</span> angleOffset, COLORREF color, COLORREF special, COLORREF border, <span class="keywordtype">int</span> thickness);
<a name="l00118"></a>00118 
<a name="l00119"></a>00119 <span class="comment">// Graphics</span>
<a name="l00120"></a>00120 
<a name="l00121"></a>00121 <span class="keywordtype">void</span> drawStickMan (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> height, <span class="keywordtype">int</span> hairIntensivity, <span class="keywordtype">int</span> hairLenght, <span class="keywordtype">int</span> walkingPosition,
<a name="l00122"></a>00122                    <span class="keywordtype">int</span> leftBase, <span class="keywordtype">int</span> leftSpecial, <span class="keywordtype">int</span> rightBase, <span class="keywordtype">int</span> rightSpecial, <span class="keywordtype">int</span> direction, <span class="keywordtype">int</span> walkingAngle,
<a name="l00123"></a>00123                    COLORREF bodyColor, COLORREF hairColor, COLORREF headColor, COLORREF eyeColor, <span class="keywordtype">int</span> rotation, <span class="keywordtype">int</span> bodyRot);
<a name="l00124"></a>00124 
<a name="l00125"></a>00125 <span class="keywordtype">void</span> drawTurtle (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> width, <span class="keywordtype">int</span> height, COLORREF shellColor, COLORREF stripesColor);
<a name="l00126"></a>00126 <span class="keywordtype">void</span> drawTurtleBody (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> width, <span class="keywordtype">int</span> height, <span class="keywordtype">int</span> walkingPos, COLORREF body, COLORREF border, COLORREF eye, COLORREF eyeBorder, HDC shell);
<a name="l00127"></a>00127 <span class="keywordtype">void</span> prepareTurtleShell (<span class="keywordtype">int</span> width, <span class="keywordtype">int</span> height, COLORREF baseColor, COLORREF specials, COLORREF border, <span class="keywordtype">int</span> thickness);
<a name="l00128"></a>00128 <span class="keywordtype">void</span> drawStyledTurtleShell (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> xStart, <span class="keywordtype">int</span> yStart, <span class="keywordtype">int</span> xFinal, <span class="keywordtype">int</span> yFinal, <span class="keywordtype">int</span> numberOfPies, <span class="keywordtype">int</span> pieRadius, <span class="keywordtype">int</span> offsetAngle, COLORREF color, COLORREF special, COLORREF border, <span class="keywordtype">int</span> thickness);
<a name="l00129"></a>00129 
<a name="l00130"></a>00130 <span class="keywordtype">void</span> drawPortalSystem (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> radius, <span class="keywordtype">int</span> everyRadius, <span class="keywordtype">int</span> vertexCount, <span class="keywordtype">int</span> bonus, COLORREF color, COLORREF alter, COLORREF back);
<a name="l00131"></a>00131 <span class="keywordtype">void</span> drawPortal (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> radius, <span class="keywordtype">int</span> each, <span class="keywordtype">int</span> bonusRot, COLORREF color, COLORREF alter);
<a name="l00132"></a>00132 
<a name="l00133"></a>00133 <span class="keywordtype">void</span> drawFlag (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> stickHeight, <span class="keyword">const</span> <span class="keywordtype">char</span>* text, COLORREF fill, COLORREF border);
<a name="l00134"></a>00134 
<a name="l00135"></a>00135 <span class="keywordtype">void</span> drawTree (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> trunkWidth, <span class="keywordtype">int</span> trunkHeight, <span class="keywordtype">int</span> leafRowNumber, <span class="keywordtype">int</span> leafsize, COLORREF borderColor, COLORREF fillColor, HDC fruit);
<a name="l00136"></a>00136 <span class="keywordtype">void</span> drawFruitRow (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> leafNumber, <span class="keywordtype">int</span> leafsize, HDC fruit);
<a name="l00137"></a>00137 <span class="keywordtype">void</span> drawLeafRow (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> leafNumber, <span class="keywordtype">int</span> leafsize);
<a name="l00138"></a>00138 <span class="keywordtype">void</span> drawLeafPart (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> size);
<a name="l00139"></a>00139 
<a name="l00140"></a>00140 <span class="keywordtype">int</span> rainLoop = 0;
<a name="l00141"></a>00141 
<a name="l00142"></a>00142 <span class="keywordtype">void</span> drawRain (<span class="keywordtype">int</span> columnsSpace, <span class="keywordtype">int</span> tearsSpace, <span class="keywordtype">int</span> tearsLenght, <span class="keywordtype">int</span> animationFrame, <span class="keywordtype">int</span> thickness, COLORREF color);
<a name="l00143"></a>00143 <span class="keywordtype">void</span> drawTearsRow (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> tearsLenght, <span class="keywordtype">int</span> space, <span class="keywordtype">int</span> offset);
<a name="l00144"></a>00144 <span class="keywordtype">void</span> drawCloud (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> width, <span class="keywordtype">int</span> height, <span class="keywordtype">int</span> everyAngle, <span class="keywordtype">int</span> everyWidth, <span class="keywordtype">int</span> everyHeight, COLORREF color);
<a name="l00145"></a>00145 
<a name="l00146"></a>00146 <span class="keywordtype">void</span> drawBaloon (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> radius, <span class="keywordtype">int</span> sizeOfStripe, COLORREF centerStripe, COLORREF secondStripe, COLORREF base, COLORREF border);
<a name="l00147"></a>00147 <span class="keywordtype">void</span> drawMountain (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> width, <span class="keywordtype">int</span> height, <span class="keywordtype">int</span> snowHeight, COLORREF ground, COLORREF snow, COLORREF border);
<a name="l00148"></a>00148 <span class="keywordtype">void</span> drawPrintingEffect (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keyword">const</span> <span class="keywordtype">char</span>* whatToPrint, <span class="keywordtype">int</span> howMany, COLORREF color);
<a name="l00149"></a>00149 <span class="keywordtype">void</span> printEffect (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keyword">const</span> <span class="keywordtype">char</span>* text, <span class="keywordtype">int</span> lenght, <span class="keywordtype">int</span> delay);
<a name="l00150"></a>00150 
<a name="l00151"></a>00151 <span class="comment">// Scenery graphics &amp; animations</span>
<a name="l00152"></a>00152 
<a name="l00153"></a>00153 <span class="keywordtype">int</span> getTurtleWalkPosition (<span class="keywordtype">int</span> rawPosition);
<a name="l00154"></a>00154 
<a name="l00155"></a>00155 <span class="keywordtype">void</span> drawScene (<span class="keywordtype">int</span> cameraX, <span class="keywordtype">int</span> cameraY);
<a name="l00156"></a>00156 
<a name="l00157"></a>00157 <span class="keywordtype">void</span> drawBaloonOnFirstScene (<span class="keywordtype">int</span> baloonx, <span class="keywordtype">int</span> baloony, <span class="keywordtype">int</span> camx, <span class="keywordtype">int</span> camy, <span class="keywordtype">int</span> baloonsize);
<a name="l00158"></a>00158 <span class="keywordtype">void</span> drawTurtlesOnFirstScene (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> slide);
<a name="l00159"></a>00159 <span class="keywordtype">void</span> drawEverythingWeather();
<a name="l00160"></a>00160 <span class="keywordtype">void</span> slideClouds (<span class="keywordtype">int</span> space, <span class="keywordtype">int</span> y);
<a name="l00161"></a>00161 
<a name="l00162"></a>00162 <span class="keywordtype">void</span> prepareMountains (COLORREF skyUp, COLORREF skyDown, COLORREF grassUp, COLORREF grassDown);
<a name="l00163"></a>00163 <span class="keywordtype">void</span> walkMountains (POINT* mountains, <span class="keywordtype">int</span> elems, <span class="keywordtype">int</span> manHeight);
<a name="l00164"></a>00164 <span class="keywordtype">void</span> walkLine (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> x2, <span class="keywordtype">int</span> y2, <span class="keywordtype">int</span> step, <span class="keywordtype">int</span> size);
<a name="l00165"></a>00165 <span class="keywordtype">void</span> electraSplash();
<a name="l00166"></a>00166 
<a name="l00167"></a>00167 <span class="keywordtype">int</span> logoPositionIdentifier = 0;
<a name="l00168"></a>00168 <span class="keywordtype">void</span> drawLogo();
<a name="l00169"></a>00169 
<a name="l00170"></a>00170 <span class="keywordtype">void</span> drawASMFlag (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y);
<a name="l00171"></a>00171 
<a name="l00172"></a>00172 <span class="keywordtype">void</span> lastTextEngineLoop (COLORREF color);
<a name="l00173"></a>00173 <span class="keywordtype">void</span> setTextSpeed (<span class="keywordtype">int</span> spd);
<a name="l00174"></a>00174 <span class="keywordtype">void</span> selectFont (<span class="keyword">const</span> <span class="keywordtype">char</span>* name, <span class="keywordtype">int</span> size, <span class="keywordtype">int</span> bold);
<a name="l00175"></a>00175 
<a name="l00176"></a>00176 <span class="comment">// Scenery</span>
<a name="l00177"></a>00177 
<a name="l00178"></a>00178 <span class="keywordtype">void</span> fromLogoToCPP();
<a name="l00179"></a>00179 <span class="keywordtype">void</span> fromAssemblerAndUpToTheVeryEnd();
<a name="l00180"></a>00180 
<a name="l00181"></a>00181 <span class="comment">// Other variables</span>
<a name="l00182"></a>00182 
<a name="l00183"></a>00183 HDC sunnyBackground_1 = NULL,
<a name="l00184"></a>00184     sunnyBackground_2 = NULL,
<a name="l00185"></a>00185     sunnyBackground_3 = NULL,
<a name="l00186"></a>00186     mountains_1       = NULL,
<a name="l00187"></a>00187     mountains_2       = NULL,
<a name="l00188"></a>00188     mountains_3       = NULL,
<a name="l00189"></a>00189     trueSunny_up      = NULL;
<a name="l00190"></a>00190 
<a name="l00191"></a>00191 HDC orange = NULL,
<a name="l00192"></a>00192     pear   = NULL,
<a name="l00193"></a>00193     apple  = NULL;
<a name="l00194"></a>00194 
<a name="l00195"></a>00195 HDC shellForLeaderTurtle = NULL,
<a name="l00196"></a>00196     shellForSecondTurtle = NULL,
<a name="l00197"></a>00197     shellForKid          = NULL;
<a name="l00198"></a>00198 
<a name="l00199"></a>00199 HDC leftCloudlySlide  = NULL,
<a name="l00200"></a>00200     rightCloudlySlide = NULL;
<a name="l00201"></a>00201 
<a name="l00202"></a>00202 <span class="keywordtype">int</span> PASCAL_LOGO_WIDTH = 0;
<a name="l00203"></a>00203 
<a name="l00204"></a>00204 <span class="keyword">const</span> COLORREF
<a name="l00205"></a>00205     SUNNYSKY_UP          = <a class="code" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (67 , 101, 255),
<a name="l00206"></a>00206     SUNNYSKY_DOWN        = <a class="code" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (213, 213, 255),
<a name="l00207"></a>00207     SUN_CENTER           = <a class="code" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (255, 255, 142),
<a name="l00208"></a>00208     SUN_BORDER           = <a class="code" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (255, 255, 0  ),
<a name="l00209"></a>00209     SUNNYGROUND_UP       = <a class="code" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (54 , 255, 78 ),
<a name="l00210"></a>00210     SUNNYGROUND_DOWN     = <a class="code" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (91 , 188, 0  ),
<a name="l00211"></a>00211     GREEN_LIGHT          = <a class="code" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (168, 230, 29 ),
<a name="l00212"></a>00212     GREEN_MEDIUM         = <a class="code" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (157, 187, 97 ),
<a name="l00213"></a>00213     GREEN_DARK           = <a class="code" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (37 , 177, 76 ),
<a name="l00214"></a>00214     LIGHT_ORANGE         = <a class="code" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (229, 170, 122),
<a name="l00215"></a>00215     TRUNK_MINIMUM        = <a class="code" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (250, 180, 150),
<a name="l00216"></a>00216     TRUNK_MAXIMUM        = <a class="code" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (255, 255, 255),
<a name="l00217"></a>00217     NORMAL_BROWN         = <a class="code" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (156, 90 , 60 ),
<a name="l00218"></a>00218     CLEAR_RED            = <a class="code" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (255, 0  , 0  );
<a name="l00219"></a>00219 
<a name="l00220"></a>00220 HDC scene[9][2] = {{0}};
<a name="l00221"></a>00221 
<a name="l00222"></a>00222 <span class="keywordtype">int</span> main()
<a name="l00223"></a>00223     {
<a name="l00224"></a>00224     <span class="keyword">const</span> <span class="keywordtype">char</span>* title  = <span class="stringliteral">&quot;Programmer&#39;s Way - Путь Программиста&quot;</span>;
<a name="l00225"></a>00225 
<a name="l00226"></a>00226     <a class="code" href="a00081.htm#gafce21ce98474d5559f316b3d47cdbfab" title="Создание окна рисования">txCreateWindow</a> (800, 600);
<a name="l00227"></a>00227     SetWindowText (<a class="code" href="a00081.htm#gafa31ebd8ed957c41713900a407497cf8" title="Возвращает дескриптор окна рисования">txWindow</a>(), title);
<a name="l00228"></a>00228     <a class="code" href="a00081.htm#gae92e621aaed81f90e4d142356e38762a" title="Блокирует обновление изображения окна, во избежание мигания.">txBegin</a>();
<a name="l00229"></a>00229 
<a name="l00230"></a>00230     printf (<span class="stringliteral">&quot;\nStarting: %s...\n&quot;</span>, title);
<a name="l00231"></a>00231     Sleep (500);
<a name="l00232"></a>00232     doSleep (0);
<a name="l00233"></a>00233 
<a name="l00234"></a>00234     calculateTables();
<a name="l00235"></a>00235     doHDCPreparations();
<a name="l00236"></a>00236 
<a name="l00237"></a>00237     <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a9f0adfcb24eeb418fc39fe950db65ec8" title="Черный цвет.">TX_BLACK</a>);
<a name="l00238"></a>00238     <a class="code" href="a00081.htm#ga78e83baeb6a02d5fa33dd8b062e513d9" title="Стирает холст текущим цветом заполнения.">txClear</a>();
<a name="l00239"></a>00239 
<a name="l00240"></a>00240     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; 50; i++) printf (<span class="stringliteral">&quot;\n&quot;</span>);
<a name="l00241"></a>00241     <a class="code" href="a00081.htm#gaa148d2040d20ed74cf46ab186c35f9ed" title="Запрещает или разрешает рисование мигающего курсора в окне.">txTextCursor</a> (<span class="keyword">false</span>);
<a name="l00242"></a>00242 
<a name="l00243"></a>00243     fromLogoToCPP();
<a name="l00244"></a>00244     fromAssemblerAndUpToTheVeryEnd();
<a name="l00245"></a>00245 
<a name="l00246"></a>00246     <a class="code" href="a00081.htm#ga809dc04afd5348247846ee01ce9a06e6" title="Разблокирует обновление окна, заблокированное функцией txBegin().">txEnd</a>();
<a name="l00247"></a>00247     <span class="keywordflow">return</span> 0;
<a name="l00248"></a>00248     }
<a name="l00249"></a>00249 
<a name="l00250"></a>00250 <span class="keywordtype">void</span> doSleep (<span class="keywordtype">int</span> time)
<a name="l00251"></a>00251     {
<a name="l00252"></a>00252     <span class="keywordflow">if</span> (DELAY &lt; 0)
<a name="l00253"></a>00253         {
<a name="l00254"></a>00254         <span class="keywordtype">double</span> performance = <a class="code" href="a00081.htm#ga49983bddca35d531c521cf04c6c2449f" title="Оценивает скорость работы компьютера.">txQueryPerformance</a>();
<a name="l00255"></a>00255 
<a name="l00256"></a>00256         DELAY = performance * 2.5;
<a name="l00257"></a>00257         SPEED = (int) (10/DELAY + 1.5);
<a name="l00258"></a>00258         }
<a name="l00259"></a>00259 
<a name="l00260"></a>00260     <span class="keywordtype">double</span> delay = (GetAsyncKeyState (VK_RIGHT)? 0 : DELAY);
<a name="l00261"></a>00261 
<a name="l00262"></a>00262     <a class="code" href="a00081.htm#ga6c293f0b0f71efebdeeb0b56a97ba50c" title="Задерживает выполнение программы на определенное время.">txSleep</a> (time * delay);
<a name="l00263"></a>00263 
<a name="l00264"></a>00264     <span class="keywordflow">while</span> (GetAsyncKeyState (VK_DOWN)) <a class="code" href="a00081.htm#ga6c293f0b0f71efebdeeb0b56a97ba50c" title="Задерживает выполнение программы на определенное время.">txSleep</a> (10);
<a name="l00265"></a>00265 
<a name="l00266"></a>00266     <span class="keywordflow">if</span> (GetAsyncKeyState (VK_LEFT)) MessageBox (<a class="code" href="a00081.htm#gafa31ebd8ed957c41713900a407497cf8" title="Возвращает дескриптор окна рисования">txWindow</a>(), <span class="stringliteral">&quot;You need a time machine to do this    &quot;</span>, <span class="stringliteral">&quot;Reality&quot;</span>, MB_ICONEXCLAMATION);
<a name="l00267"></a>00267     }
<a name="l00268"></a>00268 
<a name="l00269"></a>00269 COLORREF mixColor (COLORREF first, COLORREF second, <span class="keywordtype">int</span> percentage)
<a name="l00270"></a>00270     {
<a name="l00271"></a>00271     <span class="keywordflow">return</span> <a class="code" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (<a class="code" href="a00081.htm#gac2b196b6826392229fa209e01817f941" title="Извлекает цветовую компоненту (цветовой канал) из смешанного цвета.">txExtractColor</a> (first, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a342ad901a39ab4b40f091f6699b64927" title="Темно-красный цвет. Слишком темный.">TX_RED</a>)   + (<a class="code" href="a00081.htm#gac2b196b6826392229fa209e01817f941" title="Извлекает цветовую компоненту (цветовой канал) из смешанного цвета.">txExtractColor</a> (second, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a342ad901a39ab4b40f091f6699b64927" title="Темно-красный цвет. Слишком темный.">TX_RED</a>)   - <a class="code" href="a00081.htm#gac2b196b6826392229fa209e01817f941" title="Извлекает цветовую компоненту (цветовой канал) из смешанного цвета.">txExtractColor</a> (first, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a342ad901a39ab4b40f091f6699b64927" title="Темно-красный цвет. Слишком темный.">TX_RED</a>))   / 100 * percentage,
<a name="l00272"></a>00272                 <a class="code" href="a00081.htm#gac2b196b6826392229fa209e01817f941" title="Извлекает цветовую компоненту (цветовой канал) из смешанного цвета.">txExtractColor</a> (first, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aa13a0e0eb4587540bd06cb5d55083032" title="Зеленый цвет.">TX_GREEN</a>) + (<a class="code" href="a00081.htm#gac2b196b6826392229fa209e01817f941" title="Извлекает цветовую компоненту (цветовой канал) из смешанного цвета.">txExtractColor</a> (second, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aa13a0e0eb4587540bd06cb5d55083032" title="Зеленый цвет.">TX_GREEN</a>) - <a class="code" href="a00081.htm#gac2b196b6826392229fa209e01817f941" title="Извлекает цветовую компоненту (цветовой канал) из смешанного цвета.">txExtractColor</a> (first, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aa13a0e0eb4587540bd06cb5d55083032" title="Зеленый цвет.">TX_GREEN</a>)) / 100 * percentage,
<a name="l00273"></a>00273                 <a class="code" href="a00081.htm#gac2b196b6826392229fa209e01817f941" title="Извлекает цветовую компоненту (цветовой канал) из смешанного цвета.">txExtractColor</a> (first, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aac23422a0b96bfc917484ba1fb0990de" title="Темно-синий цвет. Плохо виден.">TX_BLUE</a>)  + (<a class="code" href="a00081.htm#gac2b196b6826392229fa209e01817f941" title="Извлекает цветовую компоненту (цветовой канал) из смешанного цвета.">txExtractColor</a> (second, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aac23422a0b96bfc917484ba1fb0990de" title="Темно-синий цвет. Плохо виден.">TX_BLUE</a>)  - <a class="code" href="a00081.htm#gac2b196b6826392229fa209e01817f941" title="Извлекает цветовую компоненту (цветовой канал) из смешанного цвета.">txExtractColor</a> (first, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aac23422a0b96bfc917484ba1fb0990de" title="Темно-синий цвет. Плохо виден.">TX_BLUE</a>))  / 100 * percentage);
<a name="l00274"></a>00274     }
<a name="l00275"></a>00275 
<a name="l00276"></a>00276 <span class="keywordtype">int</span> sqr (<span class="keywordtype">int</span> a)
<a name="l00277"></a>00277     {
<a name="l00278"></a>00278     <span class="keywordflow">return</span> a * a;
<a name="l00279"></a>00279     }
<a name="l00280"></a>00280 
<a name="l00281"></a>00281 <span class="keywordtype">void</span> drawGradientLine (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> x2, <span class="keywordtype">int</span> y2, <span class="keywordtype">int</span> thickness, COLORREF border, COLORREF center)
<a name="l00282"></a>00282     {
<a name="l00283"></a>00283     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> n = thickness; n &gt; 0; n--)
<a name="l00284"></a>00284         {
<a name="l00285"></a>00285         <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (getTransparentColor (border, center, 100 / n), n);
<a name="l00286"></a>00286         <a class="code" href="a00081.htm#gaaee38df6f38b6f1729b9db1c4ac23e65" title="Рисует линию.">txLine</a> (x, y, x2, y2);
<a name="l00287"></a>00287         }
<a name="l00288"></a>00288     }
<a name="l00289"></a>00289 
<a name="l00290"></a>00290 <span class="keywordtype">void</span> electraSplash()
<a name="l00291"></a>00291     {
<a name="l00292"></a>00292     <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a9f0adfcb24eeb418fc39fe950db65ec8" title="Черный цвет.">TX_BLACK</a>);
<a name="l00293"></a>00293     <a class="code" href="a00081.htm#ga78e83baeb6a02d5fa33dd8b062e513d9" title="Стирает холст текущим цветом заполнения.">txClear</a>();
<a name="l00294"></a>00294 
<a name="l00295"></a>00295     drawElectra (0, 0, 126, 50, 20, 45, 5, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a2331cdb79541487869e7c2445a2eb5f0" title="Желтый цвет.">TX_YELLOW</a>, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025" title="Белый цвет.">TX_WHITE</a>, 50);
<a name="l00296"></a>00296     doSleep (20);
<a name="l00297"></a>00297     }
<a name="l00298"></a>00298 
<a name="l00299"></a>00299 <span class="keywordtype">void</span> slideClouds (<span class="keywordtype">int</span> space, <span class="keywordtype">int</span> y)
<a name="l00300"></a>00300     {
<a name="l00301"></a>00301     <a class="code" href="a00081.htm#ga54f48f0bcb9453add294e0a9f8b1fb1d" title="Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом прозрачности...">txTransparentBlt</a> (<a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), - (space / 2 + 400), y, 800, 600, leftCloudlySlide,  0, 0, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a9f0adfcb24eeb418fc39fe950db65ec8" title="Черный цвет.">TX_BLACK</a>);
<a name="l00302"></a>00302     <a class="code" href="a00081.htm#ga54f48f0bcb9453add294e0a9f8b1fb1d" title="Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом прозрачности...">txTransparentBlt</a> (<a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(),    space / 2 + 400,  y, 800, 600, rightCloudlySlide, 0, 0, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a9f0adfcb24eeb418fc39fe950db65ec8" title="Черный цвет.">TX_BLACK</a>);
<a name="l00303"></a>00303     }
<a name="l00304"></a>00304 
<a name="l00305"></a>00305 <span class="keywordtype">void</span> drawStyledTurtleShell (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> xStart, <span class="keywordtype">int</span> yStart, <span class="keywordtype">int</span> xFinal, <span class="keywordtype">int</span> yFinal, <span class="keywordtype">int</span> numberOfPies, <span class="keywordtype">int</span> pieRadius, <span class="keywordtype">int</span> offsetAngle, COLORREF color, COLORREF special, COLORREF border, <span class="keywordtype">int</span> thickness)
<a name="l00306"></a>00306     {
<a name="l00307"></a>00307     <span class="keywordtype">int</span> yChange = (xStart - xFinal) / numberOfPies;
<a name="l00308"></a>00308     <span class="keywordtype">int</span> xChange = (yStart - yFinal) / numberOfPies;
<a name="l00309"></a>00309 
<a name="l00310"></a>00310     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; numberOfPies; i++)
<a name="l00311"></a>00311         drawPies (x, y, xStart-xChange*i, yStart-yChange*i, pieRadius, i*offsetAngle, color, special, border, thickness);
<a name="l00312"></a>00312 
<a name="l00313"></a>00313     <a class="code" href="a00081.htm#gaaf82e7c5a0fd06548f42c757f73d3dae" title="Рисует эллипс.">txEllipse</a> (x-xStart/xFinal, y-yStart/yFinal, x+xStart/xFinal, y+yStart/yFinal);
<a name="l00314"></a>00314     }
<a name="l00315"></a>00315 
<a name="l00316"></a>00316 <span class="keywordtype">void</span> drawPortalSystem (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> radius, <span class="keywordtype">int</span> everyRadius, <span class="keywordtype">int</span> vertexCount, <span class="keywordtype">int</span> bonus, COLORREF color, COLORREF alter, COLORREF back)
<a name="l00317"></a>00317     {
<a name="l00318"></a>00318     drawGradientCircle (x, y, radius, color, back);
<a name="l00319"></a>00319 
<a name="l00320"></a>00320     <span class="keywordtype">int</span> numberSign = 1;
<a name="l00321"></a>00321     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> r = radius; r &gt; 0; r -= everyRadius)
<a name="l00322"></a>00322         {
<a name="l00323"></a>00323         drawPortal (x, y, r, 360 / vertexCount, numberSign * bonus, color, alter);
<a name="l00324"></a>00324         numberSign = -numberSign;
<a name="l00325"></a>00325         }
<a name="l00326"></a>00326     }
<a name="l00327"></a>00327 
<a name="l00328"></a>00328 <span class="keywordtype">void</span> drawLogo()
<a name="l00329"></a>00329     {
<a name="l00330"></a>00330     logoPositionIdentifier += SPEED;
<a name="l00331"></a>00331 
<a name="l00332"></a>00332     <span class="keywordtype">int</span> positionBonus = 0;
<a name="l00333"></a>00333     <span class="keywordflow">if</span>      (logoPositionIdentifier &gt; 500) <span class="keywordflow">return</span>;
<a name="l00334"></a>00334     <span class="keywordflow">else</span> <span class="keywordflow">if</span> (logoPositionIdentifier &gt; 300) positionBonus = 500 - logoPositionIdentifier;
<a name="l00335"></a>00335     <span class="keywordflow">else</span> <span class="keywordflow">if</span> (logoPositionIdentifier &gt; 200) positionBonus = 200;
<a name="l00336"></a>00336     <span class="keywordflow">else</span>                                   positionBonus = logoPositionIdentifier;
<a name="l00337"></a>00337 
<a name="l00338"></a>00338     positionBonus *= 4;
<a name="l00339"></a>00339 
<a name="l00340"></a>00340     <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aac23422a0b96bfc917484ba1fb0990de" title="Темно-синий цвет. Плохо виден.">TX_BLUE</a>);
<a name="l00341"></a>00341     <a class="code" href="a00081.htm#ga6689b9a89add9c5eb5cf54a8c86539a4" title="Выбирает текущий шрифт, его размер и другие атрибуты.">txSelectFont</a> (<span class="stringliteral">&quot;Comic Sans MS&quot;</span>, 80, 25, 1000);
<a name="l00342"></a>00342     <a class="code" href="a00081.htm#ga52e119361961d9eee33c176a3084e55d" title="Рисует текст.">txTextOut</a> (-100 - <a class="code" href="a00081.htm#gad5483eacac697420a84f66733e45ed02" title="Вычисляет ширину текстовой надписи.">txGetTextExtentX</a> (<span class="stringliteral">&quot;Programmer&#39;s Way&quot;</span>) + positionBonus, 100, <span class="stringliteral">&quot;Programmer&#39;s Way&quot;</span>);
<a name="l00343"></a>00343     <a class="code" href="a00081.htm#ga52e119361961d9eee33c176a3084e55d" title="Рисует текст.">txTextOut</a> (900 - positionBonus, 200, <span class="stringliteral">&quot;Путь Программиста&quot;</span>);
<a name="l00344"></a>00344     }
<a name="l00345"></a>00345 
<a name="l00346"></a>00346 <span class="keyword">struct </span>Lightning
<a name="l00347"></a>00347     {
<a name="l00348"></a>00348     <span class="keywordtype">int</span> x, y;
<a name="l00349"></a>00349     <span class="keywordtype">int</span> angle;
<a name="l00350"></a>00350     <span class="keywordtype">int</span> state;
<a name="l00351"></a>00351     COLORREF color;
<a name="l00352"></a>00352     };
<a name="l00353"></a>00353 
<a name="l00354"></a>00354 Lightning lightnings[5] = {{0}};
<a name="l00355"></a>00355 
<a name="l00356"></a>00356 <span class="keywordtype">void</span> lightningEngineLoop()
<a name="l00357"></a>00357     {
<a name="l00358"></a>00358     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; 5; i++)
<a name="l00359"></a>00359         {
<a name="l00360"></a>00360         <span class="keywordflow">if</span> (lightnings[i].state &gt; 0)
<a name="l00361"></a>00361             {
<a name="l00362"></a>00362             lightnings[i].state--;
<a name="l00363"></a>00363             drawElectra (lightnings[i].x, lightnings[i].y, lightnings[i].angle, getRandom (7, 15), getRandom (10, 20), 60, 4, lightnings[i].color, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025" title="Белый цвет.">TX_WHITE</a>, 30);
<a name="l00364"></a>00364             }
<a name="l00365"></a>00365         <span class="keywordflow">else</span> <span class="keywordflow">if</span> (getRandom (1, 200) == 1)
<a name="l00366"></a>00366             {
<a name="l00367"></a>00367             Lightning <a class="code" href="a00080.htm#gaa81c1c7c499d76619d5d9d3369560881" title="Генератор случайных чисел">random</a> = { getRandom ( 50, 750),
<a name="l00368"></a>00368                                  getRandom (  0, 150),
<a name="l00369"></a>00369                                  getRandom (135, 225),
<a name="l00370"></a>00370                                  getRandom (  2,  10),
<a name="l00371"></a>00371                                  getRandom (  1,   2) == 1? <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a2331cdb79541487869e7c2445a2eb5f0" title="Желтый цвет.">TX_YELLOW</a> : <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a3f59cd6ad2f1c2cea3f1b4f93baae64d" title="Бирюзовый цвет.">TX_CYAN</a> };
<a name="l00372"></a>00372 
<a name="l00373"></a>00373             lightnings[i] = <a class="code" href="a00080.htm#gaa81c1c7c499d76619d5d9d3369560881" title="Генератор случайных чисел">random</a>;
<a name="l00374"></a>00374             }
<a name="l00375"></a>00375         }
<a name="l00376"></a>00376     }
<a name="l00377"></a>00377 
<a name="l00378"></a>00378 <span class="keywordtype">int</span> getRandom (<span class="keywordtype">int</span> min, <span class="keywordtype">int</span> max)
<a name="l00379"></a>00379     {
<a name="l00380"></a>00380     <span class="keywordflow">return</span> min + rand() % (max - min + 1);
<a name="l00381"></a>00381     }
<a name="l00382"></a>00382 
<a name="l00383"></a>00383 RECT convert (<span class="keywordtype">int</span> cameraX, <span class="keywordtype">int</span> cameraY, RECT <span class="keywordtype">object</span>)
<a name="l00384"></a>00384     {
<a name="l00385"></a>00385     RECT result = { <span class="keywordtype">object</span>.left   - cameraX,
<a name="l00386"></a>00386                     <span class="keywordtype">object</span>.top    - cameraY,
<a name="l00387"></a>00387                     <span class="keywordtype">object</span>.right  - cameraX,
<a name="l00388"></a>00388                     <span class="keywordtype">object</span>.bottom - cameraY };
<a name="l00389"></a>00389 
<a name="l00390"></a>00390     <span class="keywordflow">return</span> result;
<a name="l00391"></a>00391     }
<a name="l00392"></a>00392 
<a name="l00393"></a>00393 <span class="keywordtype">bool</span> in (RECT in, POINT toCheck)
<a name="l00394"></a>00394     {
<a name="l00395"></a>00395     <span class="keywordflow">return</span> toCheck.x &gt;= in.left  &amp;&amp;
<a name="l00396"></a>00396            toCheck.x &lt;= in.right &amp;&amp;
<a name="l00397"></a>00397            toCheck.y &gt;= in.top   &amp;&amp;
<a name="l00398"></a>00398            toCheck.y &lt;= in.bottom;
<a name="l00399"></a>00399     }
<a name="l00400"></a>00400 
<a name="l00401"></a>00401 <span class="keywordtype">bool</span> needToDraw (RECT what)
<a name="l00402"></a>00402     {
<a name="l00403"></a>00403     RECT screen = {0, 0, 800, 600};
<a name="l00404"></a>00404 
<a name="l00405"></a>00405     POINT topLeft     = { what.left,  what.top    },
<a name="l00406"></a>00406           topRight    = { what.right, what.top    },
<a name="l00407"></a>00407           bottomRight = { what.right, what.bottom },
<a name="l00408"></a>00408           bottomLeft  = { what.left,  what.bottom };
<a name="l00409"></a>00409 
<a name="l00410"></a>00410     <span class="keywordflow">return</span> in (screen, topLeft)     |
<a name="l00411"></a>00411            in (screen, bottomRight) |
<a name="l00412"></a>00412            in (screen, topRight)    |
<a name="l00413"></a>00413            in (screen, bottomLeft);
<a name="l00414"></a>00414     }
<a name="l00415"></a>00415 
<a name="l00416"></a>00416 <span class="keywordtype">void</span> drawScene (<span class="keywordtype">int</span> cameraX, <span class="keywordtype">int</span> cameraY)
<a name="l00417"></a>00417     {
<a name="l00418"></a>00418     <a class="code" href="a00081.htm#ga6dfb121b4a1116f987baeb515713cbbf" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt</a> (<a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(),     - (cameraX % 800),     - (cameraY % 600), 800, 600, scene[cameraX / 800]    [cameraY / 600],     0, 0);
<a name="l00419"></a>00419     <a class="code" href="a00081.htm#ga6dfb121b4a1116f987baeb515713cbbf" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt</a> (<a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), 800 - (cameraX % 800),     - (cameraY % 600), 800, 600, scene[cameraX / 800 + 1][cameraY / 600],     0, 0);
<a name="l00420"></a>00420     <a class="code" href="a00081.htm#ga6dfb121b4a1116f987baeb515713cbbf" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt</a> (<a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(),     - (cameraX % 800), 600 - (cameraY % 600), 800, 600, scene[cameraX / 800]    [cameraY / 600 + 1], 0, 0);
<a name="l00421"></a>00421     <a class="code" href="a00081.htm#ga6dfb121b4a1116f987baeb515713cbbf" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt</a> (<a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), 800 - (cameraX % 800), 600 - (cameraY % 600), 800, 600, scene[cameraX / 800 + 1][cameraY / 600 + 1], 0, 0);
<a name="l00422"></a>00422     }
<a name="l00423"></a>00423 
<a name="l00424"></a>00424 <span class="keywordtype">int</span> getTurtleWalkPosition (<span class="keywordtype">int</span> rawPosition)
<a name="l00425"></a>00425     {
<a name="l00426"></a>00426     <span class="keywordflow">if</span> (rawPosition &gt; 20) <span class="keywordflow">return</span> 40 - rawPosition;
<a name="l00427"></a>00427     <span class="keywordflow">else</span>                  <span class="keywordflow">return</span>      rawPosition;
<a name="l00428"></a>00428     }
<a name="l00429"></a>00429 
<a name="l00430"></a>00430 <span class="keywordtype">void</span> drawFlag (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> stickHeight, <span class="keyword">const</span> <span class="keywordtype">char</span>* text, COLORREF fill, COLORREF border)
<a name="l00431"></a>00431     {
<a name="l00432"></a>00432     <a class="code" href="a00081.htm#ga6689b9a89add9c5eb5cf54a8c86539a4" title="Выбирает текущий шрифт, его размер и другие атрибуты.">txSelectFont</a> (<span class="stringliteral">&quot;Comic Sans MS&quot;</span>, 20);
<a name="l00433"></a>00433 
<a name="l00434"></a>00434     <span class="keywordtype">int</span> width  = <a class="code" href="a00081.htm#gad5483eacac697420a84f66733e45ed02" title="Вычисляет ширину текстовой надписи.">txGetTextExtentX</a> (text) + 20,
<a name="l00435"></a>00435         height = <a class="code" href="a00081.htm#gac021e9984ef217a7a8c14094e3d684c9" title="Вычисляет высоту текстовой надписи.">txGetTextExtentY</a> (text) + 10;
<a name="l00436"></a>00436 
<a name="l00437"></a>00437     <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (border);
<a name="l00438"></a>00438     <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (fill);
<a name="l00439"></a>00439     <a class="code" href="a00081.htm#gaaee38df6f38b6f1729b9db1c4ac23e65" title="Рисует линию.">txLine</a>      (x, y, x, y-stickHeight);
<a name="l00440"></a>00440     <a class="code" href="a00081.htm#ga18a0418f3c06463e958077cddf2a4864" title="Рисует прямоугольник.">txRectangle</a> (      x, y-stickHeight, x+width, y-stickHeight+height);
<a name="l00441"></a>00441 
<a name="l00442"></a>00442     <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a2331cdb79541487869e7c2445a2eb5f0" title="Желтый цвет.">TX_YELLOW</a>);
<a name="l00443"></a>00443     <a class="code" href="a00081.htm#ga52e119361961d9eee33c176a3084e55d" title="Рисует текст.">txTextOut</a> (x+10, y-stickHeight+5, text);
<a name="l00444"></a>00444     }
<a name="l00445"></a>00445 
<a name="l00446"></a>00446 <span class="keywordtype">void</span> drawBaloonOnFirstScene (<span class="keywordtype">int</span> baloonx, <span class="keywordtype">int</span> baloony, <span class="keywordtype">int</span> camx, <span class="keywordtype">int</span> camy, <span class="keywordtype">int</span> baloonSize)
<a name="l00447"></a>00447     {
<a name="l00448"></a>00448     RECT baloon = { baloonx - baloonSize,
<a name="l00449"></a>00449                     baloony - baloonSize * 2,
<a name="l00450"></a>00450                     baloonx + baloonSize,
<a name="l00451"></a>00451                     baloony + baloonSize * 2 };
<a name="l00452"></a>00452 
<a name="l00453"></a>00453     baloon = convert (camx, camy, baloon);
<a name="l00454"></a>00454 
<a name="l00455"></a>00455     <span class="keywordflow">if</span> (needToDraw (baloon))
<a name="l00456"></a>00456         {
<a name="l00457"></a>00457         drawBaloon (baloon.left + (baloon.right-baloon.left)/2,
<a name="l00458"></a>00458                     baloon.top + (baloon.bottom-baloon.top)/2,
<a name="l00459"></a>00459                     baloonSize, 20, CLEAR_RED, SUN_BORDER, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a2331cdb79541487869e7c2445a2eb5f0" title="Желтый цвет.">TX_YELLOW</a>, NORMAL_BROWN);
<a name="l00460"></a>00460 
<a name="l00461"></a>00461         <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aa13a0e0eb4587540bd06cb5d55083032" title="Зеленый цвет.">TX_GREEN</a>);
<a name="l00462"></a>00462         <a class="code" href="a00081.htm#ga6689b9a89add9c5eb5cf54a8c86539a4" title="Выбирает текущий шрифт, его размер и другие атрибуты.">txSelectFont</a> (<span class="stringliteral">&quot;Comic Sans MS&quot;</span>, 60);
<a name="l00463"></a>00463         <a class="code" href="a00081.htm#ga52e119361961d9eee33c176a3084e55d" title="Рисует текст.">txTextOut</a> (baloonx - camx- PASCAL_LOGO_WIDTH / 2, baloony - camy - 25, <span class="stringliteral">&quot;Pascal&quot;</span>);
<a name="l00464"></a>00464         }
<a name="l00465"></a>00465     }
<a name="l00466"></a>00466 
<a name="l00467"></a>00467 <span class="keywordtype">void</span> drawTurtlesOnFirstScene (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> slide)
<a name="l00468"></a>00468     {
<a name="l00469"></a>00469     <span class="keywordtype">int</span> walkPosition = getTurtleWalkPosition (slide % 40);
<a name="l00470"></a>00470 
<a name="l00471"></a>00471     drawTurtleBody (x,       y,      250, 125, walkPosition, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aa13a0e0eb4587540bd06cb5d55083032" title="Зеленый цвет.">TX_GREEN</a>, GREEN_DARK, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a2331cdb79541487869e7c2445a2eb5f0" title="Желтый цвет.">TX_YELLOW</a>, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5ad71bcc76691c708c653567bc70129e4b" title="Коричневый цвет. Некрасивый. Do it yourself with RGB().">TX_BROWN</a>, shellForLeaderTurtle);
<a name="l00472"></a>00472     drawTurtleBody (x - 200, y + 50, 160,  80, walkPosition, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aa13a0e0eb4587540bd06cb5d55083032" title="Зеленый цвет.">TX_GREEN</a>, GREEN_DARK, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a2331cdb79541487869e7c2445a2eb5f0" title="Желтый цвет.">TX_YELLOW</a>, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5ad71bcc76691c708c653567bc70129e4b" title="Коричневый цвет. Некрасивый. Do it yourself with RGB().">TX_BROWN</a>, shellForSecondTurtle);
<a name="l00473"></a>00473     drawTurtleBody (x - 300, y + 90,  80,  40, walkPosition, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aa13a0e0eb4587540bd06cb5d55083032" title="Зеленый цвет.">TX_GREEN</a>, GREEN_DARK, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a2331cdb79541487869e7c2445a2eb5f0" title="Желтый цвет.">TX_YELLOW</a>, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5ad71bcc76691c708c653567bc70129e4b" title="Коричневый цвет. Некрасивый. Do it yourself with RGB().">TX_BROWN</a>, shellForKid);
<a name="l00474"></a>00474 
<a name="l00475"></a>00475     drawFlag (x + 158, y + 14 + walkPosition / 3, 175, <span class="stringliteral">&quot;ЛогоМиры&quot;</span>, CLEAR_RED, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aa13a0e0eb4587540bd06cb5d55083032" title="Зеленый цвет.">TX_GREEN</a>);
<a name="l00476"></a>00476 
<a name="l00477"></a>00477     drawLogo();
<a name="l00478"></a>00478     }
<a name="l00479"></a>00479 
<a name="l00480"></a>00480 <span class="keywordtype">void</span> drawEverythingWeather()
<a name="l00481"></a>00481     {
<a name="l00482"></a>00482     drawRain (30, 20, 30, rainLoop % 10 * 5, 1, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aac23422a0b96bfc917484ba1fb0990de" title="Темно-синий цвет. Плохо виден.">TX_BLUE</a>);
<a name="l00483"></a>00483     slideClouds (-167, -72);
<a name="l00484"></a>00484     lightningEngineLoop();
<a name="l00485"></a>00485 
<a name="l00486"></a>00486     rainLoop++;
<a name="l00487"></a>00487     }
<a name="l00488"></a>00488 
<a name="l00489"></a>00489 COLORREF getTransparentColor (COLORREF toSet, COLORREF back, <span class="keywordtype">int</span> alpha)
<a name="l00490"></a>00490     {
<a name="l00491"></a>00491     <span class="comment">// Red-back, green-back, blue-back</span>
<a name="l00492"></a>00492     <span class="keywordtype">int</span> r  = <a class="code" href="a00081.htm#gac2b196b6826392229fa209e01817f941" title="Извлекает цветовую компоненту (цветовой канал) из смешанного цвета.">txExtractColor</a> (toSet, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a342ad901a39ab4b40f091f6699b64927" title="Темно-красный цвет. Слишком темный.">TX_RED</a>  ), rb = <a class="code" href="a00081.htm#gac2b196b6826392229fa209e01817f941" title="Извлекает цветовую компоненту (цветовой канал) из смешанного цвета.">txExtractColor</a> (back, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a342ad901a39ab4b40f091f6699b64927" title="Темно-красный цвет. Слишком темный.">TX_RED</a>  ),
<a name="l00493"></a>00493         g  = <a class="code" href="a00081.htm#gac2b196b6826392229fa209e01817f941" title="Извлекает цветовую компоненту (цветовой канал) из смешанного цвета.">txExtractColor</a> (toSet, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aa13a0e0eb4587540bd06cb5d55083032" title="Зеленый цвет.">TX_GREEN</a>), gb = <a class="code" href="a00081.htm#gac2b196b6826392229fa209e01817f941" title="Извлекает цветовую компоненту (цветовой канал) из смешанного цвета.">txExtractColor</a> (back, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aa13a0e0eb4587540bd06cb5d55083032" title="Зеленый цвет.">TX_GREEN</a>),
<a name="l00494"></a>00494         b  = <a class="code" href="a00081.htm#gac2b196b6826392229fa209e01817f941" title="Извлекает цветовую компоненту (цветовой канал) из смешанного цвета.">txExtractColor</a> (toSet, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aac23422a0b96bfc917484ba1fb0990de" title="Темно-синий цвет. Плохо виден.">TX_BLUE</a> ), bb = <a class="code" href="a00081.htm#gac2b196b6826392229fa209e01817f941" title="Извлекает цветовую компоненту (цветовой канал) из смешанного цвета.">txExtractColor</a> (back, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aac23422a0b96bfc917484ba1fb0990de" title="Темно-синий цвет. Плохо виден.">TX_BLUE</a> );
<a name="l00495"></a>00495 
<a name="l00496"></a>00496     <span class="keywordflow">return</span> <a class="code" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (r + (rb - r) / 100 * alpha,
<a name="l00497"></a>00497                 g + (gb - g) / 100 * alpha,
<a name="l00498"></a>00498                 b + (bb - b) / 100 * alpha);
<a name="l00499"></a>00499     }
<a name="l00500"></a>00500 
<a name="l00501"></a>00501 <span class="keywordtype">void</span> drawElectra (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> angle, <span class="keywordtype">int</span> nOfSteps, <span class="keywordtype">int</span> stepLenght, <span class="keywordtype">int</span> randomness, <span class="keywordtype">int</span> thickness, COLORREF center, COLORREF border, <span class="keywordtype">int</span> chance)
<a name="l00502"></a>00502     {
<a name="l00503"></a>00503     <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (center, thickness);
<a name="l00504"></a>00504 
<a name="l00505"></a>00505     <span class="keywordtype">int</span> currentX = x,
<a name="l00506"></a>00506         currentY = y;
<a name="l00507"></a>00507 
<a name="l00508"></a>00508     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> a = 0; a &lt; nOfSteps; a++)
<a name="l00509"></a>00509         {
<a name="l00510"></a>00510         <span class="keywordtype">int</span> normalAngle = trigonometricGetNormalAngle (getRandom ((angle - randomness) / 5, (angle + randomness) / 5) * 5),
<a name="l00511"></a>00511             lenght = getRandom (stepLenght * 4/5, stepLenght);
<a name="l00512"></a>00512 
<a name="l00513"></a>00513         <span class="keywordtype">int</span> nextX = (int) (currentX + sinTable[normalAngle] * lenght),
<a name="l00514"></a>00514             nextY = (int) (currentY + cosTable[normalAngle] * lenght);
<a name="l00515"></a>00515 
<a name="l00516"></a>00516         drawGradientLine (nextX, nextY, currentX, currentY, thickness, border, center);
<a name="l00517"></a>00517 
<a name="l00518"></a>00518         currentX = nextX;
<a name="l00519"></a>00519         currentY = nextY;
<a name="l00520"></a>00520 
<a name="l00521"></a>00521         <span class="keywordflow">if</span> (getRandom (1,100) &lt; chance)
<a name="l00522"></a>00522             drawElectra (currentX, currentY, angle + getRandom (0, 180) - 90, nOfSteps / 2, stepLenght / 2, randomness / 2, thickness * 2/3, center, border, chance / 3);
<a name="l00523"></a>00523         }
<a name="l00524"></a>00524     }
<a name="l00525"></a>00525 
<a name="l00526"></a>00526 <span class="keywordtype">void</span> prepareMountains (COLORREF skyUp, COLORREF skyDown, COLORREF grassUp, COLORREF grassDown)
<a name="l00527"></a>00527     {
<a name="l00528"></a>00528     <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a9f0adfcb24eeb418fc39fe950db65ec8" title="Черный цвет.">TX_BLACK</a>);
<a name="l00529"></a>00529     <a class="code" href="a00081.htm#ga78e83baeb6a02d5fa33dd8b062e513d9" title="Стирает холст текущим цветом заполнения.">txClear</a>();
<a name="l00530"></a>00530 
<a name="l00531"></a>00531     drawGradientRectangle (0,   0, 800, 200, skyUp,   skyDown);
<a name="l00532"></a>00532     drawGradientRectangle (0, 200, 800, 600, grassUp, grassDown);
<a name="l00533"></a>00533 
<a name="l00534"></a>00534     drawMountain (300, 600, 700, 460, 200, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5ab192f19b013a2563740be0da4e7252d9" title="Оранжевый цвет.">TX_ORANGE</a>, <a class="code" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (220,220,255), <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aaefd282232c1503377c5a5e3545c579a" title="Серый цвет.">TX_GRAY</a>);
<a name="l00535"></a>00535     drawMountain (100, 600, 700, 460, 200, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5ab192f19b013a2563740be0da4e7252d9" title="Оранжевый цвет.">TX_ORANGE</a>, <a class="code" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (220,220,255), <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aaefd282232c1503377c5a5e3545c579a" title="Серый цвет.">TX_GRAY</a>);
<a name="l00536"></a>00536     drawMountain (700, 600, 500, 550, 200, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5ab192f19b013a2563740be0da4e7252d9" title="Оранжевый цвет.">TX_ORANGE</a>, <a class="code" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (220,220,255), <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aaefd282232c1503377c5a5e3545c579a" title="Серый цвет.">TX_GRAY</a>);
<a name="l00537"></a>00537     drawMountain (500, 600, 500, 570, 200, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5ab192f19b013a2563740be0da4e7252d9" title="Оранжевый цвет.">TX_ORANGE</a>, <a class="code" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (220,220,255), <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aaefd282232c1503377c5a5e3545c579a" title="Серый цвет.">TX_GRAY</a>);
<a name="l00538"></a>00538 
<a name="l00539"></a>00539     <a class="code" href="a00081.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC</a> (mountains_1);
<a name="l00540"></a>00540 
<a name="l00541"></a>00541     mountains_1 = <a class="code" href="a00081.htm#ga1008da052f2fbe9ec0f70c2f6b4f0700" title="Создает дополнительный холст (контекст рисования, Device Context, DC) в памяти.">txCreateCompatibleDC</a> (800, 600);
<a name="l00542"></a>00542     <a class="code" href="a00081.htm#ga6dfb121b4a1116f987baeb515713cbbf" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt</a> (mountains_1, 0, 0, 800, 600, <a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), 0, 0);
<a name="l00543"></a>00543 
<a name="l00544"></a>00544     scene[3][1] = mountains_1;
<a name="l00545"></a>00545     scene[4][1] = mountains_1;
<a name="l00546"></a>00546     scene[5][1] = mountains_1;
<a name="l00547"></a>00547     }
<a name="l00548"></a>00548 
<a name="l00549"></a>00549 <span class="keywordtype">void</span> walkLine (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> x2, <span class="keywordtype">int</span> y2, <span class="keywordtype">int</span> step, <span class="keywordtype">int</span> manSize)
<a name="l00550"></a>00550     {
<a name="l00551"></a>00551     <span class="keywordtype">int</span> lineAngle  = trigonometricGetAngleOfLine (x, y, x2, y2),
<a name="l00552"></a>00552         lineLenght = (int) (sqrt (1.0*sqr (x2-x) + 1.0*sqr (y2-y))),
<a name="l00553"></a>00553         stepNumber = lineLenght/step;
<a name="l00554"></a>00554 
<a name="l00555"></a>00555     <span class="keywordtype">int</span> cameraX, cameraY;
<a name="l00556"></a>00556     <span class="keywordtype">int</span> bodyRotNormal = 90 - (lineAngle &gt; 90 ? 90 : lineAngle);
<a name="l00557"></a>00557 
<a name="l00558"></a>00558     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> stepIndex = 0; stepIndex &lt; stepNumber; stepIndex += SPEED)
<a name="l00559"></a>00559         {
<a name="l00560"></a>00560         trigonometricSetPointOfRest (x, y);
<a name="l00561"></a>00561         trigonometricMove (lineAngle, stepIndex * step);
<a name="l00562"></a>00562         trigonometricMove (lineAngle - 90, manSize * 7/20);
<a name="l00563"></a>00563 
<a name="l00564"></a>00564         cameraX = pointOfRest_x - 400;
<a name="l00565"></a>00565         cameraY = pointOfRest_y - 300;
<a name="l00566"></a>00566 
<a name="l00567"></a>00567         <span class="keywordtype">int</span> handsAngle = stepIndex * step % 40;
<a name="l00568"></a>00568         <span class="keywordflow">if</span> (handsAngle &gt; 20) handsAngle = 40 - handsAngle;
<a name="l00569"></a>00569 
<a name="l00570"></a>00570         drawScene (cameraX, cameraY);
<a name="l00571"></a>00571 
<a name="l00572"></a>00572         drawStickMan (400, 300, manSize, 90, 10, stepIndex * step % 90, 180 - handsAngle, 180 - handsAngle, 180 + handsAngle, 180 + handsAngle, 90, 90, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a9f0adfcb24eeb418fc39fe950db65ec8" title="Черный цвет.">TX_BLACK</a>, NORMAL_BROWN, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025" title="Белый цвет.">TX_WHITE</a>, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025" title="Белый цвет.">TX_WHITE</a>, lineAngle - 90, bodyRotNormal);
<a name="l00573"></a>00573         drawBaloonOnFirstScene (3100, 400, cameraX, cameraY, 150);
<a name="l00574"></a>00574         drawFlag (3700 - cameraX, 633 - cameraY, 150, <span class="stringliteral">&quot;C++&quot;</span>, <a class="code" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (111, 49, 152), <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a2331cdb79541487869e7c2445a2eb5f0" title="Желтый цвет.">TX_YELLOW</a>);
<a name="l00575"></a>00575         drawEverythingWeather();
<a name="l00576"></a>00576 
<a name="l00577"></a>00577         doSleep (4);
<a name="l00578"></a>00578         }
<a name="l00579"></a>00579     }
<a name="l00580"></a>00580 
<a name="l00581"></a>00581 <span class="keywordtype">void</span> walkMountains (POINT* mountains, <span class="keywordtype">int</span> elems, <span class="keywordtype">int</span> manHeight)
<a name="l00582"></a>00582     {
<a name="l00583"></a>00583     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> mountainIndex = 0; mountainIndex &lt; elems-1; mountainIndex++)
<a name="l00584"></a>00584         {
<a name="l00585"></a>00585         walkLine (mountains[mountainIndex    ].x,
<a name="l00586"></a>00586                   mountains[mountainIndex    ].y,
<a name="l00587"></a>00587                   mountains[mountainIndex + 1].x,
<a name="l00588"></a>00588                   mountains[mountainIndex + 1].y,
<a name="l00589"></a>00589                   1, manHeight);
<a name="l00590"></a>00590 
<a name="l00591"></a>00591         electraSplash();
<a name="l00592"></a>00592         }
<a name="l00593"></a>00593     }
<a name="l00594"></a>00594 
<a name="l00595"></a>00595 <span class="keywordtype">void</span> fromLogoToCPP()
<a name="l00596"></a>00596     {
<a name="l00597"></a>00597     <span class="keywordtype">int</span> cameraX = 0,
<a name="l00598"></a>00598         cameraY = 600,
<a name="l00599"></a>00599         t       = 0;
<a name="l00600"></a>00600 
<a name="l00601"></a>00601     <span class="keywordflow">for</span> (; cameraX &lt; 1600; cameraX += SPEED, doSleep (2))
<a name="l00602"></a>00602         {
<a name="l00603"></a>00603         drawScene (cameraX, cameraY);
<a name="l00604"></a>00604         drawTurtlesOnFirstScene (350 - cameraX / 5, 1050 - cameraY, cameraX);
<a name="l00605"></a>00605         drawStickMan (480 - cameraX / 5, 375 + 48, 120, 90, 10, 0, 185, 185, 148, 45, 60, 45, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a9f0adfcb24eeb418fc39fe950db65ec8" title="Черный цвет.">TX_BLACK</a>, NORMAL_BROWN, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025" title="Белый цвет.">TX_WHITE</a>, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025" title="Белый цвет.">TX_WHITE</a>, 0, 0);
<a name="l00606"></a>00606         drawBaloonOnFirstScene (2000, 700, cameraX, cameraY, 150);
<a name="l00607"></a>00607         }
<a name="l00608"></a>00608 
<a name="l00609"></a>00609     <span class="keywordflow">for</span> (t = 0; t &lt; 40; t += SPEED, doSleep (10))
<a name="l00610"></a>00610         {
<a name="l00611"></a>00611         drawScene (cameraX, cameraY);
<a name="l00612"></a>00612         drawTurtlesOnFirstScene (350 - cameraX / 5, 1050 - cameraY, cameraX);
<a name="l00613"></a>00613         drawStickMan (480 - cameraX / 5 + t*6, 375 - t*2 + 48, 120, 30, 10, t * 3 % 90, 185, 185, 90 + t * 2, 90 + t * 2, 60, 90, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a9f0adfcb24eeb418fc39fe950db65ec8" title="Черный цвет.">TX_BLACK</a>, NORMAL_BROWN, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025" title="Белый цвет.">TX_WHITE</a>, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025" title="Белый цвет.">TX_WHITE</a>, 0, 0);
<a name="l00614"></a>00614         drawBaloonOnFirstScene (2000, 700, cameraX, cameraY, 150);
<a name="l00615"></a>00615         }
<a name="l00616"></a>00616 
<a name="l00617"></a>00617     <span class="keywordflow">for</span> (t = 0; t &lt; 200; t += SPEED, doSleep (5))
<a name="l00618"></a>00618         {
<a name="l00619"></a>00619         <a class="code" href="a00081.htm#ga6dfb121b4a1116f987baeb515713cbbf" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt</a> (<a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), 0, t - 600, 800, 600, trueSunny_up, 0, 0);
<a name="l00620"></a>00620         drawScene (cameraX + t / 2, cameraY-t);
<a name="l00621"></a>00621         drawTurtlesOnFirstScene (350 - cameraX / 5, 1050 - cameraY, cameraX);
<a name="l00622"></a>00622         drawStickMan (400, 285 + 48 + t/25, 120 + t/10, 30, 10, 0, 185, 185, 170, 170, 60, 90, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a9f0adfcb24eeb418fc39fe950db65ec8" title="Черный цвет.">TX_BLACK</a>, NORMAL_BROWN, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025" title="Белый цвет.">TX_WHITE</a>, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025" title="Белый цвет.">TX_WHITE</a>, 0, 0);
<a name="l00623"></a>00623         drawBaloonOnFirstScene (2000 + t, 700 - t*2, cameraX, cameraY, 150);
<a name="l00624"></a>00624 
<a name="l00625"></a>00625         cameraY -= 2 * SPEED;
<a name="l00626"></a>00626         cameraX += SPEED;
<a name="l00627"></a>00627         }
<a name="l00628"></a>00628 
<a name="l00629"></a>00629     cameraX += t/2;
<a name="l00630"></a>00630     cameraY -= t;
<a name="l00631"></a>00631 
<a name="l00632"></a>00632     <span class="keywordtype">double</span> vel = 0.1;
<a name="l00633"></a>00633 
<a name="l00634"></a>00634     <span class="keywordflow">for</span> (t = 0; t &lt; 430; t += SPEED, doSleep (5))
<a name="l00635"></a>00635         {
<a name="l00636"></a>00636         drawScene (cameraX, cameraY);
<a name="l00637"></a>00637         drawStickMan (400, 285+56, 140, 30, 10, 0, 185, 185, 170, 170, 60, 90, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a9f0adfcb24eeb418fc39fe950db65ec8" title="Черный цвет.">TX_BLACK</a>, NORMAL_BROWN, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025" title="Белый цвет.">TX_WHITE</a>, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025" title="Белый цвет.">TX_WHITE</a>, 0, 0);
<a name="l00638"></a>00638         drawBaloonOnFirstScene (cameraX + 400, cameraY + 100, cameraX, cameraY, 150);
<a name="l00639"></a>00639         slideClouds (800 - t * 9/4, -t / 6);
<a name="l00640"></a>00640 
<a name="l00641"></a>00641         cameraX = (int) (cameraX + vel * 2 * SPEED);
<a name="l00642"></a>00642         cameraY = (int) (cameraY + vel     * SPEED);
<a name="l00643"></a>00643         vel    += 0.005                    * SPEED;
<a name="l00644"></a>00644         }
<a name="l00645"></a>00645 
<a name="l00646"></a>00646     cameraX = 2700;
<a name="l00647"></a>00647     cameraY = 300;
<a name="l00648"></a>00648 
<a name="l00649"></a>00649     prepareMountains (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a5308a5fc6c34169a8af67630a5a750d5" title="Темно-серый цвет.">TX_DARKGRAY</a>, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5abec0ab16c8a1ed55e137c20f80cdd25e" title="Светло-серый цвет.">TX_LIGHTGRAY</a>, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aa13a0e0eb4587540bd06cb5d55083032" title="Зеленый цвет.">TX_GREEN</a>, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5ae45f1e493cce7ef326f8bd9e8c684c6b" title="Светло-зеленый цвет.">TX_LIGHTGREEN</a>);
<a name="l00650"></a>00650 
<a name="l00651"></a>00651     <a class="code" href="a00081.htm#ga78e83baeb6a02d5fa33dd8b062e513d9" title="Стирает холст текущим цветом заполнения.">txClear</a>();
<a name="l00652"></a>00652     drawGradientRectangle (0, 0, 800, 600, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a9f0adfcb24eeb418fc39fe950db65ec8" title="Черный цвет.">TX_BLACK</a>, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a5308a5fc6c34169a8af67630a5a750d5" title="Темно-серый цвет.">TX_DARKGRAY</a>);
<a name="l00653"></a>00653 
<a name="l00654"></a>00654     <a class="code" href="a00081.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC</a> (trueSunny_up);
<a name="l00655"></a>00655     trueSunny_up = <a class="code" href="a00081.htm#ga1008da052f2fbe9ec0f70c2f6b4f0700" title="Создает дополнительный холст (контекст рисования, Device Context, DC) в памяти.">txCreateCompatibleDC</a> (800, 600);
<a name="l00656"></a>00656     <a class="code" href="a00081.htm#ga6dfb121b4a1116f987baeb515713cbbf" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt</a> (trueSunny_up, 0, 0, 800, 600, <a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), 0, 0);
<a name="l00657"></a>00657 
<a name="l00658"></a>00658     <a class="code" href="a00081.htm#ga6c293f0b0f71efebdeeb0b56a97ba50c" title="Задерживает выполнение программы на определенное время.">txSleep</a> (300);
<a name="l00659"></a>00659 
<a name="l00660"></a>00660     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> x = 0; x &lt; 8; x++) scene[x][0] = trueSunny_up;
<a name="l00661"></a>00661 
<a name="l00662"></a>00662     POINT path[10] = {{ 3100, 651 },
<a name="l00663"></a>00663                       { 3181, 821 },
<a name="l00664"></a>00664                       { 3233, 827 },
<a name="l00665"></a>00665                       { 3301, 740 },
<a name="l00666"></a>00666                       { 3377, 840 },
<a name="l00667"></a>00667                       { 3427, 840 },
<a name="l00668"></a>00668                       { 3500, 740 },
<a name="l00669"></a>00669                       { 3568, 829 },
<a name="l00670"></a>00670                       { 3619, 813 },
<a name="l00671"></a>00671                       { 3700, 633 }};
<a name="l00672"></a>00672 
<a name="l00673"></a>00673     walkMountains (path, 10, 140);
<a name="l00674"></a>00674 
<a name="l00675"></a>00675     <a class="code" href="a00081.htm#ga6c293f0b0f71efebdeeb0b56a97ba50c" title="Задерживает выполнение программы на определенное время.">txSleep</a> (200);
<a name="l00676"></a>00676 
<a name="l00677"></a>00677     cameraX = 3300;
<a name="l00678"></a>00678     cameraY = 277;
<a name="l00679"></a>00679 
<a name="l00680"></a>00680     <span class="keywordflow">for</span> (t = 0; t &lt; 180; t += 5, doSleep (15))
<a name="l00681"></a>00681         {
<a name="l00682"></a>00682         drawScene (cameraX, cameraY);
<a name="l00683"></a>00683         drawFlag (400, 356, 150, <span class="stringliteral">&quot;C++&quot;</span>, <a class="code" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (111, 49, 152), <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a2331cdb79541487869e7c2445a2eb5f0" title="Желтый цвет.">TX_YELLOW</a>);
<a name="l00684"></a>00684 
<a name="l00685"></a>00685         drawPortalSystem (400, 286, ((t &gt; 90)? 180 - t     : t), 9, 8, t * 5, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025" title="Белый цвет.">TX_WHITE</a>, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025" title="Белый цвет.">TX_WHITE</a>, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aaefd282232c1503377c5a5e3545c579a" title="Серый цвет.">TX_GRAY</a>);
<a name="l00686"></a>00686         drawStickMan     (400, 300, ((t &gt; 90)? 230 - t*6/5 : 30), 30, 10 - t/18, 45, 185, 185, 165, 165, 60, 90, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a9f0adfcb24eeb418fc39fe950db65ec8" title="Черный цвет.">TX_BLACK</a>, NORMAL_BROWN, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025" title="Белый цвет.">TX_WHITE</a>, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025" title="Белый цвет.">TX_WHITE</a>, 0, 0);
<a name="l00687"></a>00687 
<a name="l00688"></a>00688         drawEverythingWeather();
<a name="l00689"></a>00689         }
<a name="l00690"></a>00690 
<a name="l00691"></a>00691     <span class="keywordflow">for</span> (; t &lt; 200; t += 1, doSleep (20))
<a name="l00692"></a>00692         drawRain (15, 15, 30, t % 10, 1, getRandom (1, 2) == 1 ? <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aac23422a0b96bfc917484ba1fb0990de" title="Темно-синий цвет. Плохо виден.">TX_BLUE</a> : <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a00514ed69e9dd0fafeb324c0258f9030" title="Светло-синий цвет.">TX_LIGHTBLUE</a>);
<a name="l00693"></a>00693 
<a name="l00694"></a>00694     <a class="code" href="a00081.htm#ga6c293f0b0f71efebdeeb0b56a97ba50c" title="Задерживает выполнение программы на определенное время.">txSleep</a> (200);
<a name="l00695"></a>00695 
<a name="l00696"></a>00696     <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a9f0adfcb24eeb418fc39fe950db65ec8" title="Черный цвет.">TX_BLACK</a>);
<a name="l00697"></a>00697     <a class="code" href="a00081.htm#ga18a0418f3c06463e958077cddf2a4864" title="Рисует прямоугольник.">txRectangle</a> (0, 0, 800, 600);
<a name="l00698"></a>00698 
<a name="l00699"></a>00699     deleteDCs();
<a name="l00700"></a>00700     }
<a name="l00701"></a>00701 
<a name="l00702"></a>00702 <span class="keywordtype">void</span> drawPies (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> xSize, <span class="keywordtype">int</span> ySize, <span class="keywordtype">int</span> pieAngle, <span class="keywordtype">int</span> angleOffset, COLORREF color, COLORREF special, COLORREF border, <span class="keywordtype">int</span> thickness)
<a name="l00703"></a>00703     {
<a name="l00704"></a>00704     <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (color);
<a name="l00705"></a>00705     <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (border, thickness);
<a name="l00706"></a>00706 
<a name="l00707"></a>00707     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> n = 0; n &lt; (360 / pieAngle); n++)
<a name="l00708"></a>00708         {
<a name="l00709"></a>00709         <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> ((n % 2 == 0)? color : special);
<a name="l00710"></a>00710         <a class="code" href="a00081.htm#ga8e06e3abcb6b3724d332feb8aa83a8df" title="Рисует сектор эллипса.">txPie</a> (x - xSize/2, y - ySize/2, x + xSize/2, y + ySize/2, n * pieAngle + angleOffset, pieAngle);
<a name="l00711"></a>00711         }
<a name="l00712"></a>00712     }
<a name="l00713"></a>00713 
<a name="l00714"></a>00714 <span class="keywordtype">void</span> deleteDCs()
<a name="l00715"></a>00715     {
<a name="l00716"></a>00716     <a class="code" href="a00081.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC</a> (sunnyBackground_1);
<a name="l00717"></a>00717     <a class="code" href="a00081.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC</a> (sunnyBackground_2);
<a name="l00718"></a>00718     <a class="code" href="a00081.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC</a> (sunnyBackground_3);
<a name="l00719"></a>00719 
<a name="l00720"></a>00720     <a class="code" href="a00081.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC</a> (pear);
<a name="l00721"></a>00721     <a class="code" href="a00081.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC</a> (apple);
<a name="l00722"></a>00722     <a class="code" href="a00081.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC</a> (orange);
<a name="l00723"></a>00723 
<a name="l00724"></a>00724     <a class="code" href="a00081.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC</a> (shellForLeaderTurtle);
<a name="l00725"></a>00725     <a class="code" href="a00081.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC</a> (shellForSecondTurtle);
<a name="l00726"></a>00726     <a class="code" href="a00081.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC</a> (shellForKid);
<a name="l00727"></a>00727     }
<a name="l00728"></a>00728 
<a name="l00729"></a>00729 <span class="keywordtype">void</span> doHDCPreparations()
<a name="l00730"></a>00730     {
<a name="l00731"></a>00731     <span class="comment">// ==================================================</span>
<a name="l00732"></a>00732 
<a name="l00733"></a>00733     drawGradientCircle (15,15,10, LIGHT_ORANGE, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5ab192f19b013a2563740be0da4e7252d9" title="Оранжевый цвет.">TX_ORANGE</a>);
<a name="l00734"></a>00734 
<a name="l00735"></a>00735     orange = <a class="code" href="a00081.htm#ga1008da052f2fbe9ec0f70c2f6b4f0700" title="Создает дополнительный холст (контекст рисования, Device Context, DC) в памяти.">txCreateCompatibleDC</a> (30,30);
<a name="l00736"></a>00736     <a class="code" href="a00081.htm#ga6dfb121b4a1116f987baeb515713cbbf" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt</a> (orange, 0, 0, 30, 30, <a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), 0, 0);
<a name="l00737"></a>00737 
<a name="l00738"></a>00738     <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a01fe8cb0f589868456167ee3a4652df8" title="Прозрачный цвет. Отключает рисование.">TX_TRANSPARENT</a>);
<a name="l00739"></a>00739     <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a9f0adfcb24eeb418fc39fe950db65ec8" title="Черный цвет.">TX_BLACK</a>);
<a name="l00740"></a>00740     <a class="code" href="a00081.htm#ga18a0418f3c06463e958077cddf2a4864" title="Рисует прямоугольник.">txRectangle</a> (0, 0, 100, 100);
<a name="l00741"></a>00741 
<a name="l00742"></a>00742     <span class="comment">// ==================================================</span>
<a name="l00743"></a>00743 
<a name="l00744"></a>00744     <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (SUN_BORDER);
<a name="l00745"></a>00745     <a class="code" href="a00081.htm#gaa14e9c2a46cf713efaa1f850074d8adc" title="Рисует окружность или круг.">txCircle</a> (15, 15, 10);
<a name="l00746"></a>00746     <a class="code" href="a00081.htm#gaa14e9c2a46cf713efaa1f850074d8adc" title="Рисует окружность или круг.">txCircle</a> (15, 7, 6);
<a name="l00747"></a>00747 
<a name="l00748"></a>00748     pear = <a class="code" href="a00081.htm#ga1008da052f2fbe9ec0f70c2f6b4f0700" title="Создает дополнительный холст (контекст рисования, Device Context, DC) в памяти.">txCreateCompatibleDC</a> (30,30);
<a name="l00749"></a>00749     <a class="code" href="a00081.htm#ga6dfb121b4a1116f987baeb515713cbbf" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt</a> (pear, 0, 0, 30, 30, <a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), 0, 0);
<a name="l00750"></a>00750 
<a name="l00751"></a>00751     <span class="comment">// ==================================================</span>
<a name="l00752"></a>00752 
<a name="l00753"></a>00753     <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a01fe8cb0f589868456167ee3a4652df8" title="Прозрачный цвет. Отключает рисование.">TX_TRANSPARENT</a>);
<a name="l00754"></a>00754     <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a9f0adfcb24eeb418fc39fe950db65ec8" title="Черный цвет.">TX_BLACK</a>);
<a name="l00755"></a>00755     <a class="code" href="a00081.htm#ga18a0418f3c06463e958077cddf2a4864" title="Рисует прямоугольник.">txRectangle</a> (0, 0, 100, 100);
<a name="l00756"></a>00756 
<a name="l00757"></a>00757     <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aa13a0e0eb4587540bd06cb5d55083032" title="Зеленый цвет.">TX_GREEN</a>);
<a name="l00758"></a>00758     <a class="code" href="a00081.htm#gaa14e9c2a46cf713efaa1f850074d8adc" title="Рисует окружность или круг.">txCircle</a> (15, 15, 10);
<a name="l00759"></a>00759     drawGradientCircle (12, 12, 5, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5ae45f1e493cce7ef326f8bd9e8c684c6b" title="Светло-зеленый цвет.">TX_LIGHTGREEN</a>, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aa13a0e0eb4587540bd06cb5d55083032" title="Зеленый цвет.">TX_GREEN</a>);
<a name="l00760"></a>00760 
<a name="l00761"></a>00761     apple = <a class="code" href="a00081.htm#ga1008da052f2fbe9ec0f70c2f6b4f0700" title="Создает дополнительный холст (контекст рисования, Device Context, DC) в памяти.">txCreateCompatibleDC</a> (30, 30);
<a name="l00762"></a>00762     <a class="code" href="a00081.htm#ga6dfb121b4a1116f987baeb515713cbbf" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt</a> (apple, 0, 0, 30, 30, <a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), 0, 0);
<a name="l00763"></a>00763 
<a name="l00764"></a>00764     <span class="comment">// ==================================================</span>
<a name="l00765"></a>00765 
<a name="l00766"></a>00766     drawGradientRectangle (0,0,800,200, SUNNYSKY_UP, SUNNYSKY_DOWN);
<a name="l00767"></a>00767     drawGradientRectangle (0,200,800,600, SUNNYGROUND_UP, SUNNYGROUND_DOWN);
<a name="l00768"></a>00768     drawTree (400, 300, 35, 55, 3, 15, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a342ad901a39ab4b40f091f6699b64927" title="Темно-красный цвет. Слишком темный.">TX_RED</a>, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5ab192f19b013a2563740be0da4e7252d9" title="Оранжевый цвет.">TX_ORANGE</a>, apple);
<a name="l00769"></a>00769     drawTree (200, 200, 50, 70, 4, 12, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5ab192f19b013a2563740be0da4e7252d9" title="Оранжевый цвет.">TX_ORANGE</a>, LIGHT_ORANGE, orange);
<a name="l00770"></a>00770     drawTree (250, 450, 50, 100, 4, 16, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5ab192f19b013a2563740be0da4e7252d9" title="Оранжевый цвет.">TX_ORANGE</a>, LIGHT_ORANGE, pear);
<a name="l00771"></a>00771     drawTree (700, 200, 60, 40, 1, 25, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5ad71bcc76691c708c653567bc70129e4b" title="Коричневый цвет. Некрасивый. Do it yourself with RGB().">TX_BROWN</a>, LIGHT_ORANGE, apple);
<a name="l00772"></a>00772     drawTree (600, 440, 35, 40, 2, 20, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5ad71bcc76691c708c653567bc70129e4b" title="Коричневый цвет. Некрасивый. Do it yourself with RGB().">TX_BROWN</a>, LIGHT_ORANGE, pear);
<a name="l00773"></a>00773 
<a name="l00774"></a>00774     sunnyBackground_1 = <a class="code" href="a00081.htm#ga1008da052f2fbe9ec0f70c2f6b4f0700" title="Создает дополнительный холст (контекст рисования, Device Context, DC) в памяти.">txCreateCompatibleDC</a> (800, 600);
<a name="l00775"></a>00775     <a class="code" href="a00081.htm#ga6dfb121b4a1116f987baeb515713cbbf" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt</a> (sunnyBackground_1, 0, 0, 800, 600, <a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), 0, 0);
<a name="l00776"></a>00776 
<a name="l00777"></a>00777     <span class="comment">// ==================================================</span>
<a name="l00778"></a>00778 
<a name="l00779"></a>00779     drawGradientRectangle (0, 0, 800, 200, SUNNYSKY_UP, SUNNYSKY_DOWN);
<a name="l00780"></a>00780     drawGradientRectangle (0, 200, 800, 600, SUNNYGROUND_UP, SUNNYGROUND_DOWN);
<a name="l00781"></a>00781     drawTree (150, 200, 30, 80, 3, 17, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a342ad901a39ab4b40f091f6699b64927" title="Темно-красный цвет. Слишком темный.">TX_RED</a>, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5ab192f19b013a2563740be0da4e7252d9" title="Оранжевый цвет.">TX_ORANGE</a>, apple);
<a name="l00782"></a>00782     drawTree (350, 450, 30, 60, 4, 15, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5ad71bcc76691c708c653567bc70129e4b" title="Коричневый цвет. Некрасивый. Do it yourself with RGB().">TX_BROWN</a>, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5ab192f19b013a2563740be0da4e7252d9" title="Оранжевый цвет.">TX_ORANGE</a>, pear);
<a name="l00783"></a>00783     drawTree (450, 190, 20, 50, 4, 12, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a342ad901a39ab4b40f091f6699b64927" title="Темно-красный цвет. Слишком темный.">TX_RED</a>, NORMAL_BROWN, apple);
<a name="l00784"></a>00784     drawTree (650, 350, 20, 50, 3, 15, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a342ad901a39ab4b40f091f6699b64927" title="Темно-красный цвет. Слишком темный.">TX_RED</a>, NORMAL_BROWN, orange);
<a name="l00785"></a>00785 
<a name="l00786"></a>00786     sunnyBackground_2 = <a class="code" href="a00081.htm#ga1008da052f2fbe9ec0f70c2f6b4f0700" title="Создает дополнительный холст (контекст рисования, Device Context, DC) в памяти.">txCreateCompatibleDC</a> (800, 600);
<a name="l00787"></a>00787     <a class="code" href="a00081.htm#ga6dfb121b4a1116f987baeb515713cbbf" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt</a> (sunnyBackground_2, 0, 0, 800, 600, <a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), 0, 0);
<a name="l00788"></a>00788 
<a name="l00789"></a>00789     <span class="comment">// ==================================================</span>
<a name="l00790"></a>00790 
<a name="l00791"></a>00791     drawGradientRectangle (0, 0, 800, 200, SUNNYSKY_UP, SUNNYSKY_DOWN);
<a name="l00792"></a>00792     drawGradientRectangle (0, 200, 800, 600, SUNNYGROUND_UP, SUNNYGROUND_DOWN);
<a name="l00793"></a>00793     drawTree (150, 250, 30, 80, 4, 13, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a342ad901a39ab4b40f091f6699b64927" title="Темно-красный цвет. Слишком темный.">TX_RED</a>, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5ab192f19b013a2563740be0da4e7252d9" title="Оранжевый цвет.">TX_ORANGE</a>, orange);
<a name="l00794"></a>00794     drawTree (350, 450, 30, 60, 3, 18, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5ad71bcc76691c708c653567bc70129e4b" title="Коричневый цвет. Некрасивый. Do it yourself with RGB().">TX_BROWN</a>, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5ab192f19b013a2563740be0da4e7252d9" title="Оранжевый цвет.">TX_ORANGE</a>, apple);
<a name="l00795"></a>00795     drawTree (450, 200, 20, 50, 3, 15, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a342ad901a39ab4b40f091f6699b64927" title="Темно-красный цвет. Слишком темный.">TX_RED</a>, NORMAL_BROWN, pear);
<a name="l00796"></a>00796 
<a name="l00797"></a>00797     drawMountain (700, 600, 500, 550, 200, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5ab192f19b013a2563740be0da4e7252d9" title="Оранжевый цвет.">TX_ORANGE</a>, <a class="code" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (220,220,255), <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aaefd282232c1503377c5a5e3545c579a" title="Серый цвет.">TX_GRAY</a>);
<a name="l00798"></a>00798 
<a name="l00799"></a>00799     sunnyBackground_3 = <a class="code" href="a00081.htm#ga1008da052f2fbe9ec0f70c2f6b4f0700" title="Создает дополнительный холст (контекст рисования, Device Context, DC) в памяти.">txCreateCompatibleDC</a> (800, 600);
<a name="l00800"></a>00800     <a class="code" href="a00081.htm#ga6dfb121b4a1116f987baeb515713cbbf" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt</a> (sunnyBackground_3, 0, 0, 800, 600, <a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), 0, 0);
<a name="l00801"></a>00801 
<a name="l00802"></a>00802     <span class="comment">// ==================================================</span>
<a name="l00803"></a>00803 
<a name="l00804"></a>00804     prepareMountains (SUNNYSKY_UP, SUNNYSKY_DOWN, SUNNYGROUND_UP, SUNNYGROUND_DOWN);
<a name="l00805"></a>00805 
<a name="l00806"></a>00806     <a class="code" href="a00081.htm#ga78e83baeb6a02d5fa33dd8b062e513d9" title="Стирает холст текущим цветом заполнения.">txClear</a>();
<a name="l00807"></a>00807 
<a name="l00808"></a>00808     <span class="comment">// ==================================================</span>
<a name="l00809"></a>00809 
<a name="l00810"></a>00810     drawGradientRectangle (0,0,800,600, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aac23422a0b96bfc917484ba1fb0990de" title="Темно-синий цвет. Плохо виден.">TX_BLUE</a>, SUNNYSKY_UP);
<a name="l00811"></a>00811 
<a name="l00812"></a>00812     trueSunny_up = <a class="code" href="a00081.htm#ga1008da052f2fbe9ec0f70c2f6b4f0700" title="Создает дополнительный холст (контекст рисования, Device Context, DC) в памяти.">txCreateCompatibleDC</a> (800, 600);
<a name="l00813"></a>00813     <a class="code" href="a00081.htm#ga6dfb121b4a1116f987baeb515713cbbf" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt</a> (trueSunny_up, 0, 0, 800, 600, <a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), 0, 0);
<a name="l00814"></a>00814 
<a name="l00815"></a>00815     shellForLeaderTurtle = <a class="code" href="a00081.htm#ga1008da052f2fbe9ec0f70c2f6b4f0700" title="Создает дополнительный холст (контекст рисования, Device Context, DC) в памяти.">txCreateCompatibleDC</a> (250, 125);
<a name="l00816"></a>00816     prepareTurtleShell (250, 125, LIGHT_ORANGE, NORMAL_BROWN, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a2331cdb79541487869e7c2445a2eb5f0" title="Желтый цвет.">TX_YELLOW</a>, 2);
<a name="l00817"></a>00817     <a class="code" href="a00081.htm#ga54f48f0bcb9453add294e0a9f8b1fb1d" title="Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом прозрачности...">txTransparentBlt</a> (shellForLeaderTurtle, 0, 0, 250, 125, <a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), 0, 62);
<a name="l00818"></a>00818 
<a name="l00819"></a>00819     shellForSecondTurtle = <a class="code" href="a00081.htm#ga1008da052f2fbe9ec0f70c2f6b4f0700" title="Создает дополнительный холст (контекст рисования, Device Context, DC) в памяти.">txCreateCompatibleDC</a> (160, 80);
<a name="l00820"></a>00820     prepareTurtleShell (160, 80, GREEN_MEDIUM, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a3f59cd6ad2f1c2cea3f1b4f93baae64d" title="Бирюзовый цвет.">TX_CYAN</a>, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aac23422a0b96bfc917484ba1fb0990de" title="Темно-синий цвет. Плохо виден.">TX_BLUE</a>, 2);
<a name="l00821"></a>00821     <a class="code" href="a00081.htm#ga54f48f0bcb9453add294e0a9f8b1fb1d" title="Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом прозрачности...">txTransparentBlt</a> (shellForSecondTurtle, 0, 0, 160, 80, <a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), 0, 40);
<a name="l00822"></a>00822 
<a name="l00823"></a>00823     shellForKid = <a class="code" href="a00081.htm#ga1008da052f2fbe9ec0f70c2f6b4f0700" title="Создает дополнительный холст (контекст рисования, Device Context, DC) в памяти.">txCreateCompatibleDC</a> (80, 40);
<a name="l00824"></a>00824     prepareTurtleShell (80, 40, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a342ad901a39ab4b40f091f6699b64927" title="Темно-красный цвет. Слишком темный.">TX_RED</a>, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a1c1e8dec8618fe54eee9e569a828a504" title="Светло-красный цвет. Не самого лучшего оттенка.">TX_LIGHTRED</a>, NORMAL_BROWN, 1);
<a name="l00825"></a>00825     <a class="code" href="a00081.htm#ga54f48f0bcb9453add294e0a9f8b1fb1d" title="Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом прозрачности...">txTransparentBlt</a> (shellForKid, 0, 0, 80, 40, <a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), 0, 20);
<a name="l00826"></a>00826 
<a name="l00827"></a>00827     <a class="code" href="a00081.htm#ga6689b9a89add9c5eb5cf54a8c86539a4" title="Выбирает текущий шрифт, его размер и другие атрибуты.">txSelectFont</a> (<span class="stringliteral">&quot;Comic Sans MS&quot;</span>, 60);
<a name="l00828"></a>00828     PASCAL_LOGO_WIDTH = <a class="code" href="a00081.htm#gad5483eacac697420a84f66733e45ed02" title="Вычисляет ширину текстовой надписи.">txGetTextExtentX</a> (<span class="stringliteral">&quot;Pascal&quot;</span>);
<a name="l00829"></a>00829 
<a name="l00830"></a>00830     <span class="comment">// ==================================================</span>
<a name="l00831"></a>00831 
<a name="l00832"></a>00832     <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a9f0adfcb24eeb418fc39fe950db65ec8" title="Черный цвет.">TX_BLACK</a>);
<a name="l00833"></a>00833     <a class="code" href="a00081.htm#ga78e83baeb6a02d5fa33dd8b062e513d9" title="Стирает холст текущим цветом заполнения.">txClear</a>();
<a name="l00834"></a>00834 
<a name="l00835"></a>00835     leftCloudlySlide = <a class="code" href="a00081.htm#ga1008da052f2fbe9ec0f70c2f6b4f0700" title="Создает дополнительный холст (контекст рисования, Device Context, DC) в памяти.">txCreateCompatibleDC</a> (800, 600);
<a name="l00836"></a>00836     drawCloud (600, 100, 200, 100, 40, 80, 40, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aaefd282232c1503377c5a5e3545c579a" title="Серый цвет.">TX_GRAY</a>);
<a name="l00837"></a>00837     drawCloud (550, 50, 200, 100, 40, 80, 40, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5abec0ab16c8a1ed55e137c20f80cdd25e" title="Светло-серый цвет.">TX_LIGHTGRAY</a>);
<a name="l00838"></a>00838     drawCloud (650, 75, 200, 100, 40, 80, 40, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a5308a5fc6c34169a8af67630a5a750d5" title="Темно-серый цвет.">TX_DARKGRAY</a>);
<a name="l00839"></a>00839     drawCloud (605, 200, 200, 100, 40, 80, 40, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5abec0ab16c8a1ed55e137c20f80cdd25e" title="Светло-серый цвет.">TX_LIGHTGRAY</a>);
<a name="l00840"></a>00840     drawCloud (450, 120, 200, 100, 40, 80, 40, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aaefd282232c1503377c5a5e3545c579a" title="Серый цвет.">TX_GRAY</a>);
<a name="l00841"></a>00841     drawCloud (380, 175, 200, 100, 40, 80, 40, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a5308a5fc6c34169a8af67630a5a750d5" title="Темно-серый цвет.">TX_DARKGRAY</a>);
<a name="l00842"></a>00842     drawCloud (380, 25, 200, 100, 40, 80, 40, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a5308a5fc6c34169a8af67630a5a750d5" title="Темно-серый цвет.">TX_DARKGRAY</a>);
<a name="l00843"></a>00843     drawCloud (300, 125, 200, 100, 40, 80, 40, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5abec0ab16c8a1ed55e137c20f80cdd25e" title="Светло-серый цвет.">TX_LIGHTGRAY</a>);
<a name="l00844"></a>00844     <a class="code" href="a00081.htm#ga6dfb121b4a1116f987baeb515713cbbf" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt</a> (leftCloudlySlide, 0, 0, 800, 600, <a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), 0, 0);
<a name="l00845"></a>00845 
<a name="l00846"></a>00846     <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a9f0adfcb24eeb418fc39fe950db65ec8" title="Черный цвет.">TX_BLACK</a>);
<a name="l00847"></a>00847     <a class="code" href="a00081.htm#ga78e83baeb6a02d5fa33dd8b062e513d9" title="Стирает холст текущим цветом заполнения.">txClear</a>();
<a name="l00848"></a>00848 
<a name="l00849"></a>00849     rightCloudlySlide = <a class="code" href="a00081.htm#ga1008da052f2fbe9ec0f70c2f6b4f0700" title="Создает дополнительный холст (контекст рисования, Device Context, DC) в памяти.">txCreateCompatibleDC</a> (800, 600);
<a name="l00850"></a>00850     drawCloud (370, 100, 200, 100, 40, 80, 40, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5abec0ab16c8a1ed55e137c20f80cdd25e" title="Светло-серый цвет.">TX_LIGHTGRAY</a>);
<a name="l00851"></a>00851     drawCloud (320, 50 , 200, 100, 40, 80, 40, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a5308a5fc6c34169a8af67630a5a750d5" title="Темно-серый цвет.">TX_DARKGRAY</a>);
<a name="l00852"></a>00852     drawCloud (420, 75 , 200, 100, 40, 80, 40, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aaefd282232c1503377c5a5e3545c579a" title="Серый цвет.">TX_GRAY</a>);
<a name="l00853"></a>00853     drawCloud (375, 200, 200, 100, 40, 80, 40, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a5308a5fc6c34169a8af67630a5a750d5" title="Темно-серый цвет.">TX_DARKGRAY</a>);
<a name="l00854"></a>00854     drawCloud (220, 120, 200, 100, 40, 80, 40, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5abec0ab16c8a1ed55e137c20f80cdd25e" title="Светло-серый цвет.">TX_LIGHTGRAY</a>);
<a name="l00855"></a>00855     drawCloud (150, 175, 200, 100, 40, 80, 40, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aaefd282232c1503377c5a5e3545c579a" title="Серый цвет.">TX_GRAY</a>);
<a name="l00856"></a>00856     drawCloud (150, 25 , 200, 100, 40, 80, 40, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aaefd282232c1503377c5a5e3545c579a" title="Серый цвет.">TX_GRAY</a>);
<a name="l00857"></a>00857     drawCloud (500, 25 , 200, 100, 40, 80, 40, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5abec0ab16c8a1ed55e137c20f80cdd25e" title="Светло-серый цвет.">TX_LIGHTGRAY</a>);
<a name="l00858"></a>00858     drawCloud (500, 175, 200, 100, 40, 80, 40, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5abec0ab16c8a1ed55e137c20f80cdd25e" title="Светло-серый цвет.">TX_LIGHTGRAY</a>);
<a name="l00859"></a>00859     <a class="code" href="a00081.htm#ga6dfb121b4a1116f987baeb515713cbbf" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt</a> (rightCloudlySlide, 0, 0, 800, 600, <a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), 0, 0);
<a name="l00860"></a>00860 
<a name="l00861"></a>00861     <span class="comment">// ==================================================</span>
<a name="l00862"></a>00862 
<a name="l00863"></a>00863     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> x = 0; x &lt; 7; x++) scene[x][0] = trueSunny_up;
<a name="l00864"></a>00864 
<a name="l00865"></a>00865     scene[0][1] = sunnyBackground_1;
<a name="l00866"></a>00866     scene[1][1] = sunnyBackground_2;
<a name="l00867"></a>00867     scene[2][1] = sunnyBackground_3;
<a name="l00868"></a>00868     scene[4][1] = mountains_1;
<a name="l00869"></a>00869     scene[5][1] = sunnyBackground_3;
<a name="l00870"></a>00870     scene[6][1] = sunnyBackground_3;
<a name="l00871"></a>00871     }
<a name="l00872"></a>00872 
<a name="l00873"></a>00873 <span class="keywordtype">void</span> drawGradientRectangle (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> x2, <span class="keywordtype">int</span> y2, COLORREF topColor, COLORREF downColor)
<a name="l00874"></a>00874     {
<a name="l00875"></a>00875     <span class="keywordtype">int</span> height = y2 - y;
<a name="l00876"></a>00876 
<a name="l00877"></a>00877     <span class="keywordtype">double</span> currentRed   = <a class="code" href="a00081.htm#gac2b196b6826392229fa209e01817f941" title="Извлекает цветовую компоненту (цветовой канал) из смешанного цвета.">txExtractColor</a> (topColor, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a342ad901a39ab4b40f091f6699b64927" title="Темно-красный цвет. Слишком темный.">TX_RED</a>),
<a name="l00878"></a>00878            currentGreen = <a class="code" href="a00081.htm#gac2b196b6826392229fa209e01817f941" title="Извлекает цветовую компоненту (цветовой канал) из смешанного цвета.">txExtractColor</a> (topColor, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aa13a0e0eb4587540bd06cb5d55083032" title="Зеленый цвет.">TX_GREEN</a>),
<a name="l00879"></a>00879            currentBlue  = <a class="code" href="a00081.htm#gac2b196b6826392229fa209e01817f941" title="Извлекает цветовую компоненту (цветовой канал) из смешанного цвета.">txExtractColor</a> (topColor, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aac23422a0b96bfc917484ba1fb0990de" title="Темно-синий цвет. Плохо виден.">TX_BLUE</a>);
<a name="l00880"></a>00880 
<a name="l00881"></a>00881     <span class="keywordtype">double</span> redChange    = (<a class="code" href="a00081.htm#gac2b196b6826392229fa209e01817f941" title="Извлекает цветовую компоненту (цветовой канал) из смешанного цвета.">txExtractColor</a> (downColor, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a342ad901a39ab4b40f091f6699b64927" title="Темно-красный цвет. Слишком темный.">TX_RED</a>  ) - currentRed  ) / height,
<a name="l00882"></a>00882            greenChange  = (<a class="code" href="a00081.htm#gac2b196b6826392229fa209e01817f941" title="Извлекает цветовую компоненту (цветовой канал) из смешанного цвета.">txExtractColor</a> (downColor, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aa13a0e0eb4587540bd06cb5d55083032" title="Зеленый цвет.">TX_GREEN</a>) - currentGreen) / height,
<a name="l00883"></a>00883            blueChange   = (<a class="code" href="a00081.htm#gac2b196b6826392229fa209e01817f941" title="Извлекает цветовую компоненту (цветовой канал) из смешанного цвета.">txExtractColor</a> (downColor, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aac23422a0b96bfc917484ba1fb0990de" title="Темно-синий цвет. Плохо виден.">TX_BLUE</a> ) - currentBlue ) / height;
<a name="l00884"></a>00884 
<a name="l00885"></a>00885     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> yPos = y; yPos &lt; y2; yPos++)
<a name="l00886"></a>00886         {
<a name="l00887"></a>00887         <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (<a class="code" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (currentRed, currentGreen, currentBlue));
<a name="l00888"></a>00888         <a class="code" href="a00081.htm#gaaee38df6f38b6f1729b9db1c4ac23e65" title="Рисует линию.">txLine</a> (x, yPos, x2, yPos);
<a name="l00889"></a>00889 
<a name="l00890"></a>00890         currentRed   += redChange;
<a name="l00891"></a>00891         currentGreen += greenChange;
<a name="l00892"></a>00892         currentBlue  += blueChange;
<a name="l00893"></a>00893         }
<a name="l00894"></a>00894     }
<a name="l00895"></a>00895 
<a name="l00896"></a>00896 <span class="keywordtype">void</span> drawGradientCircle (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> radius, COLORREF centerColor, COLORREF borderColor)
<a name="l00897"></a>00897     {
<a name="l00898"></a>00898     <span class="keywordflow">if</span> (radius == 0) radius = 1;
<a name="l00899"></a>00899 
<a name="l00900"></a>00900     <span class="keywordtype">double</span> currentRed   = <a class="code" href="a00081.htm#gac2b196b6826392229fa209e01817f941" title="Извлекает цветовую компоненту (цветовой канал) из смешанного цвета.">txExtractColor</a> (borderColor, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a342ad901a39ab4b40f091f6699b64927" title="Темно-красный цвет. Слишком темный.">TX_RED</a>),
<a name="l00901"></a>00901            currentGreen = <a class="code" href="a00081.htm#gac2b196b6826392229fa209e01817f941" title="Извлекает цветовую компоненту (цветовой канал) из смешанного цвета.">txExtractColor</a> (borderColor, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aa13a0e0eb4587540bd06cb5d55083032" title="Зеленый цвет.">TX_GREEN</a>),
<a name="l00902"></a>00902            currentBlue  = <a class="code" href="a00081.htm#gac2b196b6826392229fa209e01817f941" title="Извлекает цветовую компоненту (цветовой канал) из смешанного цвета.">txExtractColor</a> (borderColor, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aac23422a0b96bfc917484ba1fb0990de" title="Темно-синий цвет. Плохо виден.">TX_BLUE</a>);
<a name="l00903"></a>00903 
<a name="l00904"></a>00904     <span class="keywordtype">double</span> redChange    = (<a class="code" href="a00081.htm#gac2b196b6826392229fa209e01817f941" title="Извлекает цветовую компоненту (цветовой канал) из смешанного цвета.">txExtractColor</a> (centerColor, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a342ad901a39ab4b40f091f6699b64927" title="Темно-красный цвет. Слишком темный.">TX_RED</a>  ) - currentRed  ) / radius,
<a name="l00905"></a>00905            greenChange  = (<a class="code" href="a00081.htm#gac2b196b6826392229fa209e01817f941" title="Извлекает цветовую компоненту (цветовой канал) из смешанного цвета.">txExtractColor</a> (centerColor, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aa13a0e0eb4587540bd06cb5d55083032" title="Зеленый цвет.">TX_GREEN</a>) - currentGreen) / radius,
<a name="l00906"></a>00906            blueChange   = (<a class="code" href="a00081.htm#gac2b196b6826392229fa209e01817f941" title="Извлекает цветовую компоненту (цветовой канал) из смешанного цвета.">txExtractColor</a> (centerColor, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aac23422a0b96bfc917484ba1fb0990de" title="Темно-синий цвет. Плохо виден.">TX_BLUE</a> ) - currentBlue ) / radius;
<a name="l00907"></a>00907 
<a name="l00908"></a>00908     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> r = 0; r &lt;= radius; r++)
<a name="l00909"></a>00909         {
<a name="l00910"></a>00910         <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (currentRed, currentGreen, currentBlue));
<a name="l00911"></a>00911         <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a>     (<a class="code" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (currentRed, currentGreen, currentBlue));
<a name="l00912"></a>00912 
<a name="l00913"></a>00913         <a class="code" href="a00081.htm#gaa14e9c2a46cf713efaa1f850074d8adc" title="Рисует окружность или круг.">txCircle</a> (x, y, radius-r);
<a name="l00914"></a>00914 
<a name="l00915"></a>00915         currentRed   += redChange;
<a name="l00916"></a>00916         currentGreen += greenChange;
<a name="l00917"></a>00917         currentBlue  += blueChange;
<a name="l00918"></a>00918         }
<a name="l00919"></a>00919     }
<a name="l00920"></a>00920 
<a name="l00921"></a>00921 <span class="keywordtype">void</span> drawStripedCircle (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> stripeRadius, <span class="keywordtype">int</span> numberOfPairs, COLORREF fisrtStripe, COLORREF secondStripe)
<a name="l00922"></a>00922     {
<a name="l00923"></a>00923     <span class="keywordtype">int</span> maxRadius = stripeRadius * numberOfPairs * 2;
<a name="l00924"></a>00924 
<a name="l00925"></a>00925     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> n = 0; n &lt; numberOfPairs; n++)
<a name="l00926"></a>00926         {
<a name="l00927"></a>00927         <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (secondStripe);
<a name="l00928"></a>00928         <a class="code" href="a00081.htm#gaa14e9c2a46cf713efaa1f850074d8adc" title="Рисует окружность или круг.">txCircle</a> (x,y,maxRadius-n*stripeRadius*2);
<a name="l00929"></a>00929 
<a name="l00930"></a>00930         <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (fisrtStripe);
<a name="l00931"></a>00931         <a class="code" href="a00081.htm#gaa14e9c2a46cf713efaa1f850074d8adc" title="Рисует окружность или круг.">txCircle</a> (x,y,maxRadius-n*stripeRadius*2-stripeRadius);
<a name="l00932"></a>00932         }
<a name="l00933"></a>00933     }
<a name="l00934"></a>00934 
<a name="l00935"></a>00935 <span class="keywordtype">void</span> drawLeafPart (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> size)
<a name="l00936"></a>00936     {
<a name="l00937"></a>00937     <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a01fe8cb0f589868456167ee3a4652df8" title="Прозрачный цвет. Отключает рисование.">TX_TRANSPARENT</a>);
<a name="l00938"></a>00938 
<a name="l00939"></a>00939     <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (GREEN_DARK);
<a name="l00940"></a>00940     <a class="code" href="a00081.htm#gaa14e9c2a46cf713efaa1f850074d8adc" title="Рисует окружность или круг.">txCircle</a> (x-0.3*size, y+0.7*size, size);
<a name="l00941"></a>00941 
<a name="l00942"></a>00942     <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (GREEN_MEDIUM);
<a name="l00943"></a>00943     <a class="code" href="a00081.htm#gaa14e9c2a46cf713efaa1f850074d8adc" title="Рисует окружность или круг.">txCircle</a> (x-0.5*size, y-0.5*size, size);
<a name="l00944"></a>00944 
<a name="l00945"></a>00945     <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (GREEN_LIGHT);
<a name="l00946"></a>00946     <a class="code" href="a00081.htm#gaa14e9c2a46cf713efaa1f850074d8adc" title="Рисует окружность или круг.">txCircle</a> (x+0.7*size, y-0.3*size, size);
<a name="l00947"></a>00947     }
<a name="l00948"></a>00948 
<a name="l00949"></a>00949 <span class="keywordtype">void</span> drawLeafRow (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> leafNumber, <span class="keywordtype">int</span> leafSize)
<a name="l00950"></a>00950     {
<a name="l00951"></a>00951     <span class="keywordtype">int</span> space     =  leafSize * 2/3;
<a name="l00952"></a>00952     <span class="keywordtype">int</span> totalSize = (leafSize * 2) * leafNumber + space * leafNumber;
<a name="l00953"></a>00953 
<a name="l00954"></a>00954     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; leafNumber; i++)
<a name="l00955"></a>00955         drawLeafPart (x - totalSize / 2 + i * (leafSize * 2 + space) + leafSize * 3/2, y, leafSize);
<a name="l00956"></a>00956     }
<a name="l00957"></a>00957 
<a name="l00958"></a>00958 <span class="keywordtype">void</span> drawFruitRow (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> leafNumber, <span class="keywordtype">int</span> leafsize, HDC fruit)
<a name="l00959"></a>00959     {
<a name="l00960"></a>00960     <span class="keywordtype">int</span> space     =  leafsize * 2/3;
<a name="l00961"></a>00961     <span class="keywordtype">int</span> totalsize = (leafsize * 2) * leafNumber + space * leafNumber;
<a name="l00962"></a>00962 
<a name="l00963"></a>00963     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; leafNumber-1; i++)
<a name="l00964"></a>00964         <a class="code" href="a00081.htm#ga54f48f0bcb9453add294e0a9f8b1fb1d" title="Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом прозрачности...">txTransparentBlt</a> (<a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), x - totalsize/2 + i * (leafsize*2 + space) + leafsize*1.8, y-15, 30, 30, fruit, 0, 0, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a9f0adfcb24eeb418fc39fe950db65ec8" title="Черный цвет.">TX_BLACK</a>);
<a name="l00965"></a>00965     }
<a name="l00966"></a>00966 
<a name="l00967"></a>00967 <span class="keywordtype">void</span> drawTree (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> trunkWidth, <span class="keywordtype">int</span> trunkHeight, <span class="keywordtype">int</span> leafRowNumber, <span class="keywordtype">int</span> leafSize, COLORREF borderColor, COLORREF fillColor, HDC fruit)
<a name="l00968"></a>00968     {
<a name="l00969"></a>00969     <span class="keywordtype">int</span> circleDiameter = (int) (sqrt (2.0 * trunkWidth * trunkWidth) + 1.5);
<a name="l00970"></a>00970 
<a name="l00971"></a>00971     <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (fillColor);
<a name="l00972"></a>00972 
<a name="l00973"></a>00973     <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (borderColor, 2);
<a name="l00974"></a>00974     <a class="code" href="a00081.htm#ga5e1e4cc39cc18962bb480c4adfa1344d" title="Рисует дугу эллипса.">txArc</a> (x - circleDiameter / 2, y + trunkHeight - (circleDiameter + trunkWidth) / 2,
<a name="l00975"></a>00975            x + circleDiameter / 2, y + trunkHeight + (circleDiameter - trunkWidth) / 2, 225, 90);
<a name="l00976"></a>00976 
<a name="l00977"></a>00977     <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a01fe8cb0f589868456167ee3a4652df8" title="Прозрачный цвет. Отключает рисование.">TX_TRANSPARENT</a>);
<a name="l00978"></a>00978     <a class="code" href="a00081.htm#ga8e06e3abcb6b3724d332feb8aa83a8df" title="Рисует сектор эллипса.">txPie</a> (x - circleDiameter / 2, y + trunkHeight - (circleDiameter + trunkWidth) / 2,
<a name="l00979"></a>00979            x + circleDiameter / 2, y + trunkHeight + (circleDiameter - trunkWidth) / 2, 225, 90);
<a name="l00980"></a>00980 
<a name="l00981"></a>00981     POINT treePolygon[5] = {{ x - trunkWidth / 4, y               },
<a name="l00982"></a>00982                             { x + trunkWidth / 4, y               },
<a name="l00983"></a>00983                             { x + trunkWidth / 2, y + trunkHeight },
<a name="l00984"></a>00984                             { x - trunkWidth / 2, y + trunkHeight },
<a name="l00985"></a>00985                             { x - trunkWidth / 4, y               }};
<a name="l00986"></a>00986 
<a name="l00987"></a>00987     <a class="code" href="a00081.htm#gacbbb638439ad7ba88804178516019fb1" title="Рисует ломаную линию или многоугольник.">txPolygon</a> (treePolygon, 5);
<a name="l00988"></a>00988 
<a name="l00989"></a>00989     <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (borderColor, 2);
<a name="l00990"></a>00990     <a class="code" href="a00081.htm#gaaee38df6f38b6f1729b9db1c4ac23e65" title="Рисует линию.">txLine</a> (x - trunkWidth / 4, y, x - trunkWidth / 2, y + trunkHeight);
<a name="l00991"></a>00991     <a class="code" href="a00081.htm#gaaee38df6f38b6f1729b9db1c4ac23e65" title="Рисует линию.">txLine</a> (x + trunkWidth / 4, y, x + trunkWidth / 2, y + trunkHeight);
<a name="l00992"></a>00992 
<a name="l00993"></a>00993     <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (fillColor);
<a name="l00994"></a>00994 
<a name="l00995"></a>00995     drawLeafRow (x, y, leafRowNumber, leafSize);
<a name="l00996"></a>00996 
<a name="l00997"></a>00997     <span class="keywordtype">int</span> i = 0;
<a name="l00998"></a>00998     <span class="keywordflow">for</span> (i = 0; i &lt; leafRowNumber; i++)
<a name="l00999"></a>00999         drawLeafRow (x, y - leafSize *7/4 * (i+1), leafRowNumber + 1, leafSize);
<a name="l01000"></a>01000 
<a name="l01001"></a>01001     <span class="keywordflow">for</span> (i = leafRowNumber; i &gt;= 0; i--)
<a name="l01002"></a>01002         drawLeafRow (x, y - leafSize *7/4 * (leafRowNumber*2 - i), i+1, leafSize);
<a name="l01003"></a>01003 
<a name="l01004"></a>01004     drawFruitRow (x, y, leafRowNumber, leafSize, fruit);
<a name="l01005"></a>01005 
<a name="l01006"></a>01006     <span class="keywordflow">for</span> (i = 0; i &lt; leafRowNumber; i++)
<a name="l01007"></a>01007         drawFruitRow (x, y - leafSize *7/4 * (i+1), leafRowNumber + 1, leafSize, fruit);
<a name="l01008"></a>01008 
<a name="l01009"></a>01009     <span class="keywordflow">for</span> (i = leafRowNumber; i &gt;= 0; i--)
<a name="l01010"></a>01010         drawFruitRow (x, y - leafSize *7/4 * (leafRowNumber*2 - i), i+1, leafSize, fruit);
<a name="l01011"></a>01011     }
<a name="l01012"></a>01012 
<a name="l01013"></a>01013 <span class="keywordtype">void</span> prepareTurtleShell (<span class="keywordtype">int</span> width, <span class="keywordtype">int</span> height, COLORREF baseColor, COLORREF specials, COLORREF border, <span class="keywordtype">int</span> thickness)
<a name="l01014"></a>01014     {
<a name="l01015"></a>01015     <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a01fe8cb0f589868456167ee3a4652df8" title="Прозрачный цвет. Отключает рисование.">TX_TRANSPARENT</a>);
<a name="l01016"></a>01016     <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a9f0adfcb24eeb418fc39fe950db65ec8" title="Черный цвет.">TX_BLACK</a>);
<a name="l01017"></a>01017     <a class="code" href="a00081.htm#ga18a0418f3c06463e958077cddf2a4864" title="Рисует прямоугольник.">txRectangle</a> (0, 0, width, height);
<a name="l01018"></a>01018 
<a name="l01019"></a>01019     <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025" title="Белый цвет.">TX_WHITE</a>);
<a name="l01020"></a>01020     <a class="code" href="a00081.htm#gaaf82e7c5a0fd06548f42c757f73d3dae" title="Рисует эллипс.">txEllipse</a> (0, 0, width, height * 2);
<a name="l01021"></a>01021 
<a name="l01022"></a>01022     HDC mask = <a class="code" href="a00081.htm#ga1008da052f2fbe9ec0f70c2f6b4f0700" title="Создает дополнительный холст (контекст рисования, Device Context, DC) в памяти.">txCreateCompatibleDC</a> (width, height);
<a name="l01023"></a>01023     <a class="code" href="a00081.htm#ga6dfb121b4a1116f987baeb515713cbbf" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt</a> (mask, 0, 0, width, height, <a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), 0, 0);
<a name="l01024"></a>01024 
<a name="l01025"></a>01025     <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a9f0adfcb24eeb418fc39fe950db65ec8" title="Черный цвет.">TX_BLACK</a>);
<a name="l01026"></a>01026     <a class="code" href="a00081.htm#ga18a0418f3c06463e958077cddf2a4864" title="Рисует прямоугольник.">txRectangle</a> (0, 0, width, height * 2);
<a name="l01027"></a>01027     <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025" title="Белый цвет.">TX_WHITE</a>);
<a name="l01028"></a>01028     <a class="code" href="a00081.htm#gaaf82e7c5a0fd06548f42c757f73d3dae" title="Рисует эллипс.">txEllipse</a> (0, 0, width, height);
<a name="l01029"></a>01029 
<a name="l01030"></a>01030     HDC mask_down = <a class="code" href="a00081.htm#ga1008da052f2fbe9ec0f70c2f6b4f0700" title="Создает дополнительный холст (контекст рисования, Device Context, DC) в памяти.">txCreateCompatibleDC</a> (width, height);
<a name="l01031"></a>01031     <a class="code" href="a00081.htm#ga6dfb121b4a1116f987baeb515713cbbf" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt</a> (mask_down, 0, 0, width, height, <a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), 0, 0);
<a name="l01032"></a>01032 
<a name="l01033"></a>01033     <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a9f0adfcb24eeb418fc39fe950db65ec8" title="Черный цвет.">TX_BLACK</a>);
<a name="l01034"></a>01034     <a class="code" href="a00081.htm#ga18a0418f3c06463e958077cddf2a4864" title="Рисует прямоугольник.">txRectangle</a> (0, 0, width, height*2);
<a name="l01035"></a>01035 
<a name="l01036"></a>01036     drawStyledTurtleShell (width/2, height/2, height *5/2, width, height/5, width/10,
<a name="l01037"></a>01037                            7, 20, width/25, baseColor, specials, border, thickness);
<a name="l01038"></a>01038 
<a name="l01039"></a>01039     <a class="code" href="a00081.htm#ga54f48f0bcb9453add294e0a9f8b1fb1d" title="Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом прозрачности...">txTransparentBlt</a> (<a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), 0, height/2, width, height, mask,      0, 0, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025" title="Белый цвет.">TX_WHITE</a>);
<a name="l01040"></a>01040     <a class="code" href="a00081.htm#ga54f48f0bcb9453add294e0a9f8b1fb1d" title="Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом прозрачности...">txTransparentBlt</a> (<a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), 0, height/2, width, height, mask_down, 0, 0, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025" title="Белый цвет.">TX_WHITE</a>);
<a name="l01041"></a>01041 
<a name="l01042"></a>01042     <a class="code" href="a00081.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC</a> (mask);
<a name="l01043"></a>01043     <a class="code" href="a00081.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC</a> (mask_down);
<a name="l01044"></a>01044     }
<a name="l01045"></a>01045 
<a name="l01046"></a>01046 
<a name="l01047"></a>01047 <span class="keywordtype">void</span> drawTurtleBody (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> width, <span class="keywordtype">int</span> height, <span class="keywordtype">int</span> walkingPos, COLORREF body, COLORREF border, COLORREF eye, COLORREF eyeBorder, HDC shell)
<a name="l01048"></a>01048     {
<a name="l01049"></a>01049     <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (body);
<a name="l01050"></a>01050     <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (border, 2);
<a name="l01051"></a>01051 
<a name="l01052"></a>01052     POINT polygon[5] = {{ x + width *7/8, y + height *7/8                },
<a name="l01053"></a>01053                         { x + width,      y + height *7/8                },
<a name="l01054"></a>01054                         { x + width *6/5, y + height *1/5 + walkingPos/2 },
<a name="l01055"></a>01055                         { x + width,      y + height *1/5 + walkingPos/2 },
<a name="l01056"></a>01056                         { x + width *7/8, y + height *7/8                }};
<a name="l01057"></a>01057 
<a name="l01058"></a>01058     <a class="code" href="a00081.htm#gacbbb638439ad7ba88804178516019fb1" title="Рисует ломаную линию или многоугольник.">txPolygon</a> (polygon, 5);
<a name="l01059"></a>01059 
<a name="l01060"></a>01060     <a class="code" href="a00081.htm#gaaf82e7c5a0fd06548f42c757f73d3dae" title="Рисует эллипс.">txEllipse</a> (x - walkingPos/3, y + height *3/4, x + width, y + height);
<a name="l01061"></a>01061     <a class="code" href="a00081.htm#gaaf82e7c5a0fd06548f42c757f73d3dae" title="Рисует эллипс.">txEllipse</a> (x + width, y + walkingPos/2, x + width*1.3, y + height*0.4 + walkingPos/2);
<a name="l01062"></a>01062 
<a name="l01063"></a>01063     <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a01fe8cb0f589868456167ee3a4652df8" title="Прозрачный цвет. Отключает рисование.">TX_TRANSPARENT</a>);
<a name="l01064"></a>01064     <a class="code" href="a00081.htm#gacbbb638439ad7ba88804178516019fb1" title="Рисует ломаную линию или многоугольник.">txPolygon</a> (polygon, 5);
<a name="l01065"></a>01065 
<a name="l01066"></a>01066     <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (eye);
<a name="l01067"></a>01067     <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (eyeBorder);
<a name="l01068"></a>01068     <a class="code" href="a00081.htm#gaaf82e7c5a0fd06548f42c757f73d3dae" title="Рисует эллипс.">txEllipse</a> (x + width * 1.1, y + height * 0.05 + walkingPos/2 + walkingPos/5,
<a name="l01069"></a>01069                x + width * 1.2, y + height * 0.3  + walkingPos/2 - walkingPos/3);
<a name="l01070"></a>01070 
<a name="l01071"></a>01071     <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (eyeBorder);
<a name="l01072"></a>01072     <a class="code" href="a00081.htm#gaa14e9c2a46cf713efaa1f850074d8adc" title="Рисует окружность или круг.">txCircle</a> (x + width * 1.15, y + height * 0.15 + walkingPos / 2, 2);
<a name="l01073"></a>01073 
<a name="l01074"></a>01074     <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (body);
<a name="l01075"></a>01075     <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (border, 2);
<a name="l01076"></a>01076     <a class="code" href="a00081.htm#gaa14e9c2a46cf713efaa1f850074d8adc" title="Рисует окружность или круг.">txCircle</a> (x + width * 0.9 - walkingPos, y + height, width / 16);
<a name="l01077"></a>01077     <a class="code" href="a00081.htm#gaa14e9c2a46cf713efaa1f850074d8adc" title="Рисует окружность или круг.">txCircle</a> (x + width * 0.8 + walkingPos, y + height, width / 16);
<a name="l01078"></a>01078     <a class="code" href="a00081.htm#gaa14e9c2a46cf713efaa1f850074d8adc" title="Рисует окружность или круг.">txCircle</a> (x + width * 0.3 - walkingPos, y + height, width / 16);
<a name="l01079"></a>01079     <a class="code" href="a00081.htm#gaa14e9c2a46cf713efaa1f850074d8adc" title="Рисует окружность или круг.">txCircle</a> (x + width * 0.2 + walkingPos, y + height, width / 16);
<a name="l01080"></a>01080 
<a name="l01081"></a>01081     <a class="code" href="a00081.htm#ga54f48f0bcb9453add294e0a9f8b1fb1d" title="Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом прозрачности...">txTransparentBlt</a> (<a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), x + width/20, y + height/10 + walkingPos/3, width-1, height,
<a name="l01082"></a>01082                       shell, 0, 0, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a9f0adfcb24eeb418fc39fe950db65ec8" title="Черный цвет.">TX_BLACK</a>);
<a name="l01083"></a>01083     }
<a name="l01084"></a>01084 
<a name="l01085"></a>01085 
<a name="l01086"></a>01086 <span class="keywordtype">void</span> drawTurtle (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> width, <span class="keywordtype">int</span> height, COLORREF shellColor, COLORREF stripesColor)
<a name="l01087"></a>01087     {
<a name="l01088"></a>01088     <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (stripesColor, 1);
<a name="l01089"></a>01089     <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (shellColor);
<a name="l01090"></a>01090     <a class="code" href="a00081.htm#ga8e06e3abcb6b3724d332feb8aa83a8df" title="Рисует сектор эллипса.">txPie</a> (x - width / 2, y - height, x + width / 2, y + height, 0, 180);
<a name="l01091"></a>01091 
<a name="l01092"></a>01092     <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a01fe8cb0f589868456167ee3a4652df8" title="Прозрачный цвет. Отключает рисование.">TX_TRANSPARENT</a>);
<a name="l01093"></a>01093     <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (stripesColor);
<a name="l01094"></a>01094 
<a name="l01095"></a>01095     <a class="code" href="a00081.htm#gaaf82e7c5a0fd06548f42c757f73d3dae" title="Рисует эллипс.">txEllipse</a> (x - width * 4 / 22, y - height * 17/22, x + width * 4/22, y - height*5/22);
<a name="l01096"></a>01096     <a class="code" href="a00081.htm#gaaf82e7c5a0fd06548f42c757f73d3dae" title="Рисует эллипс.">txEllipse</a> (x - width * 2 / 22, y - height * 4/22, x + width * 2/22, y);
<a name="l01097"></a>01097     <a class="code" href="a00081.htm#gaaf82e7c5a0fd06548f42c757f73d3dae" title="Рисует эллипс.">txEllipse</a> (x - width * 2 / 22, y - height, x + width * 2/22, y - height*18/22);
<a name="l01098"></a>01098     <a class="code" href="a00081.htm#gaaf82e7c5a0fd06548f42c757f73d3dae" title="Рисует эллипс.">txEllipse</a> (x - width * 4 / 22, y - height * 17/22, x + width*4/22, y - height * 5/22);
<a name="l01099"></a>01099     }
<a name="l01100"></a>01100 
<a name="l01101"></a>01101 <span class="keywordtype">void</span> drawBaloon (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> radius, <span class="keywordtype">int</span> sizeOfStripe, COLORREF centerStripe, COLORREF secondStripe, COLORREF base, COLORREF border)
<a name="l01102"></a>01102     {
<a name="l01103"></a>01103     <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (border, 1);
<a name="l01104"></a>01104     <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (base);
<a name="l01105"></a>01105 
<a name="l01106"></a>01106     POINT baseFigure[5] = {{ x - radius / 2  , y + radius * 3/2 },
<a name="l01107"></a>01107                            { x + radius / 2  , y + radius * 3/2 },
<a name="l01108"></a>01108                            { x + radius * 2/5, y + radius * 2   },
<a name="l01109"></a>01109                            { x - radius * 2/5, y + radius * 2   },
<a name="l01110"></a>01110                            { x - radius / 2  , y + radius * 3/2 }};
<a name="l01111"></a>01111 
<a name="l01112"></a>01112     <a class="code" href="a00081.htm#gacbbb638439ad7ba88804178516019fb1" title="Рисует ломаную линию или многоугольник.">txPolygon</a> (baseFigure, 5);
<a name="l01113"></a>01113 
<a name="l01114"></a>01114     <span class="keywordtype">int</span> number = 0;
<a name="l01115"></a>01115     <span class="keywordflow">for</span> (number = 0; number &lt; radius / sizeOfStripe; number++)
<a name="l01116"></a>01116         {
<a name="l01117"></a>01117         <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (border, 1);
<a name="l01118"></a>01118         <a class="code" href="a00081.htm#gaaee38df6f38b6f1729b9db1c4ac23e65" title="Рисует линию.">txLine</a> (x - radius + number * sizeOfStripe,     y, x - radius/2 + number * sizeOfStripe / 2, y + radius * 1.5);
<a name="l01119"></a>01119         <a class="code" href="a00081.htm#gaaee38df6f38b6f1729b9db1c4ac23e65" title="Рисует линию.">txLine</a> (x + radius - number * sizeOfStripe - 1, y, x + radius/2 - number * sizeOfStripe / 2, y + radius * 1.5);
<a name="l01120"></a>01120 
<a name="l01121"></a>01121         <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a9f0adfcb24eeb418fc39fe950db65ec8" title="Черный цвет.">TX_BLACK</a>, 1);
<a name="l01122"></a>01122         <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> ((number % 2 == 0)? centerStripe : secondStripe);
<a name="l01123"></a>01123 
<a name="l01124"></a>01124         <a class="code" href="a00081.htm#gaaf82e7c5a0fd06548f42c757f73d3dae" title="Рисует эллипс.">txEllipse</a> (x - radius + number * sizeOfStripe, y - radius, x + radius - number * sizeOfStripe, y + radius);
<a name="l01125"></a>01125         }
<a name="l01126"></a>01126 
<a name="l01127"></a>01127     <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> ((number % 2 == 0)? centerStripe : secondStripe);
<a name="l01128"></a>01128     <a class="code" href="a00081.htm#gaaf82e7c5a0fd06548f42c757f73d3dae" title="Рисует эллипс.">txEllipse</a> (x - sizeOfStripe / 2, y - radius, x + sizeOfStripe / 2, y + radius);
<a name="l01129"></a>01129 
<a name="l01130"></a>01130     <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (border);
<a name="l01131"></a>01131     <a class="code" href="a00081.htm#gaaee38df6f38b6f1729b9db1c4ac23e65" title="Рисует линию.">txLine</a> (x, y + radius, x, y + radius * 1.5);
<a name="l01132"></a>01132     }
<a name="l01133"></a>01133 
<a name="l01134"></a>01134 <span class="keywordtype">void</span> calculateTables()
<a name="l01135"></a>01135     {
<a name="l01136"></a>01136     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> x = 0; x &lt; 360; x++)
<a name="l01137"></a>01137         {
<a name="l01138"></a>01138         sinTable[x] = sin (x * <a class="code" href="a00080.htm#gaf59817ad656dcbb3f9baebeb4d7f82f7" title="Число Пи">txPI</a> / 180);
<a name="l01139"></a>01139         cosTable[x] = cos (x * <a class="code" href="a00080.htm#gaf59817ad656dcbb3f9baebeb4d7f82f7" title="Число Пи">txPI</a> / 180);
<a name="l01140"></a>01140         }
<a name="l01141"></a>01141     }
<a name="l01142"></a>01142 
<a name="l01143"></a>01143 <span class="keywordtype">void</span> trigonometricSetPointOfRest (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y)
<a name="l01144"></a>01144     {
<a name="l01145"></a>01145     pointOfRest_x = x;
<a name="l01146"></a>01146     pointOfRest_y = y;
<a name="l01147"></a>01147     }
<a name="l01148"></a>01148 
<a name="l01149"></a>01149 <span class="keywordtype">int</span> trigonometricGetNormalAngle (<span class="keywordtype">int</span> ang)
<a name="l01150"></a>01150     {
<a name="l01151"></a>01151     <span class="keywordtype">int</span> angle = ang;
<a name="l01152"></a>01152 
<a name="l01153"></a>01153     <span class="keywordflow">while</span> (angle &lt;   0) angle += 360;
<a name="l01154"></a>01154     <span class="keywordflow">while</span> (angle &gt; 360) angle -= 360;
<a name="l01155"></a>01155 
<a name="l01156"></a>01156     <span class="keywordflow">return</span> (angle &lt;= 180)? 180 - angle : 540 - angle;
<a name="l01157"></a>01157     }
<a name="l01158"></a>01158 
<a name="l01159"></a>01159 <span class="keywordtype">void</span> trigonometricDrawLine (<span class="keywordtype">int</span> angle, <span class="keywordtype">int</span> lenght)
<a name="l01160"></a>01160     {
<a name="l01161"></a>01161     <span class="keywordtype">int</span> ang = trigonometricGetNormalAngle (angle);
<a name="l01162"></a>01162     <span class="keywordtype">int</span> endx = (int) (pointOfRest_x + sinTable[ang] * lenght);
<a name="l01163"></a>01163     <span class="keywordtype">int</span> endy = (int) (pointOfRest_y + cosTable[ang] * lenght);
<a name="l01164"></a>01164 
<a name="l01165"></a>01165     <a class="code" href="a00081.htm#gaaee38df6f38b6f1729b9db1c4ac23e65" title="Рисует линию.">txLine</a> (pointOfRest_x, pointOfRest_y, endx, endy);
<a name="l01166"></a>01166 
<a name="l01167"></a>01167     pointOfRest_x = endx;
<a name="l01168"></a>01168     pointOfRest_y = endy;
<a name="l01169"></a>01169     }
<a name="l01170"></a>01170 
<a name="l01171"></a>01171 <span class="keywordtype">void</span> trigonometricDrawLineAndReturn (<span class="keywordtype">int</span> angle, <span class="keywordtype">int</span> lenght)
<a name="l01172"></a>01172     {
<a name="l01173"></a>01173     <span class="keywordtype">int</span> ang = trigonometricGetNormalAngle (angle);
<a name="l01174"></a>01174     <span class="keywordtype">int</span> endx = (int) (pointOfRest_x + sinTable[ang] * lenght);
<a name="l01175"></a>01175     <span class="keywordtype">int</span> endy = (int) (pointOfRest_y + cosTable[ang] * lenght);
<a name="l01176"></a>01176 
<a name="l01177"></a>01177     <a class="code" href="a00081.htm#gaaee38df6f38b6f1729b9db1c4ac23e65" title="Рисует линию.">txLine</a> (pointOfRest_x, pointOfRest_y, endx, endy);
<a name="l01178"></a>01178     }
<a name="l01179"></a>01179 
<a name="l01180"></a>01180 <span class="keywordtype">void</span> trigonometricMove (<span class="keywordtype">int</span> angle, <span class="keywordtype">int</span> lenght)
<a name="l01181"></a>01181     {
<a name="l01182"></a>01182     <span class="keywordtype">int</span> ang = trigonometricGetNormalAngle (angle);
<a name="l01183"></a>01183 
<a name="l01184"></a>01184     pointOfRest_x = (int) (pointOfRest_x + sinTable[ang] * lenght);
<a name="l01185"></a>01185     pointOfRest_y = (int) (pointOfRest_y + cosTable[ang] * lenght);
<a name="l01186"></a>01186     }
<a name="l01187"></a>01187 
<a name="l01188"></a>01188 <span class="keywordtype">int</span> trigonometricGetAngleOfLine (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> x2, <span class="keywordtype">int</span> y2)
<a name="l01189"></a>01189     {
<a name="l01190"></a>01190     <span class="keywordflow">return</span> (<span class="keywordtype">int</span>) (180 - (atan2 (1.0 * (x2 - x), 1.0 * (y2 - y)) * 180 / <a class="code" href="a00080.htm#gaf59817ad656dcbb3f9baebeb4d7f82f7" title="Число Пи">txPI</a>));
<a name="l01191"></a>01191     }
<a name="l01192"></a>01192 
<a name="l01193"></a>01193 <span class="keywordtype">void</span> drawStickMan (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> height, <span class="keywordtype">int</span> hairIntensivity, <span class="keywordtype">int</span> hairLenght, <span class="keywordtype">int</span> walkingPosition,
<a name="l01194"></a>01194                    <span class="keywordtype">int</span> leftBase, <span class="keywordtype">int</span> leftSpecial, <span class="keywordtype">int</span> rightBase, <span class="keywordtype">int</span> rightSpecial, <span class="keywordtype">int</span> direction, <span class="keywordtype">int</span> walkingAngle,
<a name="l01195"></a>01195                    COLORREF bodyColor, COLORREF hairColor, COLORREF headColor, COLORREF eyeColor, <span class="keywordtype">int</span> rotation, <span class="keywordtype">int</span> bodyRot)
<a name="l01196"></a>01196     {
<a name="l01197"></a>01197     <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a>     (bodyColor);
<a name="l01198"></a>01198     <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (headColor);
<a name="l01199"></a>01199 
<a name="l01200"></a>01200     trigonometricSetPointOfRest (x, y);
<a name="l01201"></a>01201     trigonometricDrawLine (180 - walkingAngle / 2 + walkingPosition + rotation, height *2/5);
<a name="l01202"></a>01202     trigonometricDrawLine ( 90 - walkingAngle / 2 + walkingPosition + rotation, height /20);
<a name="l01203"></a>01203 
<a name="l01204"></a>01204     <span class="keywordtype">int</span> angleBetweenLegs = walkingPosition;
<a name="l01205"></a>01205     <span class="keywordflow">if</span> (angleBetweenLegs &gt; walkingAngle / 2) angleBetweenLegs = walkingAngle - angleBetweenLegs;
<a name="l01206"></a>01206 
<a name="l01207"></a>01207     trigonometricSetPointOfRest (x, y);
<a name="l01208"></a>01208     trigonometricDrawLine (180 + walkingAngle / 2 - walkingPosition + rotation, height / 5);
<a name="l01209"></a>01209     trigonometricDrawLine (180 + walkingAngle / 2 - walkingPosition + angleBetweenLegs + rotation, height/5);
<a name="l01210"></a>01210     trigonometricDrawLine ( 90 + walkingAngle / 2 - walkingPosition + angleBetweenLegs + rotation, height/20);
<a name="l01211"></a>01211 
<a name="l01212"></a>01212     trigonometricSetPointOfRest (x, y);
<a name="l01213"></a>01213     trigonometricDrawLine (bodyRot + rotation, height * 2/5);
<a name="l01214"></a>01214 
<a name="l01215"></a>01215     <span class="keywordtype">int</span> neckX = pointOfRest_x,
<a name="l01216"></a>01216         neckY = pointOfRest_y;
<a name="l01217"></a>01217 
<a name="l01218"></a>01218     <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (hairColor);
<a name="l01219"></a>01219 
<a name="l01220"></a>01220     trigonometricSetPointOfRest (neckX, neckY);
<a name="l01221"></a>01221     trigonometricMove (bodyRot + rotation, height / 10);
<a name="l01222"></a>01222 
<a name="l01223"></a>01223     <span class="keywordtype">int</span> headx = pointOfRest_x,
<a name="l01224"></a>01224         heady = pointOfRest_y;
<a name="l01225"></a>01225 
<a name="l01226"></a>01226     <span class="keywordtype">int</span> space      = 90 / hairIntensivity;
<a name="l01227"></a>01227         hairLenght = hairLenght + height / 10;
<a name="l01228"></a>01228 
<a name="l01229"></a>01229     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> number = 0; number &lt; hairIntensivity + 1; number++)
<a name="l01230"></a>01230         trigonometricDrawLineAndReturn (direction - 135 + space * number + rotation, hairLenght);
<a name="l01231"></a>01231 
<a name="l01232"></a>01232     <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (bodyColor);
<a name="l01233"></a>01233     <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (headColor);
<a name="l01234"></a>01234     <a class="code" href="a00081.htm#gaa14e9c2a46cf713efaa1f850074d8adc" title="Рисует окружность или круг.">txCircle</a> (headx, heady, height / 10);
<a name="l01235"></a>01235 
<a name="l01236"></a>01236     trigonometricSetPointOfRest (headx, heady);
<a name="l01237"></a>01237     trigonometricMove (direction      + rotation, height / 20);
<a name="l01238"></a>01238     trigonometricMove (direction - 90 + rotation, height / 50);
<a name="l01239"></a>01239 
<a name="l01240"></a>01240     <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (eyeColor);
<a name="l01241"></a>01241     <a class="code" href="a00081.htm#gaa14e9c2a46cf713efaa1f850074d8adc" title="Рисует окружность или круг.">txCircle</a> (pointOfRest_x,     pointOfRest_y, height / 50);
<a name="l01242"></a>01242     <a class="code" href="a00081.htm#gaa14e9c2a46cf713efaa1f850074d8adc" title="Рисует окружность или круг.">txCircle</a> (pointOfRest_x + 1, pointOfRest_y, height / 125);
<a name="l01243"></a>01243 
<a name="l01244"></a>01244     trigonometricSetPointOfRest (headx, heady);
<a name="l01245"></a>01245     trigonometricMove     (direction + 15 + rotation, height / 20);
<a name="l01246"></a>01246     trigonometricDrawLine (direction + 15 + rotation, height / 20);
<a name="l01247"></a>01247 
<a name="l01248"></a>01248     trigonometricSetPointOfRest (neckX, neckY);
<a name="l01249"></a>01249     trigonometricDrawLine (leftBase    + rotation, height / 5);
<a name="l01250"></a>01250     trigonometricDrawLine (leftSpecial + rotation, height / 5);
<a name="l01251"></a>01251 
<a name="l01252"></a>01252     trigonometricSetPointOfRest (neckX, neckY);
<a name="l01253"></a>01253     trigonometricDrawLine (rightBase    + rotation, height / 5);
<a name="l01254"></a>01254     trigonometricDrawLine (rightSpecial + rotation, height / 5);
<a name="l01255"></a>01255     }
<a name="l01256"></a>01256 
<a name="l01257"></a>01257 POINT getPoint (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y)
<a name="l01258"></a>01258     {
<a name="l01259"></a>01259     POINT p = {x, y};
<a name="l01260"></a>01260     <span class="keywordflow">return</span> p;
<a name="l01261"></a>01261     }
<a name="l01262"></a>01262 
<a name="l01263"></a>01263 <span class="keywordtype">void</span> drawMountain (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> width, <span class="keywordtype">int</span> height, <span class="keywordtype">int</span> snowHeight, COLORREF ground, COLORREF snow, COLORREF border)
<a name="l01264"></a>01264     {
<a name="l01265"></a>01265     POINT mountain[3] = {{ x - width/2, y          },
<a name="l01266"></a>01266                          { x + width/2, y          },
<a name="l01267"></a>01267                          { x,           y - height }};
<a name="l01268"></a>01268 
<a name="l01269"></a>01269     <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (ground);
<a name="l01270"></a>01270     <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (border, 2);
<a name="l01271"></a>01271     <a class="code" href="a00081.htm#gacbbb638439ad7ba88804178516019fb1" title="Рисует ломаную линию или многоугольник.">txPolygon</a> (mountain, 3);
<a name="l01272"></a>01272 
<a name="l01273"></a>01273     trigonometricSetPointOfRest (x, y - height);
<a name="l01274"></a>01274     trigonometricMove (trigonometricGetAngleOfLine (x, y - height, x - width / 2, y), snowHeight);
<a name="l01275"></a>01275 
<a name="l01276"></a>01276     <span class="keywordtype">int</span> pointX = pointOfRest_x,
<a name="l01277"></a>01277         pointY = pointOfRest_y;
<a name="l01278"></a>01278 
<a name="l01279"></a>01279     <span class="keywordtype">int</span> snowWidth = (x - pointOfRest_x) * 2;
<a name="l01280"></a>01280     <span class="keywordtype">int</span> snowSpace = height / 40;
<a name="l01281"></a>01281     <span class="keywordtype">int</span> snowPointsNumber = snowWidth/snowSpace;
<a name="l01282"></a>01282 
<a name="l01283"></a>01283     POINT* snowPolygon = <span class="keyword">new</span> POINT [snowPointsNumber + 4];
<a name="l01284"></a>01284 
<a name="l01285"></a>01285     snowPolygon [0] =
<a name="l01286"></a>01286     snowPolygon [snowPointsNumber + 3] = getPoint (x, y - height);
<a name="l01287"></a>01287     snowPolygon [1]                    = getPoint (pointX, pointY);
<a name="l01288"></a>01288 
<a name="l01289"></a>01289     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> snowVertexNumber = 0; snowVertexNumber &lt; snowPointsNumber; snowVertexNumber++)
<a name="l01290"></a>01290         snowPolygon[snowVertexNumber + 2] = getPoint (pointX + (snowVertexNumber + 1) * snowSpace,
<a name="l01291"></a>01291                                             getRandom (pointY - height / 15, pointY + height / 15));
<a name="l01292"></a>01292 
<a name="l01293"></a>01293     snowPolygon[snowPointsNumber + 2] =
<a name="l01294"></a>01294     snowPolygon[snowPointsNumber + 1] = getPoint (pointX+snowWidth, pointY);
<a name="l01295"></a>01295 
<a name="l01296"></a>01296     <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (snow);
<a name="l01297"></a>01297     <a class="code" href="a00081.htm#gacbbb638439ad7ba88804178516019fb1" title="Рисует ломаную линию или многоугольник.">txPolygon</a> (snowPolygon, snowPointsNumber + 4);
<a name="l01298"></a>01298 
<a name="l01299"></a>01299     <span class="keyword">delete</span>[] snowPolygon;
<a name="l01300"></a>01300     }
<a name="l01301"></a>01301 
<a name="l01302"></a>01302 <span class="keywordtype">void</span> drawTearsRow (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> tearsLenght, <span class="keywordtype">int</span> space, <span class="keywordtype">int</span> offset)
<a name="l01303"></a>01303     {
<a name="l01304"></a>01304     <span class="keywordtype">int</span> numberOfTears = (x + offset) / (tearsLenght + space) + 1;
<a name="l01305"></a>01305 
<a name="l01306"></a>01306     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> n = 0; n &lt; numberOfTears; n++)
<a name="l01307"></a>01307         <a class="code" href="a00081.htm#gaaee38df6f38b6f1729b9db1c4ac23e65" title="Рисует линию.">txLine</a> (x + offset - n * (tearsLenght + space),
<a name="l01308"></a>01308                 y - offset + n * (tearsLenght + space),
<a name="l01309"></a>01309                 x + offset - n * (tearsLenght + space) - tearsLenght,
<a name="l01310"></a>01310                 y - offset + n * (tearsLenght + space) + tearsLenght);
<a name="l01311"></a>01311     }
<a name="l01312"></a>01312 
<a name="l01313"></a>01313 POINT getPointOnEllipse (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> w, <span class="keywordtype">int</span> h, <span class="keywordtype">double</span> angle)
<a name="l01314"></a>01314     {
<a name="l01315"></a>01315     <span class="keywordtype">double</span> trueAngle = 360- (angle-90) * <a class="code" href="a00080.htm#gaf59817ad656dcbb3f9baebeb4d7f82f7" title="Число Пи">txPI</a> / 180;
<a name="l01316"></a>01316 
<a name="l01317"></a>01317     POINT p = { (int) (x + w / 2 * cos (trueAngle)),
<a name="l01318"></a>01318                 (<span class="keywordtype">int</span>) (y + h / 2 * sin (trueAngle)) };
<a name="l01319"></a>01319     <span class="keywordflow">return</span> p;
<a name="l01320"></a>01320     }
<a name="l01321"></a>01321 
<a name="l01322"></a>01322 <span class="keywordtype">void</span> drawRain (<span class="keywordtype">int</span> columnsSpace, <span class="keywordtype">int</span> tearsSpace, <span class="keywordtype">int</span> tearsLenght, <span class="keywordtype">int</span> animationFrame, <span class="keywordtype">int</span> thickness, COLORREF color)
<a name="l01323"></a>01323     {
<a name="l01324"></a>01324     <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (color, thickness);
<a name="l01325"></a>01325 
<a name="l01326"></a>01326     <span class="keywordtype">int</span> number = 1400 / columnsSpace;
<a name="l01327"></a>01327     <span class="keywordtype">int</span> space = 0;
<a name="l01328"></a>01328 
<a name="l01329"></a>01329     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> n = 0; n &lt; number; n++)
<a name="l01330"></a>01330         {
<a name="l01331"></a>01331         drawTearsRow (space, 0, getRandom (tearsLenght - 4, tearsLenght), tearsSpace, tearsLenght + tearsSpace - animationFrame + n % 25);
<a name="l01332"></a>01332         space += getRandom (columnsSpace - 1, columnsSpace + 4);
<a name="l01333"></a>01333         }
<a name="l01334"></a>01334     }
<a name="l01335"></a>01335 
<a name="l01336"></a>01336 <span class="keywordtype">void</span> drawCloud (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> width, <span class="keywordtype">int</span> height, <span class="keywordtype">int</span> everyAngle, <span class="keywordtype">int</span> everyWidth, <span class="keywordtype">int</span> everyHeight, COLORREF color)
<a name="l01337"></a>01337     {
<a name="l01338"></a>01338     <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a01fe8cb0f589868456167ee3a4652df8" title="Прозрачный цвет. Отключает рисование.">TX_TRANSPARENT</a>);
<a name="l01339"></a>01339     <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (color);
<a name="l01340"></a>01340     <a class="code" href="a00081.htm#gaaf82e7c5a0fd06548f42c757f73d3dae" title="Рисует эллипс.">txEllipse</a> (x - width / 2, y - height / 2, x + width / 2, y + height / 2);
<a name="l01341"></a>01341 
<a name="l01342"></a>01342     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> n = 0; n &lt; 360 / everyAngle; n++)
<a name="l01343"></a>01343         {
<a name="l01344"></a>01344         POINT p = getPointOnEllipse (x, y, width, height, n * everyAngle);
<a name="l01345"></a>01345         <a class="code" href="a00081.htm#gaaf82e7c5a0fd06548f42c757f73d3dae" title="Рисует эллипс.">txEllipse</a> (p.x - everyWidth / 2, p.y - everyHeight / 2, p.x + everyWidth / 2, p.y + everyHeight / 2);
<a name="l01346"></a>01346         }
<a name="l01347"></a>01347     }
<a name="l01348"></a>01348 
<a name="l01349"></a>01349 <span class="keywordtype">void</span> drawPortal (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keywordtype">int</span> radius, <span class="keywordtype">int</span> each, <span class="keywordtype">int</span> bonusRot, COLORREF color, COLORREF alter)
<a name="l01350"></a>01350     {
<a name="l01351"></a>01351     <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (color);
<a name="l01352"></a>01352 
<a name="l01353"></a>01353     trigonometricSetPointOfRest (x, y);
<a name="l01354"></a>01354     trigonometricMove (bonusRot, radius);
<a name="l01355"></a>01355 
<a name="l01356"></a>01356     <span class="keywordtype">int</span> lastx = pointOfRest_x,
<a name="l01357"></a>01357         lasty = pointOfRest_y;
<a name="l01358"></a>01358 
<a name="l01359"></a>01359     <span class="keywordtype">int</span> n = 360 / each;
<a name="l01360"></a>01360 
<a name="l01361"></a>01361     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> a = 1; a &lt;= n; a++)
<a name="l01362"></a>01362         {
<a name="l01363"></a>01363         trigonometricSetPointOfRest (x, y);
<a name="l01364"></a>01364         trigonometricMove (a * each + bonusRot, radius);
<a name="l01365"></a>01365 
<a name="l01366"></a>01366         drawElectra (pointOfRest_x, pointOfRest_y,
<a name="l01367"></a>01367                      trigonometricGetAngleOfLine (pointOfRest_x, pointOfRest_y, lastx, lasty),
<a name="l01368"></a>01368                      5, 10, 45, 2,
<a name="l01369"></a>01369                      color, alter, 0);
<a name="l01370"></a>01370 
<a name="l01371"></a>01371         <a class="code" href="a00081.htm#gaaee38df6f38b6f1729b9db1c4ac23e65" title="Рисует линию.">txLine</a> (pointOfRest_x, pointOfRest_y, lastx, lasty);
<a name="l01372"></a>01372 
<a name="l01373"></a>01373         lastx = pointOfRest_x;
<a name="l01374"></a>01374         lasty = pointOfRest_y;
<a name="l01375"></a>01375         }
<a name="l01376"></a>01376     }
<a name="l01377"></a>01377 
<a name="l01378"></a>01378 <span class="comment">// Assembler randomizing system</span>
<a name="l01379"></a>01379 
<a name="l01380"></a>01380 <span class="keyword">const</span> <span class="keywordtype">char</span>* getRandomRegister()
<a name="l01381"></a>01381     {
<a name="l01382"></a>01382     <span class="keywordflow">return</span> registers [rand() % <a class="code" href="a00080.htm#ga799c47c1a2a151647cd765e1fa4b27b5" title="Вычисление размера массива в элементах">sizearr</a> (registers)];
<a name="l01383"></a>01383     }
<a name="l01384"></a>01384 
<a name="l01385"></a>01385 <span class="keyword">const</span> <span class="keywordtype">char</span>* getRandomCommand()
<a name="l01386"></a>01386     {
<a name="l01387"></a>01387     <span class="keywordtype">char</span>* buf = <span class="keyword">new</span> <span class="keywordtype">char</span>[20];
<a name="l01388"></a>01388 
<a name="l01389"></a>01389     <span class="keywordflow">if</span> (rand() % 20 == 0)
<a name="l01390"></a>01390         <span class="keywordflow">switch</span> (rand() % 2)
<a name="l01391"></a>01391             {
<a name="l01392"></a>01392             <span class="keywordflow">case</span> 0:  sprintf (buf, <span class="stringliteral">&quot;call %s&quot;</span>, functionNames [rand() % <a class="code" href="a00080.htm#ga799c47c1a2a151647cd765e1fa4b27b5" title="Вычисление размера массива в элементах">sizearr</a> (functionNames)]);
<a name="l01393"></a>01393                      <span class="keywordflow">return</span> buf;
<a name="l01394"></a>01394 
<a name="l01395"></a>01395             <span class="keywordflow">case</span> 1:  sprintf (buf, <span class="stringliteral">&quot;jump %s&quot;</span>, functionNames [rand() % <a class="code" href="a00080.htm#ga799c47c1a2a151647cd765e1fa4b27b5" title="Вычисление размера массива в элементах">sizearr</a> (functionNames)]);
<a name="l01396"></a>01396                      <span class="keywordflow">return</span> buf;
<a name="l01397"></a>01397 
<a name="l01398"></a>01398             <span class="keywordflow">default</span>: <span class="keywordflow">break</span>;
<a name="l01399"></a>01399             }
<a name="l01400"></a>01400     <span class="keywordflow">else</span>
<a name="l01401"></a>01401         <span class="keywordflow">switch</span> (rand() % 2)
<a name="l01402"></a>01402             {
<a name="l01403"></a>01403             <span class="keywordflow">case</span> 0:  sprintf (buf, <span class="stringliteral">&quot;%s %s, %s&quot;</span>, twoRegisterCommands [rand() % <a class="code" href="a00080.htm#ga799c47c1a2a151647cd765e1fa4b27b5" title="Вычисление размера массива в элементах">sizearr</a> (twoRegisterCommands)],
<a name="l01404"></a>01404                                                 getRandomRegister(), getRandomRegister());
<a name="l01405"></a>01405                      <span class="keywordflow">return</span> buf;
<a name="l01406"></a>01406 
<a name="l01407"></a>01407             <span class="keywordflow">case</span> 1:  sprintf (buf, <span class="stringliteral">&quot;%s %s&quot;</span>,     oneRegisterCommands [rand() % <a class="code" href="a00080.htm#ga799c47c1a2a151647cd765e1fa4b27b5" title="Вычисление размера массива в элементах">sizearr</a> (oneRegisterCommands)],
<a name="l01408"></a>01408                                                 getRandomRegister());
<a name="l01409"></a>01409                      <span class="keywordflow">return</span> buf;
<a name="l01410"></a>01410 
<a name="l01411"></a>01411             <span class="keywordflow">default</span>: <span class="keywordflow">break</span>;
<a name="l01412"></a>01412             }
<a name="l01413"></a>01413 
<a name="l01414"></a>01414     <span class="keywordflow">return</span> strcpy (buf, <span class="stringliteral">&quot;nop&quot;</span>);
<a name="l01415"></a>01415     }
<a name="l01416"></a>01416 
<a name="l01417"></a>01417 <span class="comment">// ============================</span>
<a name="l01418"></a>01418 
<a name="l01419"></a>01419 <span class="keywordtype">void</span> matrixFireball (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keyword">const</span> <span class="keywordtype">char</span>* text, <span class="keywordtype">int</span> len, <span class="keywordtype">int</span> textHeight, COLORREF color)
<a name="l01420"></a>01420     {
<a name="l01421"></a>01421     <a class="code" href="a00081.htm#ga09938df8859ae8b62638a3af76ee6735" title="Устанавливает текущее выравнивание текста (влево/вправо/по центру).">txSetTextAlign</a>  (TA_CENTER);
<a name="l01422"></a>01422 
<a name="l01423"></a>01423     <span class="keywordtype">int</span> yBonus = 0;
<a name="l01424"></a>01424     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> a = 0; a &lt; len; a++)
<a name="l01425"></a>01425         {
<a name="l01426"></a>01426         <a class="code" href="a00081.htm#ga6689b9a89add9c5eb5cf54a8c86539a4" title="Выбирает текущий шрифт, его размер и другие атрибуты.">txSelectFont</a> (<span class="stringliteral">&quot;Comic Sans MS&quot;</span>, textHeight + a, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">false</span>);
<a name="l01427"></a>01427         <a class="code" href="a00081.htm#ga09938df8859ae8b62638a3af76ee6735" title="Устанавливает текущее выравнивание текста (влево/вправо/по центру).">txSetTextAlign</a> (TA_CENTER);
<a name="l01428"></a>01428         <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (color);
<a name="l01429"></a>01429 
<a name="l01430"></a>01430         <span class="keyword">const</span> <span class="keywordtype">char</span> str[2] = { text[a], 0 };
<a name="l01431"></a>01431         <a class="code" href="a00081.htm#ga52e119361961d9eee33c176a3084e55d" title="Рисует текст.">txTextOut</a> (x, y + yBonus, str);
<a name="l01432"></a>01432 
<a name="l01433"></a>01433         yBonus += (textHeight + a) * 4/5;
<a name="l01434"></a>01434         }
<a name="l01435"></a>01435     }
<a name="l01436"></a>01436 
<a name="l01437"></a>01437 <span class="keywordtype">void</span> matrixEngineInit (<span class="keywordtype">int</span> count)
<a name="l01438"></a>01438     {
<a name="l01439"></a>01439     matrixElementsNumber     = count;
<a name="l01440"></a>01440     matrixElementsYPositions = <span class="keyword">new</span> <span class="keywordtype">int</span>   [count];
<a name="l01441"></a>01441     matrixElementsNames      = <span class="keyword">new</span> <span class="keywordtype">char</span>* [count];
<a name="l01442"></a>01442 
<a name="l01443"></a>01443     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> x = 0; x &lt; count; x++)
<a name="l01444"></a>01444         {
<a name="l01445"></a>01445         matrixElementsYPositions[x] = getRandom (-200, 500);
<a name="l01446"></a>01446         matrixElementsNames[x]      = <span class="keyword">new</span> <span class="keywordtype">char</span> [20];
<a name="l01447"></a>01447 
<a name="l01448"></a>01448         <span class="keyword">const</span> <span class="keywordtype">char</span>* command = getRandomCommand();
<a name="l01449"></a>01449         strcpy (matrixElementsNames[x], command);
<a name="l01450"></a>01450         <span class="keyword">delete</span>[] (<span class="keyword">const</span> <span class="keywordtype">char</span>*) command;
<a name="l01451"></a>01451         }
<a name="l01452"></a>01452     }
<a name="l01453"></a>01453 
<a name="l01454"></a>01454 <span class="keywordtype">void</span> matrixEngineLoop (<span class="keywordtype">int</span> spd, COLORREF col)
<a name="l01455"></a>01455     {
<a name="l01456"></a>01456     <a class="code" href="a00081.htm#ga09938df8859ae8b62638a3af76ee6735" title="Устанавливает текущее выравнивание текста (влево/вправо/по центру).">txSetTextAlign</a> (TA_BASELINE | TA_LEFT);
<a name="l01457"></a>01457     <a class="code" href="a00081.htm#ga6689b9a89add9c5eb5cf54a8c86539a4" title="Выбирает текущий шрифт, его размер и другие атрибуты.">txSelectFont</a> (<span class="stringliteral">&quot;Comic Sans MS&quot;</span>, 100, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">false</span>);
<a name="l01458"></a>01458 
<a name="l01459"></a>01459     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> a = 0; a &lt; matrixElementsNumber; a++)
<a name="l01460"></a>01460         {
<a name="l01461"></a>01461         matrixElementsYPositions[a] += spd;
<a name="l01462"></a>01462 
<a name="l01463"></a>01463         <span class="keywordflow">if</span> (matrixElementsYPositions[a] &gt;  600 ||
<a name="l01464"></a>01464             matrixElementsYPositions[a] &lt; -600)
<a name="l01465"></a>01465             {
<a name="l01466"></a>01466             <span class="keyword">delete</span> matrixElementsNames[a];
<a name="l01467"></a>01467             matrixElementsNames[a] = <span class="keyword">new</span> <span class="keywordtype">char</span>[20];
<a name="l01468"></a>01468 
<a name="l01469"></a>01469             matrixElementsYPositions[a] = -getRandom (400, 800);
<a name="l01470"></a>01470 
<a name="l01471"></a>01471             <span class="keyword">const</span> <span class="keywordtype">char</span>* randomCommand = getRandomCommand();
<a name="l01472"></a>01472             strcpy (matrixElementsNames[a], randomCommand);
<a name="l01473"></a>01473             <span class="keyword">delete</span>[] (<span class="keyword">const</span> <span class="keywordtype">char</span>*) randomCommand;
<a name="l01474"></a>01474             }
<a name="l01475"></a>01475 
<a name="l01476"></a>01476         matrixFireball (a * 40, matrixElementsYPositions[a],       matrixElementsNames[a],                                      10, 20, col);
<a name="l01477"></a>01477         matrixFireball (a * 40, matrixElementsYPositions[a] + 300, matrixElementsNames[a &lt; matrixElementsNumber-1 ? a+1 : a-1], 10, 20, col);
<a name="l01478"></a>01478         }
<a name="l01479"></a>01479     }
<a name="l01480"></a>01480 
<a name="l01481"></a>01481 <span class="keyword">const</span> <span class="keywordtype">char</span>* getStairsGround (<span class="keywordtype">int</span> lenght)
<a name="l01482"></a>01482     {
<a name="l01483"></a>01483     <span class="keywordtype">char</span>* ret = <span class="keyword">new</span> <span class="keywordtype">char</span>[lenght + 1];
<a name="l01484"></a>01484     ret[lenght] = 0;
<a name="l01485"></a>01485 
<a name="l01486"></a>01486     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; lenght; i++) ret[i] = (<span class="keywordtype">char</span>) getRandom (48, 49);
<a name="l01487"></a>01487 
<a name="l01488"></a>01488     <span class="keywordflow">return</span> ret;
<a name="l01489"></a>01489     }
<a name="l01490"></a>01490 
<a name="l01491"></a>01491 <span class="keywordtype">void</span> generateBinaryStairs (<span class="keywordtype">int</span> difference, <span class="keywordtype">int</span> flats)
<a name="l01492"></a>01492     {
<a name="l01493"></a>01493     binaryStairsGrounds = <span class="keyword">new</span> <span class="keywordtype">char</span>* [flats];
<a name="l01494"></a>01494     binaryStairsHeight  = flats;
<a name="l01495"></a>01495 
<a name="l01496"></a>01496     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; flats; i++)
<a name="l01497"></a>01497         {
<a name="l01498"></a>01498         binaryStairsGrounds[i]   = <span class="keyword">new</span> <span class="keywordtype">char</span>        [(i + 1 ) * difference + 1];
<a name="l01499"></a>01499 
<a name="l01500"></a>01500         <span class="keyword">const</span> <span class="keywordtype">char</span>* stairsGround = getStairsGround ((i + 1 ) * difference);
<a name="l01501"></a>01501         strcpy (binaryStairsGrounds[i], stairsGround);
<a name="l01502"></a>01502         <span class="keyword">delete</span>[] (<span class="keyword">const</span> <span class="keywordtype">char</span>*) stairsGround;
<a name="l01503"></a>01503         }
<a name="l01504"></a>01504     }
<a name="l01505"></a>01505 
<a name="l01506"></a>01506 <span class="keywordtype">void</span> destroyBinaryStairsAndMatrix()
<a name="l01507"></a>01507     {
<a name="l01508"></a>01508     <span class="keywordtype">int</span> i = 0;
<a name="l01509"></a>01509 
<a name="l01510"></a>01510     <span class="keywordflow">for</span> (i = 0; i &lt; binaryStairsHeight; i++) <span class="keyword">delete</span> binaryStairsGrounds[i];
<a name="l01511"></a>01511     <span class="keyword">delete</span> binaryStairsGrounds;
<a name="l01512"></a>01512 
<a name="l01513"></a>01513     <span class="keyword">delete</span> matrixElementsYPositions;
<a name="l01514"></a>01514 
<a name="l01515"></a>01515     <span class="keywordflow">for</span> (i = 0; i &lt; matrixElementsNumber; i++) <span class="keyword">delete</span> matrixElementsNames[i];
<a name="l01516"></a>01516     <span class="keyword">delete</span> matrixElementsNames;
<a name="l01517"></a>01517     }
<a name="l01518"></a>01518 
<a name="l01519"></a>01519 <span class="keywordtype">void</span> drawBinaryStairs (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, COLORREF color)
<a name="l01520"></a>01520     {
<a name="l01521"></a>01521     <a class="code" href="a00081.htm#ga09938df8859ae8b62638a3af76ee6735" title="Устанавливает текущее выравнивание текста (влево/вправо/по центру).">txSetTextAlign</a> (TA_RIGHT);
<a name="l01522"></a>01522     <a class="code" href="a00081.htm#ga6689b9a89add9c5eb5cf54a8c86539a4" title="Выбирает текущий шрифт, его размер и другие атрибуты.">txSelectFont</a> (<span class="stringliteral">&quot;Comic Sans MS&quot;</span>, 20, <span class="keyword">false</span>, <span class="keyword">false</span>, <span class="keyword">false</span>);
<a name="l01523"></a>01523     <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (color);
<a name="l01524"></a>01524 
<a name="l01525"></a>01525     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; binaryStairsHeight; i++)
<a name="l01526"></a>01526         <a class="code" href="a00081.htm#ga52e119361961d9eee33c176a3084e55d" title="Рисует текст.">txTextOut</a> (x, y + i * 20, binaryStairsGrounds[i]);
<a name="l01527"></a>01527     }
<a name="l01528"></a>01528 
<a name="l01529"></a>01529 <span class="keywordtype">void</span> drawASMFlag (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y)
<a name="l01530"></a>01530     {
<a name="l01531"></a>01531     <a class="code" href="a00081.htm#ga09938df8859ae8b62638a3af76ee6735" title="Устанавливает текущее выравнивание текста (влево/вправо/по центру).">txSetTextAlign</a> (TA_BASELINE | TA_LEFT);
<a name="l01532"></a>01532 
<a name="l01533"></a>01533     <a class="code" href="a00081.htm#ga52e119361961d9eee33c176a3084e55d" title="Рисует текст.">txTextOut</a> (x, y,       <span class="stringliteral">&quot;111111111&quot;</span>);
<a name="l01534"></a>01534     <a class="code" href="a00081.htm#ga52e119361961d9eee33c176a3084e55d" title="Рисует текст.">txTextOut</a> (x, y + 20,  <span class="stringliteral">&quot;11ASM11&quot;</span>);
<a name="l01535"></a>01535     <a class="code" href="a00081.htm#ga52e119361961d9eee33c176a3084e55d" title="Рисует текст.">txTextOut</a> (x, y + 40,  <span class="stringliteral">&quot;111111111&quot;</span>);
<a name="l01536"></a>01536     <a class="code" href="a00081.htm#ga52e119361961d9eee33c176a3084e55d" title="Рисует текст.">txTextOut</a> (x, y + 60,  <span class="stringliteral">&quot;1&quot;</span>);
<a name="l01537"></a>01537     <a class="code" href="a00081.htm#ga52e119361961d9eee33c176a3084e55d" title="Рисует текст.">txTextOut</a> (x, y + 80,  <span class="stringliteral">&quot;1&quot;</span>);
<a name="l01538"></a>01538     <a class="code" href="a00081.htm#ga52e119361961d9eee33c176a3084e55d" title="Рисует текст.">txTextOut</a> (x, y + 100, <span class="stringliteral">&quot;1&quot;</span>);
<a name="l01539"></a>01539     }
<a name="l01540"></a>01540 
<a name="l01541"></a>01541 <span class="keywordtype">void</span> initIO()
<a name="l01542"></a>01542     {
<a name="l01543"></a>01543     sourceFile = fopen (__FILE__, <span class="stringliteral">&quot;r&quot;</span>);
<a name="l01544"></a>01544     <span class="keywordflow">if</span> (sourceFile == 0) TX_THROW (<span class="stringliteral">&quot;Cannot open source file&quot;</span>);
<a name="l01545"></a>01545     }
<a name="l01546"></a>01546 
<a name="l01547"></a>01547 <span class="keywordtype">void</span> readCodePro()
<a name="l01548"></a>01548     {
<a name="l01549"></a>01549     <a class="code" href="a00081.htm#gaa72c4849ac0c9bf6f95893f4265b9843" title="Установка параметров рисования по умолчанию.">txSetDefaults</a>();
<a name="l01550"></a>01550     <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a9f0adfcb24eeb418fc39fe950db65ec8" title="Черный цвет.">TX_BLACK</a>);
<a name="l01551"></a>01551     <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (<a class="code" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (0, 150, 0));
<a name="l01552"></a>01552     <a class="code" href="a00081.htm#ga78e83baeb6a02d5fa33dd8b062e513d9" title="Стирает холст текущим цветом заполнения.">txClear</a>();
<a name="l01553"></a>01553 
<a name="l01554"></a>01554     initIO();
<a name="l01555"></a>01555 
<a name="l01556"></a>01556     fseek (sourceFile, 0, SEEK_END);
<a name="l01557"></a>01557     <span class="keywordtype">unsigned</span> fileSize = <a class="code" href="a00080.htm#ga3acffbd305ee72dcd4593c0d8af64a4f" title="Возвращает минимальное из двух чисел">MIN</a> (ftell (sourceFile), 10000);
<a name="l01558"></a>01558     fseek (sourceFile, 0, SEEK_SET);
<a name="l01559"></a>01559 
<a name="l01560"></a>01560     <span class="keywordtype">char</span>* allData = <span class="keyword">new</span> <span class="keywordtype">char</span> [fileSize + 100];
<a name="l01561"></a>01561     <span class="keywordtype">int</span> numberOfStrings = 0;
<a name="l01562"></a>01562 
<a name="l01563"></a>01563     <span class="keywordflow">try</span> {
<a name="l01564"></a>01564         <span class="keywordtype">unsigned</span> i = 0;
<a name="l01565"></a>01565 
<a name="l01566"></a>01566         <span class="keywordflow">for</span> (i = 0; i &lt; fileSize; i++)
<a name="l01567"></a>01567             {
<a name="l01568"></a>01568             allData[i] = (char) fgetc (sourceFile);
<a name="l01569"></a>01569             <span class="keywordflow">if</span> (allData[i] == <span class="charliteral">&#39;\n&#39;</span>) numberOfStrings++;
<a name="l01570"></a>01570             }
<a name="l01571"></a>01571 
<a name="l01572"></a>01572         fileSize += (unsigned) strlen (strcpy (&amp;allData[i-1], <span class="stringliteral">&quot;\n    ...\n&quot;</span>));
<a name="l01573"></a>01573         numberOfStrings += 2;
<a name="l01574"></a>01574 
<a name="l01575"></a>01575         partsAmount = numberOfStrings / 30 + 1;
<a name="l01576"></a>01576 
<a name="l01577"></a>01577         sourceCodeParts = <span class="keyword">new</span> HDC [partsAmount + 1];
<a name="l01578"></a>01578         <span class="keywordflow">for</span> (i = 0; i &lt; partsAmount + 1u; i++) sourceCodeParts[i] = NULL;
<a name="l01579"></a>01579 
<a name="l01580"></a>01580         <span class="keywordtype">int</span> lastStringYID    = 0;
<a name="l01581"></a>01581         <span class="keywordtype">int</span> lastStringLength = 0;
<a name="l01582"></a>01582         <span class="keywordtype">int</span> lastSourcePart   = 0;
<a name="l01583"></a>01583 
<a name="l01584"></a>01584         <span class="keywordflow">for</span> (i = 0; i &lt; fileSize; i++)
<a name="l01585"></a>01585             {
<a name="l01586"></a>01586             <span class="keywordflow">if</span> ((allData[i] == <span class="charliteral">&#39;\n&#39;</span>) || (i == fileSize-1))
<a name="l01587"></a>01587                 {
<a name="l01588"></a>01588                 allData[i] = 0;
<a name="l01589"></a>01589                 <span class="keywordflow">if</span> (i != fileSize-1) <a class="code" href="a00081.htm#ga52e119361961d9eee33c176a3084e55d" title="Рисует текст.">txTextOut</a> (0, lastStringYID * 20, allData + (i - lastStringLength));
<a name="l01590"></a>01590 
<a name="l01591"></a>01591                 lastStringYID++;
<a name="l01592"></a>01592                 lastStringLength = 0;
<a name="l01593"></a>01593 
<a name="l01594"></a>01594                 <span class="keywordflow">if</span> (lastStringYID == 30 || i &gt;= fileSize-1)
<a name="l01595"></a>01595                     {
<a name="l01596"></a>01596                     HDC nHDC = <a class="code" href="a00081.htm#ga1008da052f2fbe9ec0f70c2f6b4f0700" title="Создает дополнительный холст (контекст рисования, Device Context, DC) в памяти.">txCreateCompatibleDC</a> (800, 600);
<a name="l01597"></a>01597                     <a class="code" href="a00081.htm#ga6dfb121b4a1116f987baeb515713cbbf" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt</a> (nHDC, 0, 0, 800, 600, <a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), 0, 0);
<a name="l01598"></a>01598                     sourceCodeParts[lastSourcePart] = nHDC;
<a name="l01599"></a>01599  
<a name="l01600"></a>01600                     lastSourcePart++;
<a name="l01601"></a>01601                     lastStringYID = 0;
<a name="l01602"></a>01602 
<a name="l01603"></a>01603                     <a class="code" href="a00081.htm#ga78e83baeb6a02d5fa33dd8b062e513d9" title="Стирает холст текущим цветом заполнения.">txClear</a>();
<a name="l01604"></a>01604                     }
<a name="l01605"></a>01605                 }
<a name="l01606"></a>01606             <span class="keywordflow">else</span>
<a name="l01607"></a>01607                 lastStringLength++;
<a name="l01608"></a>01608             }
<a name="l01609"></a>01609 
<a name="l01610"></a>01610         fclose (sourceFile);
<a name="l01611"></a>01611         
<a name="l01612"></a>01612         sourceCodeParts[lastSourcePart] = <a class="code" href="a00081.htm#ga1008da052f2fbe9ec0f70c2f6b4f0700" title="Создает дополнительный холст (контекст рисования, Device Context, DC) в памяти.">txCreateCompatibleDC</a> (800, 600);
<a name="l01613"></a>01613         }
<a name="l01614"></a>01614 
<a name="l01615"></a>01615     <span class="keywordflow">catch</span> (...)
<a name="l01616"></a>01616         {}
<a name="l01617"></a>01617 
<a name="l01618"></a>01618     <span class="keyword">delete</span>[] allData;
<a name="l01619"></a>01619     }
<a name="l01620"></a>01620 
<a name="l01621"></a>01621 <span class="keywordtype">void</span> printEffect (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keyword">const</span> <span class="keywordtype">char</span>* text, <span class="keywordtype">int</span> lenght, <span class="keywordtype">int</span> delay)
<a name="l01622"></a>01622     {
<a name="l01623"></a>01623     doSleep (delay);
<a name="l01624"></a>01624 
<a name="l01625"></a>01625     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; lenght; i++)
<a name="l01626"></a>01626         {
<a name="l01627"></a>01627         <span class="keywordtype">char</span> buf[2] = { text[i] };
<a name="l01628"></a>01628         <a class="code" href="a00081.htm#ga52e119361961d9eee33c176a3084e55d" title="Рисует текст.">txTextOut</a> (x + <a class="code" href="a00081.htm#gad5483eacac697420a84f66733e45ed02" title="Вычисляет ширину текстовой надписи.">txGetTextExtentX</a> (text) * i / lenght * 1.2, y, buf);
<a name="l01629"></a>01629 
<a name="l01630"></a>01630         doSleep (delay);
<a name="l01631"></a>01631         }
<a name="l01632"></a>01632     }
<a name="l01633"></a>01633 
<a name="l01634"></a>01634 <span class="keywordtype">void</span> releaseScrollingSource()
<a name="l01635"></a>01635     {
<a name="l01636"></a>01636     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; partsAmount; i++) <a class="code" href="a00081.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC</a> (sourceCodeParts[i]);
<a name="l01637"></a>01637 
<a name="l01638"></a>01638     <span class="keyword">delete</span>[] sourceCodeParts;
<a name="l01639"></a>01639     sourceCodeParts = NULL;
<a name="l01640"></a>01640     }
<a name="l01641"></a>01641 
<a name="l01642"></a>01642 <span class="keywordtype">void</span> fromAssemblerAndUpToTheVeryEnd()
<a name="l01643"></a>01643     {
<a name="l01644"></a>01644     matrixEngineInit (20);
<a name="l01645"></a>01645     generateBinaryStairs (10, 10);
<a name="l01646"></a>01646     readCodePro();
<a name="l01647"></a>01647 
<a name="l01648"></a>01648     <span class="comment">// Smooth matrix color change</span>
<a name="l01649"></a>01649     <span class="keywordtype">int</span> period = 20;
<a name="l01650"></a>01650     <span class="keywordtype">int</span> change = 1;
<a name="l01651"></a>01651     <span class="keywordtype">int</span> greenCooficient = 150;
<a name="l01652"></a>01652 
<a name="l01653"></a>01653     COLORREF stickColor = <a class="code" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (200, 255, 200);
<a name="l01654"></a>01654 
<a name="l01655"></a>01655     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> t = 0; t &lt; 210; t += SPEED)
<a name="l01656"></a>01656         {
<a name="l01657"></a>01657         <span class="keywordtype">int</span> tMan = (t &lt; 200)? t : 200;
<a name="l01658"></a>01658 
<a name="l01659"></a>01659         trigonometricSetPointOfRest (50, 520);
<a name="l01660"></a>01660         trigonometricMove (77, tMan * 7/2);
<a name="l01661"></a>01661 
<a name="l01662"></a>01662         <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a9f0adfcb24eeb418fc39fe950db65ec8" title="Черный цвет.">TX_BLACK</a>);
<a name="l01663"></a>01663         <a class="code" href="a00081.htm#ga78e83baeb6a02d5fa33dd8b062e513d9" title="Стирает холст текущим цветом заполнения.">txClear</a>();
<a name="l01664"></a>01664 
<a name="l01665"></a>01665         matrixEngineLoop (100, <a class="code" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (0, greenCooficient, 0));
<a name="l01666"></a>01666         drawBinaryStairs (800, 400, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aa13a0e0eb4587540bd06cb5d55083032" title="Зеленый цвет.">TX_GREEN</a>);
<a name="l01667"></a>01667         drawASMFlag (720, 300);
<a name="l01668"></a>01668         drawStickMan (pointOfRest_x, pointOfRest_y, 120, 30, 10, (tMan * 6 % 90), 185, 185, 90, 90, 60, 90,
<a name="l01669"></a>01669                      <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aa13a0e0eb4587540bd06cb5d55083032" title="Зеленый цвет.">TX_GREEN</a>, NORMAL_BROWN, stickColor, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025" title="Белый цвет.">TX_WHITE</a>, -20 + tMan / 10, 0);
<a name="l01670"></a>01670 
<a name="l01671"></a>01671         doSleep (15);
<a name="l01672"></a>01672 
<a name="l01673"></a>01673         greenCooficient += change;
<a name="l01674"></a>01674         period--;
<a name="l01675"></a>01675 
<a name="l01676"></a>01676         <span class="keywordflow">if</span> (period == 0)
<a name="l01677"></a>01677             {
<a name="l01678"></a>01678             period = getRandom (5, 40);
<a name="l01679"></a>01679             change = getRandom (1, 2) == 1 ? 1 : -1;
<a name="l01680"></a>01680 
<a name="l01681"></a>01681             <span class="keywordflow">if</span>      (greenCooficient + period * change &lt;  10) change = -change;
<a name="l01682"></a>01682             <span class="keywordflow">else</span> <span class="keywordflow">if</span> (greenCooficient + period * change &gt; 240) change = -change;
<a name="l01683"></a>01683             }
<a name="l01684"></a>01684         }
<a name="l01685"></a>01685 
<a name="l01686"></a>01686     destroyBinaryStairsAndMatrix();
<a name="l01687"></a>01687 
<a name="l01688"></a>01688     <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a9f0adfcb24eeb418fc39fe950db65ec8" title="Черный цвет.">TX_BLACK</a>);
<a name="l01689"></a>01689     <a class="code" href="a00081.htm#ga78e83baeb6a02d5fa33dd8b062e513d9" title="Стирает холст текущим цветом заполнения.">txClear</a>();
<a name="l01690"></a>01690     printEffect (20, 20,  <span class="stringliteral">&quot;Critical Error!&quot;</span>, 15, 10/SPEED);
<a name="l01691"></a>01691     printEffect (20, 60,  <span class="stringliteral">&quot;Critical Error!&quot;</span>, 15, 10/SPEED);
<a name="l01692"></a>01692     printEffect (20, 100, <span class="stringliteral">&quot;Rebooting...&quot;</span>,    12, 10);
<a name="l01693"></a>01693     <a class="code" href="a00081.htm#ga6c293f0b0f71efebdeeb0b56a97ba50c" title="Задерживает выполнение программы на определенное время.">txSleep</a> (3000);
<a name="l01694"></a>01694 
<a name="l01695"></a>01695     setTextSpeed (10 - SPEED);
<a name="l01696"></a>01696     <span class="keywordtype">double</span> sourceCodeYScrolled = 0;
<a name="l01697"></a>01697 
<a name="l01698"></a>01698     <span class="keywordflow">for</span> (; sourceCodeYScrolled &lt; partsAmount * 600; sourceCodeYScrolled += SPEED)
<a name="l01699"></a>01699         {
<a name="l01700"></a>01700         <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a9f0adfcb24eeb418fc39fe950db65ec8" title="Черный цвет.">TX_BLACK</a>);
<a name="l01701"></a>01701         <a class="code" href="a00081.htm#ga78e83baeb6a02d5fa33dd8b062e513d9" title="Стирает холст текущим цветом заполнения.">txClear</a>();
<a name="l01702"></a>01702 
<a name="l01703"></a>01703         <span class="keywordtype">int</span> roundY = (int) sourceCodeYScrolled;
<a name="l01704"></a>01704 
<a name="l01705"></a>01705         HDC hDC = <a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>();
<a name="l01706"></a>01706         <a class="code" href="a00081.htm#ga6dfb121b4a1116f987baeb515713cbbf" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt</a> (hDC, 0,     - (roundY % 600), 800, 600, sourceCodeParts[roundY / 600    ], 0, 0);
<a name="l01707"></a>01707         <a class="code" href="a00081.htm#ga6dfb121b4a1116f987baeb515713cbbf" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt</a> (hDC, 0, 600 - (roundY % 600), 800, 600, sourceCodeParts[roundY / 600 + 1], 0, 0);
<a name="l01708"></a>01708 
<a name="l01709"></a>01709         lastTextEngineLoop (mixColor (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a9f0adfcb24eeb418fc39fe950db65ec8" title="Черный цвет.">TX_BLACK</a>, <a class="code" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (0, 200, 0), roundY &lt; 100 ? roundY : 100));
<a name="l01710"></a>01710 
<a name="l01711"></a>01711         doSleep (4);
<a name="l01712"></a>01712         }
<a name="l01713"></a>01713 
<a name="l01714"></a>01714     releaseScrollingSource();
<a name="l01715"></a>01715     }
<a name="l01716"></a>01716 
<a name="l01717"></a>01717 <span class="keywordtype">void</span> drawPrintingEffect (<span class="keywordtype">int</span> x, <span class="keywordtype">int</span> y, <span class="keyword">const</span> <span class="keywordtype">char</span>* whatToPrint, <span class="keywordtype">int</span> howMany, COLORREF color)
<a name="l01718"></a>01718     {
<a name="l01719"></a>01719     <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (color);
<a name="l01720"></a>01720 
<a name="l01721"></a>01721     <span class="keywordtype">int</span> charWidthTotal = 0;
<a name="l01722"></a>01722 
<a name="l01723"></a>01723     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; howMany; i++)
<a name="l01724"></a>01724         {
<a name="l01725"></a>01725         <span class="keyword">const</span> <span class="keywordtype">char</span> toPrintNow[2] = { whatToPrint[i], 0 };
<a name="l01726"></a>01726         <a class="code" href="a00081.htm#ga52e119361961d9eee33c176a3084e55d" title="Рисует текст.">txTextOut</a> (x + charWidthTotal, y, toPrintNow);
<a name="l01727"></a>01727 
<a name="l01728"></a>01728         charWidthTotal += <a class="code" href="a00081.htm#gad5483eacac697420a84f66733e45ed02" title="Вычисляет ширину текстовой надписи.">txGetTextExtentX</a> (toPrintNow);
<a name="l01729"></a>01729         }
<a name="l01730"></a>01730     }
<a name="l01731"></a>01731 
<a name="l01732"></a>01732 <span class="keywordtype">int</span> centerOutByLeftCorner (<span class="keyword">const</span> <span class="keywordtype">char</span>* toCenter)
<a name="l01733"></a>01733     {
<a name="l01734"></a>01734     <span class="keywordtype">int</span> ts = <a class="code" href="a00081.htm#gad5483eacac697420a84f66733e45ed02" title="Вычисляет ширину текстовой надписи.">txGetTextExtentX</a> (toCenter);
<a name="l01735"></a>01735     <span class="keywordflow">return</span> 400 - ts / 2;
<a name="l01736"></a>01736     }
<a name="l01737"></a>01737 
<a name="l01738"></a>01738 <span class="keywordtype">int</span> getMainLoopBasedValue (<span class="keywordtype">int</span> mainLoop, <span class="keywordtype">int</span> from, <span class="keywordtype">int</span> to)
<a name="l01739"></a>01739     {
<a name="l01740"></a>01740     <span class="keywordflow">return</span> mainLoop + from &gt; to ? to : from + mainLoop;
<a name="l01741"></a>01741     }
<a name="l01742"></a>01742 
<a name="l01743"></a>01743 <span class="keywordtype">int</span> textEngineIndex = 0;
<a name="l01744"></a>01744 
<a name="l01745"></a>01745 <span class="keyword">const</span> <span class="keywordtype">char</span>* theEnd    = <span class="stringliteral">&quot;The end...&quot;</span>;
<a name="l01746"></a>01746 <span class="keyword">const</span> <span class="keywordtype">char</span>* createdBy = <span class="stringliteral">&quot;Created by Nikita Uvarov&quot;</span>;
<a name="l01747"></a>01747 
<a name="l01748"></a>01748 <span class="keywordtype">int</span> lenghtOfTheEnd    = (int) strlen (theEnd),
<a name="l01749"></a>01749     lenghtOfCreatedBy = (int) strlen (createdBy);
<a name="l01750"></a>01750 
<a name="l01751"></a>01751 <span class="keywordtype">int</span> textEngineSpeed = 1;
<a name="l01752"></a>01752 
<a name="l01753"></a>01753 <span class="keywordtype">void</span> setTextSpeed (<span class="keywordtype">int</span> spd)
<a name="l01754"></a>01754     {
<a name="l01755"></a>01755     textEngineSpeed = spd;
<a name="l01756"></a>01756     }
<a name="l01757"></a>01757 
<a name="l01758"></a>01758 <span class="keywordtype">void</span> lastTextEngineLoop (COLORREF color)
<a name="l01759"></a>01759     {
<a name="l01760"></a>01760     <a class="code" href="a00081.htm#ga6689b9a89add9c5eb5cf54a8c86539a4" title="Выбирает текущий шрифт, его размер и другие атрибуты.">txSelectFont</a> (<span class="stringliteral">&quot;Comic Sans MS&quot;</span>, 50, 25, 1000);
<a name="l01761"></a>01761 
<a name="l01762"></a>01762     drawPrintingEffect (centerOutByLeftCorner (theEnd),    200, theEnd,    getMainLoopBasedValue (textEngineIndex / textEngineSpeed, 0, lenghtOfTheEnd + 1), color);
<a name="l01763"></a>01763     drawPrintingEffect (centerOutByLeftCorner (createdBy), 320, createdBy, getMainLoopBasedValue (textEngineIndex / textEngineSpeed, -lenghtOfTheEnd * 3 / 2, lenghtOfCreatedBy + 1), color);
<a name="l01764"></a>01764 
<a name="l01765"></a>01765     textEngineIndex += SPEED;
<a name="l01766"></a>01766     }
</pre></div></div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="a00041.htm">Movie.cpp</a>      </li>
<!-- --------------------------------------------------------------------------
  Doxygen_HTM.htm
  $Version: 00173a, Revision: 165 $
  $Copyright: (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru> $
  $Date: 2020-03-26 02:25:56 +0400 $
 -------------------------------------------------------------------------- -->

<table class="" width="100%"><tr valign="top">

  <td align="left">
    <small><a href="http://orphus.ru">Нашли ошибку? Выделите ее мышкой и нажмите Ctrl+ENTER. &copy;&#160;Orphus.ru.</a></small><br>
    <a href="http://orphus.ru" id="orphus" target="_blank"><img class = "footer" alt="Orphus" src="http://storage.ded32.net.ru/orphus.gif" border="0"></a>
    </td>

  <td align="right">
    Документация по TX Library. Дата: Thu Aug 13 2020 00:46:49. Создано&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.3
    <img src="http://storage.ded32.net.ru/stat/TXLib-Help.chm" width=1px height=1px border="0">
    </td>
  </tr></table>

</ul>
</div>

<script type="text/javascript">var gaJsHost = (("https:" == document.location.protocol)? "https://ssl." : "http://www."); document.write (unescape ("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); try { var pageTracker = _gat._getTracker ("UA-7927138-1"); pageTracker._trackPageview(); } catch (err) {}</script>
<script type="text/javascript" src="http://storage.ded32.net.ru/orphus.js"></script>

</body>
</html>
