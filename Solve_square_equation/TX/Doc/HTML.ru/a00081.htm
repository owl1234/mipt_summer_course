<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>TX Library: Рисование</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript">
$(document).ready(initResizable);
</script>
<link href="Doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!-- Создано системой Doxygen 1.7.3 -->
<div id="top">
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="TXLib.png"></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">TX Library&#160;<span id="projectnumber">Help &ndash; Version: 00173a, Revision: 165</span></div>
   <div id="projectbrief"><s>&nbsp;ALL&nbsp;</s> Windows graphics in a sandbox</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('a00081.htm','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<h1>Рисование</h1>  </div>
</div>
<div class="contents">
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="member-group"></a>
Инициализация библиотеки</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">HWND&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gafce21ce98474d5559f316b3d47cdbfab">txCreateWindow</a> (double sizeX, double sizeY, bool centered=true)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Создание окна рисования  <a href="#gafce21ce98474d5559f316b3d47cdbfab"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">HDC &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56">txDC</a> () tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.  <a href="#ga6e641bf88bafb9bc5297354adb3aeb56"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">RGBQUAD *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga3a8ec79acc0dcbcc04bff3aecc235b4e">txVideoMemory</a> () tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает буфер памяти, связанный с холстом (HDC) TXLib.  <a href="#ga3a8ec79acc0dcbcc04bff3aecc235b4e"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gaa72c4849ac0c9bf6f95893f4265b9843">txSetDefaults</a> (HDC dc=txDC())</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Установка параметров рисования по умолчанию.  <a href="#gaa72c4849ac0c9bf6f95893f4265b9843"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga3291ffa23a348c25985d780ab8f7088b">txOK</a> () tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Проверка правильности работы библиотеки  <a href="#ga3291ffa23a348c25985d780ab8f7088b"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">POINT&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga11074386e81c0c8677f36c0a16ac0aa1">txGetExtent</a> (HDC dc=txDC()) tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает размер окна, картинки или холста в виде структуры POINT.  <a href="#ga11074386e81c0c8677f36c0a16ac0aa1"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gab79782d80f6c61587d02f0633aa2f198">txGetExtentX</a> (HDC dc=txDC()) tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает ширину окна или холста.  <a href="#gab79782d80f6c61587d02f0633aa2f198"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gaa9bb7fd84e0b9f59c96be89d70c74321">txGetExtentY</a> (HDC dc=txDC()) tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает высоту окна или холста.  <a href="#gaa9bb7fd84e0b9f59c96be89d70c74321"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">HWND&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gafa31ebd8ed957c41713900a407497cf8">txWindow</a> () tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает дескриптор окна рисования  <a href="#gafa31ebd8ed957c41713900a407497cf8"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gaf382eed71ecf8229882fe544035d66dc">txVersion</a> () tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает строку с информацией о текущей версии библиотеки.  <a href="#gaf382eed71ecf8229882fe544035d66dc"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gab2c5f0eff263a7297997281c3d451b91">txVersionNumber</a> () tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает номер версии библиотеки.  <a href="#gab2c5f0eff263a7297997281c3d451b91"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga12ffceef73c1a081c073f4d7c2914618">txGetModuleFileName</a> (bool fileNameOnly=true) tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает имя исполняемого файла или изначальный заголовок окна TXLib.  <a href="#ga12ffceef73c1a081c073f4d7c2914618"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="member-group"></a>
Установка цветов и режимов рисования</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga3e94cfad3d9080241f84129d6e5c09b5">txColors</a> { <br/>
&#160;&#160;<a class="el" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a9f0adfcb24eeb418fc39fe950db65ec8">TX_BLACK</a> =  RGB ( 0, 0, 0), 
<br/>
&#160;&#160;<a class="el" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aac23422a0b96bfc917484ba1fb0990de">TX_BLUE</a> =  RGB ( 0, 0, 128), 
<br/>
&#160;&#160;<a class="el" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aa13a0e0eb4587540bd06cb5d55083032">TX_GREEN</a> =  RGB ( 0, 128, 0), 
<br/>
&#160;&#160;<a class="el" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a3f59cd6ad2f1c2cea3f1b4f93baae64d">TX_CYAN</a> =  RGB ( 0, 128, 128), 
<br/>
&#160;&#160;<a class="el" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a342ad901a39ab4b40f091f6699b64927">TX_RED</a> =  RGB (128, 0, 0), 
<br/>
&#160;&#160;<a class="el" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aec305e1fce8a99fca3c442364389e22b">TX_MAGENTA</a> =  RGB (128, 0, 128), 
<br/>
&#160;&#160;<a class="el" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5ad71bcc76691c708c653567bc70129e4b">TX_BROWN</a> =  RGB (128, 128, 0), 
<br/>
&#160;&#160;<a class="el" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5ab192f19b013a2563740be0da4e7252d9">TX_ORANGE</a> =  RGB (255, 128, 0), 
<br/>
&#160;&#160;<a class="el" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aaefd282232c1503377c5a5e3545c579a">TX_GRAY</a> =  RGB (160, 160, 160), 
<br/>
&#160;&#160;<a class="el" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a5308a5fc6c34169a8af67630a5a750d5">TX_DARKGRAY</a> =  RGB (128, 128, 128), 
<br/>
&#160;&#160;<a class="el" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5abec0ab16c8a1ed55e137c20f80cdd25e">TX_LIGHTGRAY</a> =  RGB (192, 192, 192), 
<br/>
&#160;&#160;<a class="el" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a00514ed69e9dd0fafeb324c0258f9030">TX_LIGHTBLUE</a> =  RGB ( 0, 0, 255), 
<br/>
&#160;&#160;<a class="el" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5ae45f1e493cce7ef326f8bd9e8c684c6b">TX_LIGHTGREEN</a> =  RGB ( 0, 255, 128), 
<br/>
&#160;&#160;<a class="el" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a05b6100527e0b7a96dcda198a1439382">TX_LIGHTCYAN</a> =  RGB ( 0, 255, 255), 
<br/>
&#160;&#160;<a class="el" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a1c1e8dec8618fe54eee9e569a828a504">TX_LIGHTRED</a> =  RGB (255, 0, 128), 
<br/>
&#160;&#160;<a class="el" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5af3ef6cac77e7ca01e271a3562ceeb52f">TX_LIGHTMAGENTA</a> =  RGB (255, 0, 255), 
<br/>
&#160;&#160;<a class="el" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5ae197423002e969d08646554e8b647454">TX_PINK</a> =  RGB (255, 128, 255), 
<br/>
&#160;&#160;<a class="el" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a2331cdb79541487869e7c2445a2eb5f0">TX_YELLOW</a> =  RGB (255, 255, 128), 
<br/>
&#160;&#160;<a class="el" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025">TX_WHITE</a> =  RGB (255, 255, 255), 
<br/>
&#160;&#160;<a class="el" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a01fe8cb0f589868456167ee3a4652df8">TX_TRANSPARENT</a> =  0xFFFFFFFF, 
<br/>
&#160;&#160;<a class="el" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a081ac86689e98e0c036e960e9cb159ac">TX_NULL</a> =  TX_TRANSPARENT, 
<br/>
&#160;&#160;<a class="el" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aba144158f057694f9f08189c0b6a7d65">TX_HUE</a> =  0x04000000, 
<br/>
&#160;&#160;<a class="el" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a18419bb9192c947fb25d517765dd04cc">TX_SATURATION</a> =  0x05000000, 
<br/>
&#160;&#160;<a class="el" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5acc91e717a52d475213f0201bfae5341e">TX_LIGHTNESS</a> =  0x06000000
<br/>
 }</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight"><p>Названия предопределенных цветов. </p>
 <a href="a00081.htm#ga3e94cfad3d9080241f84129d6e5c09b5">Подробнее...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">COLORREF&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341">RGB</a> (int red, int green, int blue)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Создает (смешивает) цвет из трех базовых цветов (компонент).  <a href="#ga5e96023070a7e836d57ff9f4fac8a341"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">HPEN&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23">txSetColor</a> (COLORREF color, double thickness=1, HDC dc=txDC())</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Устанавливает текущий цвет и толщину линий, цвет текста.  <a href="#ga66facc5848748507d3ea48c75b33ba23"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">COLORREF&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gab6462db4dbcca4915d460036c6c8896d">txGetColor</a> (HDC dc=txDC()) tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает текущий цвет линий и текста.  <a href="#gab6462db4dbcca4915d460036c6c8896d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">HBRUSH&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2">txSetFillColor</a> (COLORREF color, HDC dc=txDC())</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Устанавливает текущий цвет заполнения фигур.  <a href="#gad21ad5660a5423f31c2c8e77329758b2"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">COLORREF&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga4d83b7e2d67f422cf703e15f2d7c4dfa">txGetFillColor</a> (HDC dc=txDC()) tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает текущий цвет заполнения фигур.  <a href="#ga4d83b7e2d67f422cf703e15f2d7c4dfa"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gac2b196b6826392229fa209e01817f941">txExtractColor</a> (COLORREF color, COLORREF component) tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Извлекает цветовую компоненту (цветовой канал) из смешанного цвета.  <a href="#gac2b196b6826392229fa209e01817f941"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">COLORREF&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga1350174ec2a2c83182437f04c88c2d95">txRGB2HSL</a> (COLORREF rgbColor) tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Преобразует цвет из формата RGB в формат HSL.  <a href="#ga1350174ec2a2c83182437f04c88c2d95"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">COLORREF&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga6d5e95c1f234d32b8859826859127244">txHSL2RGB</a> (COLORREF hslColor) tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Преобразует цвет из формата HSL в формат RGB.  <a href="#ga6d5e95c1f234d32b8859826859127244"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="member-group"></a>
Рисование фигур</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga78e83baeb6a02d5fa33dd8b062e513d9">txClear</a> (HDC dc=txDC())</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Стирает холст текущим цветом заполнения.  <a href="#ga78e83baeb6a02d5fa33dd8b062e513d9"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gafafd861ab7dc599b2e68b258b6727c85">txSetPixel</a> (double x, double y, COLORREF color, HDC dc=txDC())</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Рисует пиксель (точку на экране).  <a href="#gafafd861ab7dc599b2e68b258b6727c85"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">COLORREF&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga90daedc95ac28938003edb5b50479542">txGetPixel</a> (double x, double y, HDC dc=txDC()) tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает текущий цвет точки (пикселя) на экране.  <a href="#ga90daedc95ac28938003edb5b50479542"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gaaee38df6f38b6f1729b9db1c4ac23e65">txLine</a> (double x0, double y0, double x1, double y1, HDC dc=txDC())</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Рисует линию.  <a href="#gaaee38df6f38b6f1729b9db1c4ac23e65"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga18a0418f3c06463e958077cddf2a4864">txRectangle</a> (double x0, double y0, double x1, double y1, HDC dc=txDC())</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Рисует прямоугольник.  <a href="#ga18a0418f3c06463e958077cddf2a4864"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gacbbb638439ad7ba88804178516019fb1">txPolygon</a> (const POINT points[], int numPoints, HDC dc=txDC())</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Рисует ломаную линию или многоугольник.  <a href="#gacbbb638439ad7ba88804178516019fb1"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gaaf82e7c5a0fd06548f42c757f73d3dae">txEllipse</a> (double x0, double y0, double x1, double y1, HDC dc=txDC())</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Рисует эллипс.  <a href="#gaaf82e7c5a0fd06548f42c757f73d3dae"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gaa14e9c2a46cf713efaa1f850074d8adc">txCircle</a> (double x, double y, double r)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Рисует окружность или круг.  <a href="#gaa14e9c2a46cf713efaa1f850074d8adc"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga5e1e4cc39cc18962bb480c4adfa1344d">txArc</a> (double x0, double y0, double x1, double y1, double startAngle, double totalAngle, HDC dc=txDC())</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Рисует дугу эллипса.  <a href="#ga5e1e4cc39cc18962bb480c4adfa1344d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga8e06e3abcb6b3724d332feb8aa83a8df">txPie</a> (double x0, double y0, double x1, double y1, double startAngle, double totalAngle, HDC dc=txDC())</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Рисует сектор эллипса.  <a href="#ga8e06e3abcb6b3724d332feb8aa83a8df"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga59468ca0fd4c182ac0a03573267eb3e9">txChord</a> (double x0, double y0, double x1, double y1, double startAngle, double totalAngle, HDC dc=txDC())</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Рисует хорду эллипса.  <a href="#ga59468ca0fd4c182ac0a03573267eb3e9"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga8adde0a20efa7597d8653653817353b2">txFloodFill</a> (double x, double y, COLORREF color=TX_TRANSPARENT, DWORD mode=FLOODFILLSURFACE, HDC dc=txDC())</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Заливает произвольный контур текущим цветом заполнения.  <a href="#ga8adde0a20efa7597d8653653817353b2"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gaf5f3dec18e058830a6eb85ca127472df">txTriangle</a> (double x1, double y1, double x2, double y2, double x3, double y3)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Функция, которая <em>должна бы</em> рисовать треугольник.  <a href="#gaf5f3dec18e058830a6eb85ca127472df"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gac76227ff55076802ea267be18b4d7a8d">txDrawMan</a> (int x, int y, int sizeX, int sizeY, COLORREF color, double handL, double handR, double twist, double head, double eyes, double wink, double crazy, double smile, double hair, double wind)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Рисует человечка.  <a href="#gac76227ff55076802ea267be18b4d7a8d"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="member-group"></a>
Работа с текстом</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga52e119361961d9eee33c176a3084e55d">txTextOut</a> (double x, double y, const char text[], HDC dc=txDC())</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Рисует текст.  <a href="#ga52e119361961d9eee33c176a3084e55d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gaf6a9b31e58b6a0523ce1636a97053606">txDrawText</a> (double x0, double y0, double x1, double y1, const char text[], unsigned format=DT_CENTER|DT_VCENTER|DT_WORDBREAK|DT_WORD_ELLIPSIS, HDC dc=txDC())</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Рисует текст, размещенный в прямоугольной области.  <a href="#gaf6a9b31e58b6a0523ce1636a97053606"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">HFONT&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga6689b9a89add9c5eb5cf54a8c86539a4">txSelectFont</a> (const char name[], double sizeY, double sizeX=-1, int bold=FW_DONTCARE, bool italic=false, bool underline=false, bool strikeout=false, double angle=0, HDC dc=txDC())</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Выбирает текущий шрифт, его размер и другие атрибуты.  <a href="#ga6689b9a89add9c5eb5cf54a8c86539a4"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">SIZE&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga64af5f87cd652548278ff98d26f58148">txGetTextExtent</a> (const char text[], HDC dc=txDC()) tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Вычисляет размеры текстовой надписи.  <a href="#ga64af5f87cd652548278ff98d26f58148"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gad5483eacac697420a84f66733e45ed02">txGetTextExtentX</a> (const char text[], HDC dc=txDC()) tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Вычисляет ширину текстовой надписи.  <a href="#gad5483eacac697420a84f66733e45ed02"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gac021e9984ef217a7a8c14094e3d684c9">txGetTextExtentY</a> (const char text[], HDC dc=txDC()) tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Вычисляет высоту текстовой надписи.  <a href="#gac021e9984ef217a7a8c14094e3d684c9"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga09938df8859ae8b62638a3af76ee6735">txSetTextAlign</a> (unsigned align=TA_CENTER|TA_BASELINE, HDC dc=txDC())</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Устанавливает текущее выравнивание текста (влево/вправо/по центру).  <a href="#ga09938df8859ae8b62638a3af76ee6735"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">LOGFONT *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga794901725b6c4a96f585742b70c0ea05">txFontExist</a> (const char name[]) tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Ищет шрифт по его названию.  <a href="#ga794901725b6c4a96f585742b70c0ea05"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="member-group"></a>
Рисование в памяти (на "виртуальном холсте") и загрузка изображений</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">HDC&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga1008da052f2fbe9ec0f70c2f6b4f0700">txCreateCompatibleDC</a> (double sizeX, double sizeY, HBITMAP bitmap=NULL) tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Создает дополнительный холст (контекст рисования, Device Context, DC) в памяти.  <a href="#ga1008da052f2fbe9ec0f70c2f6b4f0700"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">HDC&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga7535f88c0fd15b4b49195060d38f2603">txCreateDIBSection</a> (double sizeX, double sizeY, RGBQUAD **pixels=NULL) tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Создает аппаратно-независимый дополнительный холст (контекст рисования, Device Context, DC) в памяти с возможностью прямого доступа к нему как к массиву.  <a href="#ga7535f88c0fd15b4b49195060d38f2603"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">HDC&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gaec4970aac125bcf0d8a0b10a118222f7">txLoadImage</a> (const char filename[], unsigned imageFlags=IMAGE_BITMAP, unsigned loadFlags=LR_LOADFROMFILE) tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Загружает из файла изображение в формате BMP. Делает это довольно медленно.  <a href="#gaec4970aac125bcf0d8a0b10a118222f7"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga505f212582bf9b2bf95a4ef15f84af42">txDeleteDC</a> (HDC dc)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Уничтожает холст (контекст рисования, DC) в памяти.  <a href="#ga505f212582bf9b2bf95a4ef15f84af42"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga6dfb121b4a1116f987baeb515713cbbf">txBitBlt</a> (HDC destImage, double xDest, double yDest, double width, double height, HDC sourceImage, double xSource=0, double ySource=0, unsigned operation=SRCCOPY)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Копирует изображение с одного холста (контекста рисования, DC) на другой.  <a href="#ga6dfb121b4a1116f987baeb515713cbbf"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga3cb3f1af2aed93b9df7b7e9730e2cb89">txBitBlt</a> (double xDest, double yDest, HDC sourceImage, double xSource=0, double ySource=0)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Копирует изображение на экран.  <a href="#ga3cb3f1af2aed93b9df7b7e9730e2cb89"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga54f48f0bcb9453add294e0a9f8b1fb1d">txTransparentBlt</a> (HDC destImage, double xDest, double yDest, double width, double height, HDC sourceImage, double xSource=0, double ySource=0, COLORREF transColor=TX_BLACK)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом прозрачности.  <a href="#ga54f48f0bcb9453add294e0a9f8b1fb1d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga6e5105284a1d93aff19fc29d14a8a532">txTransparentBlt</a> (double xDest, double yDest, HDC sourceImage, COLORREF transColor=TX_BLACK, double xSource=0, double ySource=0)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Копирует изображение на экран с учетом прозрачности.  <a href="#ga6e5105284a1d93aff19fc29d14a8a532"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga4d6f780cdef622df0fda71d0b3cfee52">txAlphaBlend</a> (HDC destImage, double xDest, double yDest, double width, double height, HDC sourceImage, double xSource=0, double ySource=0, double alpha=1.0)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом полупрозрачности.  <a href="#ga4d6f780cdef622df0fda71d0b3cfee52"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gaa0af478a9b959bb096a8a686d2e685b5">txAlphaBlend</a> (double xDest, double yDest, HDC sourceImage, double xSource=0, double ySource=0, double alpha=1.0)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Копирует изображение на экран с учетом полупрозрачности.  <a href="#gaa0af478a9b959bb096a8a686d2e685b5"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">HDC&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga6280d640bb3b08dc82c8dd29caf5ff47">txUseAlpha</a> (HDC image)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Пересчитывает цвета пикселей с учетом прозрачности (переводит цвета в формат Premultiplied Alpha).  <a href="#ga6280d640bb3b08dc82c8dd29caf5ff47"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga45389db909311454bbdfed3898d760d1">txSaveImage</a> (const char filename[], HDC dc=txDC())</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Сохраняет в файл изображение в формате BMP.  <a href="#ga45389db909311454bbdfed3898d760d1"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="member-group"></a>
Вспомогательные функции</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga6c293f0b0f71efebdeeb0b56a97ba50c">txSleep</a> (double time=0)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Задерживает выполнение программы на определенное время.  <a href="#ga6c293f0b0f71efebdeeb0b56a97ba50c"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gae92e621aaed81f90e4d142356e38762a">txBegin</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Блокирует обновление изображения окна, во избежание мигания.  <a href="#gae92e621aaed81f90e4d142356e38762a"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga809dc04afd5348247846ee01ce9a06e6">txEnd</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Разблокирует обновление окна, заблокированное функцией <a class="el" href="a00081.htm#gae92e621aaed81f90e4d142356e38762a" title="Блокирует обновление изображения окна, во избежание мигания.">txBegin()</a>.  <a href="#ga809dc04afd5348247846ee01ce9a06e6"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gadc7fd9cdc8c007693db7b6d7de794709">txRedrawWindow</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Обновляет изображение в окне TXLib вручную.  <a href="#gadc7fd9cdc8c007693db7b6d7de794709"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga0a3cf3a018cea9d5889d2626e9a37136">txDestroyWindow</a> (HWND wnd=txWindow())</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Уничтожает окно.  <a href="#ga0a3cf3a018cea9d5889d2626e9a37136"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga49983bddca35d531c521cf04c6c2449f">txQueryPerformance</a> () tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Оценивает скорость работы компьютера.  <a href="#ga49983bddca35d531c521cf04c6c2449f"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga1aca71127c9986f995b2372903d65964">txGetFPS</a> (int minFrames=txFramesToAverage) tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Выдает количество кадров (вызовов этой функции) в секунду.  <a href="#ga1aca71127c9986f995b2372903d65964"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gaff3d9c60900531f438a19216485bdd41">txUpdateWindow</a> (int update=true)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Разрешает или запрещает автоматическое обновление изображения в окне.  <a href="#gaff3d9c60900531f438a19216485bdd41"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gabc64e03f4ca966e76bc714bbe8173761">txSelectObject</a> (HGDIOBJ obj, HDC dc=txDC())</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Устанавливает текущий активный объект GDI.  <a href="#gabc64e03f4ca966e76bc714bbe8173761"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga93cecf6b117fc403c0488f388b78a6d1">txIDontWantToHaveAPauseAfterMyProgramBeforeTheWindowWillClose_AndIWillNotBeAskingWhereIsMyPicture</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Делает нечто иногда удобное. См. название функции.  <a href="#ga93cecf6b117fc403c0488f388b78a6d1"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="member-group"></a>
Функции консоли</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga791155510da5fc336b3dbe4deab37974">txSetConsoleAttr</a> (unsigned colors=0x07)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Устанавливает цветовые атрибуты консоли.  <a href="#ga791155510da5fc336b3dbe4deab37974"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gad1fdf92b2b1e0e3d56e03fad24d735bd">txGetConsoleAttr</a> () tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает текущие цветовые атрибуты консоли.  <a href="#gad1fdf92b2b1e0e3d56e03fad24d735bd"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga2cb63c12d9206e9ed2b2c83c9a08f68e">txClearConsole</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Стирает текст консоли.  <a href="#ga2cb63c12d9206e9ed2b2c83c9a08f68e"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">POINT&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gaee548f7b5672cbcbb99246e0291d7336">txSetConsoleCursorPos</a> (double x, double y)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Устанавливает позицию мигающего курсора консоли.  <a href="#gaee548f7b5672cbcbb99246e0291d7336"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">POINT&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga3227242c57eef33049cdaee655f4faee">txGetConsoleCursorPos</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает позицию мигающего курсора консоли.  <a href="#ga3227242c57eef33049cdaee655f4faee"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">POINT&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gade3dc928a81efd7054c61fa6cb4ddc06">txGetConsoleExtent</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает размер консоли.  <a href="#gade3dc928a81efd7054c61fa6cb4ddc06"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">POINT&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga250455abeab8c99a51153ef8f4ec0396">txGetConsoleFontSize</a> () tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает размеры шрифта консоли.  <a href="#ga250455abeab8c99a51153ef8f4ec0396"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gaa148d2040d20ed74cf46ab186c35f9ed">txTextCursor</a> (bool blink=true)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Запрещает или разрешает рисование мигающего курсора в окне.  <a href="#gaa148d2040d20ed74cf46ab186c35f9ed"></a><br/></td></tr>
</table>
<hr/><h2>Перечисления</h2>
<a class="anchor" id="ga3e94cfad3d9080241f84129d6e5c09b5"></a><!-- doxytag: member="TXLib.h::txColors" ref="ga3e94cfad3d9080241f84129d6e5c09b5" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="a00081.htm#ga3e94cfad3d9080241f84129d6e5c09b5">txColors</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Названия предопределенных цветов. </p>
<p>См. TX_BLACK, TX_BLUE и другие цвета в списке выше.</p>
<p>Если кому-то эти цвета не нравятся (что неудивительно), всегда можно сделать свои с помощью <a class="el" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a>. См. пример ниже.</p>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, <a class="el" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00081.htm#gab6462db4dbcca4915d460036c6c8896d" title="Возвращает текущий цвет линий и текста.">txGetColor()</a>, <a class="el" href="a00081.htm#ga4d83b7e2d67f422cf703e15f2d7c4dfa" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00081.htm#ga90daedc95ac28938003edb5b50479542" title="Возвращает текущий цвет точки (пикселя) на экране.">txGetPixel()</a>, <a class="el" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment"><span class="preprocessor">          #include &quot;<a class="code" href="a00058.htm" title="Библиотека Тупого Художника (The Dumb Artist Library, TX Library, TXLib).">TXLib.h</a>&quot;</span>

          <span class="keyword">const</span> COLORREF MY_DEEP_ROMANTIC_BLUE = <a class="code" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (  0,   0, 129),
                         MY_SHINING_MOONLIGHT  = <a class="code" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (128, 255,  64);
          ...

          <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a>     (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a2331cdb79541487869e7c2445a2eb5f0" title="Желтый цвет.">TX_YELLOW</a>);              <span class="comment">// Устанавливаем желтый цвет линий</span>
          <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a081ac86689e98e0c036e960e9cb159ac" title="Прозрачный цвет. Отключает рисование.">TX_NULL</a>);                <span class="comment">// Заливка фигур будет прозрачная</span>

          <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (MY_DEEP_ROMANTIC_BLUE);  <span class="comment">// А.И. Куинджи, &quot;Лунная ночь на Днепре&quot;</span>
          <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a>     (MY_SHINING_MOONLIGHT);   <span class="comment">// http://tanais.info/art/pic/kuindzhi1.html</span>
</pre></div> </dd>
</dl>
<dl><dt><b>Элементы перечислений: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="gga3e94cfad3d9080241f84129d6e5c09b5a9f0adfcb24eeb418fc39fe950db65ec8"></a><!-- doxytag: member="TX_BLACK" ref="gga3e94cfad3d9080241f84129d6e5c09b5a9f0adfcb24eeb418fc39fe950db65ec8" args="" -->TX_BLACK</em>&nbsp;</td><td>
<p>Черный цвет. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga3e94cfad3d9080241f84129d6e5c09b5aac23422a0b96bfc917484ba1fb0990de"></a><!-- doxytag: member="TX_BLUE" ref="gga3e94cfad3d9080241f84129d6e5c09b5aac23422a0b96bfc917484ba1fb0990de" args="" -->TX_BLUE</em>&nbsp;</td><td>
<p>Темно-синий цвет. <em>Плохо виден.</em> </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga3e94cfad3d9080241f84129d6e5c09b5aa13a0e0eb4587540bd06cb5d55083032"></a><!-- doxytag: member="TX_GREEN" ref="gga3e94cfad3d9080241f84129d6e5c09b5aa13a0e0eb4587540bd06cb5d55083032" args="" -->TX_GREEN</em>&nbsp;</td><td>
<p>Зеленый цвет. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga3e94cfad3d9080241f84129d6e5c09b5a3f59cd6ad2f1c2cea3f1b4f93baae64d"></a><!-- doxytag: member="TX_CYAN" ref="gga3e94cfad3d9080241f84129d6e5c09b5a3f59cd6ad2f1c2cea3f1b4f93baae64d" args="" -->TX_CYAN</em>&nbsp;</td><td>
<p>Бирюзовый цвет. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga3e94cfad3d9080241f84129d6e5c09b5a342ad901a39ab4b40f091f6699b64927"></a><!-- doxytag: member="TX_RED" ref="gga3e94cfad3d9080241f84129d6e5c09b5a342ad901a39ab4b40f091f6699b64927" args="" -->TX_RED</em>&nbsp;</td><td>
<p>Темно-красный цвет. <em>Слишком темный.</em> </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga3e94cfad3d9080241f84129d6e5c09b5aec305e1fce8a99fca3c442364389e22b"></a><!-- doxytag: member="TX_MAGENTA" ref="gga3e94cfad3d9080241f84129d6e5c09b5aec305e1fce8a99fca3c442364389e22b" args="" -->TX_MAGENTA</em>&nbsp;</td><td>
<p>Темно-малиновый цвет. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga3e94cfad3d9080241f84129d6e5c09b5ad71bcc76691c708c653567bc70129e4b"></a><!-- doxytag: member="TX_BROWN" ref="gga3e94cfad3d9080241f84129d6e5c09b5ad71bcc76691c708c653567bc70129e4b" args="" -->TX_BROWN</em>&nbsp;</td><td>
<p>Коричневый цвет. <em>Некрасивый. Do it yourself with <a class="el" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a>.</em> </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga3e94cfad3d9080241f84129d6e5c09b5ab192f19b013a2563740be0da4e7252d9"></a><!-- doxytag: member="TX_ORANGE" ref="gga3e94cfad3d9080241f84129d6e5c09b5ab192f19b013a2563740be0da4e7252d9" args="" -->TX_ORANGE</em>&nbsp;</td><td>
<p>Оранжевый цвет. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga3e94cfad3d9080241f84129d6e5c09b5aaefd282232c1503377c5a5e3545c579a"></a><!-- doxytag: member="TX_GRAY" ref="gga3e94cfad3d9080241f84129d6e5c09b5aaefd282232c1503377c5a5e3545c579a" args="" -->TX_GRAY</em>&nbsp;</td><td>
<p>Серый цвет. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga3e94cfad3d9080241f84129d6e5c09b5a5308a5fc6c34169a8af67630a5a750d5"></a><!-- doxytag: member="TX_DARKGRAY" ref="gga3e94cfad3d9080241f84129d6e5c09b5a5308a5fc6c34169a8af67630a5a750d5" args="" -->TX_DARKGRAY</em>&nbsp;</td><td>
<p>Темно-серый цвет. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga3e94cfad3d9080241f84129d6e5c09b5abec0ab16c8a1ed55e137c20f80cdd25e"></a><!-- doxytag: member="TX_LIGHTGRAY" ref="gga3e94cfad3d9080241f84129d6e5c09b5abec0ab16c8a1ed55e137c20f80cdd25e" args="" -->TX_LIGHTGRAY</em>&nbsp;</td><td>
<p>Светло-серый цвет. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga3e94cfad3d9080241f84129d6e5c09b5a00514ed69e9dd0fafeb324c0258f9030"></a><!-- doxytag: member="TX_LIGHTBLUE" ref="gga3e94cfad3d9080241f84129d6e5c09b5a00514ed69e9dd0fafeb324c0258f9030" args="" -->TX_LIGHTBLUE</em>&nbsp;</td><td>
<p>Светло-синий цвет. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga3e94cfad3d9080241f84129d6e5c09b5ae45f1e493cce7ef326f8bd9e8c684c6b"></a><!-- doxytag: member="TX_LIGHTGREEN" ref="gga3e94cfad3d9080241f84129d6e5c09b5ae45f1e493cce7ef326f8bd9e8c684c6b" args="" -->TX_LIGHTGREEN</em>&nbsp;</td><td>
<p>Светло-зеленый цвет. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga3e94cfad3d9080241f84129d6e5c09b5a05b6100527e0b7a96dcda198a1439382"></a><!-- doxytag: member="TX_LIGHTCYAN" ref="gga3e94cfad3d9080241f84129d6e5c09b5a05b6100527e0b7a96dcda198a1439382" args="" -->TX_LIGHTCYAN</em>&nbsp;</td><td>
<p>Светло-бирюзовый цвет. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga3e94cfad3d9080241f84129d6e5c09b5a1c1e8dec8618fe54eee9e569a828a504"></a><!-- doxytag: member="TX_LIGHTRED" ref="gga3e94cfad3d9080241f84129d6e5c09b5a1c1e8dec8618fe54eee9e569a828a504" args="" -->TX_LIGHTRED</em>&nbsp;</td><td>
<p>Светло-красный цвет. <em>Не самого лучшего оттенка.</em> </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga3e94cfad3d9080241f84129d6e5c09b5af3ef6cac77e7ca01e271a3562ceeb52f"></a><!-- doxytag: member="TX_LIGHTMAGENTA" ref="gga3e94cfad3d9080241f84129d6e5c09b5af3ef6cac77e7ca01e271a3562ceeb52f" args="" -->TX_LIGHTMAGENTA</em>&nbsp;</td><td>
<p>Светло-малиновый цвет. <em>Еще менее лучшего оттенка.</em> </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga3e94cfad3d9080241f84129d6e5c09b5ae197423002e969d08646554e8b647454"></a><!-- doxytag: member="TX_PINK" ref="gga3e94cfad3d9080241f84129d6e5c09b5ae197423002e969d08646554e8b647454" args="" -->TX_PINK</em>&nbsp;</td><td>
<p>Розовый гламурный :) </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga3e94cfad3d9080241f84129d6e5c09b5a2331cdb79541487869e7c2445a2eb5f0"></a><!-- doxytag: member="TX_YELLOW" ref="gga3e94cfad3d9080241f84129d6e5c09b5a2331cdb79541487869e7c2445a2eb5f0" args="" -->TX_YELLOW</em>&nbsp;</td><td>
<p>Желтый цвет. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025"></a><!-- doxytag: member="TX_WHITE" ref="gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025" args="" -->TX_WHITE</em>&nbsp;</td><td>
<p>Белый цвет. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga3e94cfad3d9080241f84129d6e5c09b5a01fe8cb0f589868456167ee3a4652df8"></a><!-- doxytag: member="TX_TRANSPARENT" ref="gga3e94cfad3d9080241f84129d6e5c09b5a01fe8cb0f589868456167ee3a4652df8" args="" -->TX_TRANSPARENT</em>&nbsp;</td><td>
<p>Прозрачный цвет. <em>Отключает рисование.</em> </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga3e94cfad3d9080241f84129d6e5c09b5a081ac86689e98e0c036e960e9cb159ac"></a><!-- doxytag: member="TX_NULL" ref="gga3e94cfad3d9080241f84129d6e5c09b5a081ac86689e98e0c036e960e9cb159ac" args="" -->TX_NULL</em>&nbsp;</td><td>
<p>Прозрачный цвет. <em>Отключает рисование.</em> </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga3e94cfad3d9080241f84129d6e5c09b5aba144158f057694f9f08189c0b6a7d65"></a><!-- doxytag: member="TX_HUE" ref="gga3e94cfad3d9080241f84129d6e5c09b5aba144158f057694f9f08189c0b6a7d65" args="" -->TX_HUE</em>&nbsp;</td><td>
<p>Цветовой тон цвета в модели HSL. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga3e94cfad3d9080241f84129d6e5c09b5a18419bb9192c947fb25d517765dd04cc"></a><!-- doxytag: member="TX_SATURATION" ref="gga3e94cfad3d9080241f84129d6e5c09b5a18419bb9192c947fb25d517765dd04cc" args="" -->TX_SATURATION</em>&nbsp;</td><td>
<p>Насыщенность цвета в модели HSL. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="gga3e94cfad3d9080241f84129d6e5c09b5acc91e717a52d475213f0201bfae5341e"></a><!-- doxytag: member="TX_LIGHTNESS" ref="gga3e94cfad3d9080241f84129d6e5c09b5acc91e717a52d475213f0201bfae5341e" args="" -->TX_LIGHTNESS</em>&nbsp;</td><td>
<p>Светлота цвета в модели HSL. </p>
</td></tr>
</table>
</dd>
</dl>

<p>См. определение в файле <a class="el" href="a00058_source.htm">TXLib.h</a> строка <a class="el" href="a00058_source.htm#l01370">1370</a></p>

</div>
</div>
<hr/><h2>Функции</h2>
<a class="anchor" id="gafce21ce98474d5559f316b3d47cdbfab"></a><!-- doxytag: member="TXLib.h::txCreateWindow" ref="gafce21ce98474d5559f316b3d47cdbfab" args="(double sizeX, double sizeY, bool centered=true)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">HWND txCreateWindow </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>sizeX</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>sizeY</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>centered</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Создание окна рисования </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">sizeX</td><td>Размер окна по горизонтали (в пикселях). </td></tr>
    <tr><td class="paramname">sizeY</td><td>Размер окна по вертикали (в пикселях). </td></tr>
    <tr><td class="paramname">centered</td><td><em>Центрирование окна на дисплее. Необязательно. Если не указано, то окно центрируется.</em></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Дескриптор (системный номер) окна TXLib. Если окно не создано, возвращается NULL.</dd></dl>
<dl class="note"><dt><b>Заметки:</b></dt><dd>Устанавливаются параметры рисования по умолчанию, см. функцию <a class="el" href="a00081.htm#gaa72c4849ac0c9bf6f95893f4265b9843" title="Установка параметров рисования по умолчанию.">txSetDefaults()</a>.</dd></dl>
<dl class="warning"><dt><b>Предупреждения:</b></dt><dd>Если используется многофайловый проект (с раздельной компиляцией), то графические функции TXLib, вызванные из файла проекта, будут работать только с тем окном, которое создано <b>в этом же файле</b> проекта. Если проект состоит, скажем, из файлов <code>main.cpp</code> и <code>game.cpp</code>, и в файле <code>main.cpp</code> создается графическое окно, то функции из <code>game.cpp</code> не смогут рисовать в нем. (Однако <code>game.cpp</code> сможет создать свое собственное окно.) <br/>
 Если такой программе нужно одно окно, то в проект следует включить файл, ответственный за рисование, скажем, <code>graphics.cpp</code>, и выводить графику только через функции этого файла. Такой файл (или библиотеку) в больших проектах часто называют графическим движком. <br/>
<br/>
 То же касается и использования TXLib в <b>DLL</b>.</dd></dl>
<dl class="note"><dt><b>Заметки:</b></dt><dd>Вспомогательные окна могут создаваться по одному на каждый файл многофайлового проекта или загруженную DLL. Для закрытия вспомогательных окон используется <a class="el" href="a00081.htm#ga0a3cf3a018cea9d5889d2626e9a37136" title="Уничтожает окно.">txDestroyWindow()</a>. Для закрытия главного надо выйти из main().</dd></dl>
<dl class="warning"><dt><b>Предупреждения:</b></dt><dd>Одновременное создание нескольких окон не потокобезопасно (not thread-safe). <br/>
<br/>
 Многооконная программа на TXLib тормозит, да и однооконная тоже не отличается высокой скоростью. Чтобы избавиться от этого, бросьте TXLib и используйте другие оконные библиотеки: <a href="http://qt-project.org">Qt</a>, <a href="http://wxwidgets.org">wxWidgets</a>, <a href="http://gtk.org">GTK+</a> и т.д., или библиотеки, специально разработанные для создания игр: <a href="http://sfml-dev.org">SFML</a> (она простая), <a href="http://libsdl.org">SDL</a> и другие. Вы можете написать и свою собственную оконную библиотеку, основанную на <a href="http://opengl.org">OpenGL</a> <small>&#160;</small><span class="s"> и получится SFML или SDL:), </span><small>&#160;</small> или DirectX. Помните, что цель TXLib -- облегчить первые шаги, но потом стать ненужной.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#ga3291ffa23a348c25985d780ab8f7088b" title="Проверка правильности работы библиотеки">txOK()</a>, <a class="el" href="a00081.htm#gafa31ebd8ed957c41713900a407497cf8" title="Возвращает дескриптор окна рисования">txWindow()</a>, <a class="el" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC()</a>, <a class="el" href="a00081.htm#ga3a8ec79acc0dcbcc04bff3aecc235b4e" title="Возвращает буфер памяти, связанный с холстом (HDC) TXLib.">txVideoMemory()</a>, <a class="el" href="a00084.htm#ga4ddb32d7a8a676537014da7aea7bf273" title="Стиль графического окна библиотеки.">_txWindowStyle</a>, <a class="el" href="a00084.htm#ga8a148ac2f04e1f9c7414af69362e0668" title="Режим отображения консольного окна. Допустимы любые флаги функции ShowWindow.">_txConsoleMode</a>, <a class="el" href="a00084.htm#gad8e573bf6e0fb87f5d0313b5108a6166" title="Шрифт консоли">_txConsoleFont</a>, <a class="el" href="a00084.htm#gacc95bfbcf7a0f9124e8cd5e80d0b3cd3" title="Интервал мигания курсора консоли (мс)">_txCursorBlinkInterval</a>, <a class="el" href="a00084.htm#gaf2070fcdbd473d328f17f130623db80a" title="Интервал обновления холста (мс)">_txWindowUpdateInterval</a>, <a class="el" href="a00084.htm#gaab281ee20ea6be5eae34d0e15bf03dcf" title="Запрет ранней инициализации TXLib.">_TX_NOINIT</a>, <a class="el" href="a00084.htm#ga1c7c387b21adad57d0dda2f8bd84ad1c" title="Включает/отключает внутреннюю трассировку исполнения кода библиотеки.">_TX_ALLOW_TRACE</a>, <a class="el" href="a00084.htm#ga2aa2550a5302deb4d46b3759b26f4b41" title="Трассирует исполнение кода через OutputDebugString().">TX_TRACE</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00081.htm#gafce21ce98474d5559f316b3d47cdbfab" title="Создание окна рисования">txCreateWindow</a> ( 800, 600);         <span class="comment">// Окно  800х600,    центрировано</span>
          <a class="code" href="a00081.htm#gafce21ce98474d5559f316b3d47cdbfab" title="Создание окна рисования">txCreateWindow</a> (1024, 768, <span class="keyword">false</span>);  <span class="comment">// Окно 1024х768, не центрировано</span>
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga6e641bf88bafb9bc5297354adb3aeb56"></a><!-- doxytag: member="TXLib.h::txDC" ref="ga6e641bf88bafb9bc5297354adb3aeb56" args="() tx_nodiscard" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">HDC&amp; txDC </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib. </p>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Дескриптор (системный номер, handler) контекста рисования (device context, DC) холста TXLib (TXLib HDC).</dd></dl>
<dl class="note"><dt><b>Заметки:</b></dt><dd>Возвращаемый дескриптор -- <b>не</b> оконный контекст рисования окна TXLib. TXLib реализует двойную буферизацию. Все рисовательные действия происходят со скрытым HDC, находящемся в памяти, и его содержимое периодически автоматически копируется на экран. Это иногда приводит к мерцанию. Автоматическое копирование можно выключить функцией <a class="el" href="a00081.htm#gae92e621aaed81f90e4d142356e38762a" title="Блокирует обновление изображения окна, во избежание мигания.">txBegin()</a> и обратно включить функцией <a class="el" href="a00081.htm#ga809dc04afd5348247846ee01ce9a06e6" title="Разблокирует обновление окна, заблокированное функцией txBegin().">txEnd()</a>, в этом случае содержимое окна можно перерисовать функциями <a class="el" href="a00081.htm#gadc7fd9cdc8c007693db7b6d7de794709" title="Обновляет изображение в окне TXLib вручную.">txRedrawWindow()</a> или <a class="el" href="a00081.htm#ga6c293f0b0f71efebdeeb0b56a97ba50c" title="Задерживает выполнение программы на определенное время.">txSleep()</a>. <br/>
<br/>
 Дополнительную информацию об автоматическом обновлении см. в функциях <a class="el" href="a00081.htm#gae92e621aaed81f90e4d142356e38762a" title="Блокирует обновление изображения окна, во избежание мигания.">txBegin()</a>, <a class="el" href="a00081.htm#ga809dc04afd5348247846ee01ce9a06e6" title="Разблокирует обновление окна, заблокированное функцией txBegin().">txEnd()</a>, <a class="el" href="a00081.htm#gaff3d9c60900531f438a19216485bdd41" title="Разрешает или запрещает автоматическое обновление изображения в окне.">txUpdateWindow()</a>, <a class="el" href="a00081.htm#gadc7fd9cdc8c007693db7b6d7de794709" title="Обновляет изображение в окне TXLib вручную.">txRedrawWindow()</a> и <a class="el" href="a00081.htm#ga6c293f0b0f71efebdeeb0b56a97ba50c" title="Задерживает выполнение программы на определенное время.">txSleep()</a>.</dd>
<dd>
Этот HDC возвращается в виде ссылки, что позволяет подменить его. Тогда TXLib будет периодически копировать на экран изображение уже из вашего буфера. Перед подменой надо сохранить старый дескриптор или освободить его с помощью <a class="el" href="a00081.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC()</a>. Во время подмены рисование должно быть заблокировано с помощью <a class="el" href="a00080.htm#ga532fa8a55c4f3d4f94ff0fdceae732b2" title="Блокировка холста (контекста рисования).">txLock()</a> и после разблокировано с помощью <a class="el" href="a00080.htm#ga8fe4ec4c66cb69ce337747fe65dd0cc6" title="Разблокировка холста">txUnlock()</a>.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#gafa31ebd8ed957c41713900a407497cf8" title="Возвращает дескриптор окна рисования">txWindow()</a>, <a class="el" href="a00081.htm#gae92e621aaed81f90e4d142356e38762a" title="Блокирует обновление изображения окна, во избежание мигания.">txBegin()</a>, <a class="el" href="a00081.htm#ga809dc04afd5348247846ee01ce9a06e6" title="Разблокирует обновление окна, заблокированное функцией txBegin().">txEnd()</a>, <a class="el" href="a00080.htm#ga532fa8a55c4f3d4f94ff0fdceae732b2" title="Блокировка холста (контекста рисования).">txLock()</a>, <a class="el" href="a00080.htm#ga8fe4ec4c66cb69ce337747fe65dd0cc6" title="Разблокировка холста">txUnlock()</a>, <a class="el" href="a00080.htm#gafdd807831b131ba38d5856b6ee4e8287" title="Вызов функции Win32 GDI с автоматической блокировкой и разблокировкой.">txGDI()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00081.htm#ga6dfb121b4a1116f987baeb515713cbbf" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt</a> (<a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(),   0,   0, 100, 100, <a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), 0, 0);
          <a class="code" href="a00081.htm#ga6dfb121b4a1116f987baeb515713cbbf" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt</a> (<a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), 100,   0, 100, 100, <a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), 0, 0);
          <a class="code" href="a00081.htm#ga6dfb121b4a1116f987baeb515713cbbf" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt</a> (<a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), 0,   100, 100, 100, <a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), 0, 0);
          <a class="code" href="a00081.htm#ga6dfb121b4a1116f987baeb515713cbbf" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt</a> (<a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), 100, 100, 100, 100, <a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), 0, 0);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga3a8ec79acc0dcbcc04bff3aecc235b4e"></a><!-- doxytag: member="TXLib.h::txVideoMemory" ref="ga3a8ec79acc0dcbcc04bff3aecc235b4e" args="() tx_nodiscard" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">RGBQUAD* txVideoMemory </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Возвращает буфер памяти, связанный с холстом (HDC) TXLib. </p>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Указатель на массив структур RGBQUAD, -- буфера памяти, связанного с HDC холста TXLib.</dd></dl>
<p>Прямой доступ к буферу памяти HDC позволяет работать с ним с очень высокой скоростью. Правда, рисовать можно только отдельные пиксели. Это полезно, в основном, если вы пишете собственный графический рендер <em>(так напишите же его!).</em></p>
<p>Буфер памяти HDC -- двумерный массив, размеры которого соответствуют ширине и высоте холста (HDC). Но он возвращается как указатель на одномерный массив, поэтому двумерную адресацию к нему надо вести вручную. Кроме того, "Y-ось" этого массива направлена <b>вверх</b>, а не вниз, как в окне TXLib. Поэтому для нужного пикселя его смещение от начала массива нужно рассчитывать с помощью формулы <code>x + (-y + sizeY) * sizeX</code>.</p>
<dl class="warning"><dt><b>Предупреждения:</b></dt><dd>Будьте осторожны, не выходите за границы массива, последствия будут непредсказуемыми.</dd></dl>
<dl class="note"><dt><b>Заметки:</b></dt><dd>Во время работы с буфером автоматическое обновление окна TXLib должно быть заблокировано с помощью <a class="el" href="a00080.htm#ga532fa8a55c4f3d4f94ff0fdceae732b2" title="Блокировка холста (контекста рисования).">txLock()</a> и после разблокировано с помощью <a class="el" href="a00080.htm#ga8fe4ec4c66cb69ce337747fe65dd0cc6" title="Разблокировка холста">txUnlock()</a>. <br/>
<br/>
</dd>
<dd>
HDC TXLib -- <b>не</b> оконный контекст рисования окна TXLib. TXLib реализует двойную буферизацию. Все рисовательные действия происходят со скрытым HDC, находящемся в памяти (его возвращает txGetDC()), и его содержимое периодически автоматически копируется на экран. Это иногда приводит к мерцанию. Автоматическое копирование можно выключить функцией <a class="el" href="a00081.htm#gae92e621aaed81f90e4d142356e38762a" title="Блокирует обновление изображения окна, во избежание мигания.">txBegin()</a> и обратно включить функцией <a class="el" href="a00081.htm#ga809dc04afd5348247846ee01ce9a06e6" title="Разблокирует обновление окна, заблокированное функцией txBegin().">txEnd()</a>, в этом случае содержимое окна можно перерисовать функциями <a class="el" href="a00081.htm#gadc7fd9cdc8c007693db7b6d7de794709" title="Обновляет изображение в окне TXLib вручную.">txRedrawWindow()</a> или <a class="el" href="a00081.htm#ga6c293f0b0f71efebdeeb0b56a97ba50c" title="Задерживает выполнение программы на определенное время.">txSleep()</a>. <br/>
<br/>
 Дополнительную информацию об автоматическом обновлении см. в функциях <a class="el" href="a00081.htm#gae92e621aaed81f90e4d142356e38762a" title="Блокирует обновление изображения окна, во избежание мигания.">txBegin()</a>, <a class="el" href="a00081.htm#ga809dc04afd5348247846ee01ce9a06e6" title="Разблокирует обновление окна, заблокированное функцией txBegin().">txEnd()</a>, <a class="el" href="a00081.htm#gaff3d9c60900531f438a19216485bdd41" title="Разрешает или запрещает автоматическое обновление изображения в окне.">txUpdateWindow()</a>, <a class="el" href="a00081.htm#gadc7fd9cdc8c007693db7b6d7de794709" title="Обновляет изображение в окне TXLib вручную.">txRedrawWindow()</a> и <a class="el" href="a00081.htm#ga6c293f0b0f71efebdeeb0b56a97ba50c" title="Задерживает выполнение программы на определенное время.">txSleep()</a>.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#ga7535f88c0fd15b4b49195060d38f2603" title="Создает аппаратно-независимый дополнительный холст (контекст рисования, Device Context, DC) в памяти с возможностью прямого доступа к нему как к массиву.">txCreateDIBSection()</a>, <a class="el" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC()</a>, <a class="el" href="a00081.htm#gafa31ebd8ed957c41713900a407497cf8" title="Возвращает дескриптор окна рисования">txWindow()</a>, <a class="el" href="a00081.htm#gae92e621aaed81f90e4d142356e38762a" title="Блокирует обновление изображения окна, во избежание мигания.">txBegin()</a>, <a class="el" href="a00081.htm#ga809dc04afd5348247846ee01ce9a06e6" title="Разблокирует обновление окна, заблокированное функцией txBegin().">txEnd()</a>, <a class="el" href="a00080.htm#ga532fa8a55c4f3d4f94ff0fdceae732b2" title="Блокировка холста (контекста рисования).">txLock()</a>, <a class="el" href="a00080.htm#ga8fe4ec4c66cb69ce337747fe65dd0cc6" title="Разблокировка холста">txUnlock()</a>, <a class="el" href="a00080.htm#gafdd807831b131ba38d5856b6ee4e8287" title="Вызов функции Win32 GDI с автоматической блокировкой и разблокировкой.">txGDI()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          Пример см. в файле PhongDemo.cpp из папки TX\Examples\Demo.
          Также см. пример в помощи по функции <a class="code" href="a00081.htm#ga7535f88c0fd15b4b49195060d38f2603" title="Создает аппаратно-независимый дополнительный холст (контекст рисования, Device Context, DC) в памяти с возможностью прямого доступа к нему как к массиву.">txCreateDIBSection</a>().
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gaa72c4849ac0c9bf6f95893f4265b9843"></a><!-- doxytag: member="TXLib.h::txSetDefaults" ref="gaa72c4849ac0c9bf6f95893f4265b9843" args="(HDC dc=txDC())" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txSetDefaults </td>
          <td>(</td>
          <td class="paramtype">HDC&#160;</td>
          <td class="paramname"><em>dc</em> = <code>txDC()</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Установка параметров рисования по умолчанию. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">dc</td><td><em>Дескриптор контекста рисования (холста) для установки параметров. Необязателен.</em></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна -- true, иначе -- false.</dd></dl>
<dl class="user"><dt><b>Параметры по умолчанию:</b></dt><dd><ul>
<li>Линии -- цвет белый (TX_WHITE), толщина 1</li>
<li>Заливка -- цвет белый (TX_WHITE)</li>
<li>Шрифт -- Системный, цвет белый (TX_WHITE)</li>
<li>Растровая операция -- копирование цвета (R2_COPYPEN)</li>
</ul>
</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, <a class="el" href="a00081.htm#gab6462db4dbcca4915d460036c6c8896d" title="Возвращает текущий цвет линий и текста.">txGetColor()</a>, <a class="el" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00081.htm#ga4d83b7e2d67f422cf703e15f2d7c4dfa" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00081.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a>, <a class="el" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a>, <a class="el" href="a00081.htm#ga6689b9a89add9c5eb5cf54a8c86539a4" title="Выбирает текущий шрифт, его размер и другие атрибуты.">txSelectFont()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00081.htm#gaa72c4849ac0c9bf6f95893f4265b9843" title="Установка параметров рисования по умолчанию.">txSetDefaults</a>();
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga3291ffa23a348c25985d780ab8f7088b"></a><!-- doxytag: member="TXLib.h::txOK" ref="ga3291ffa23a348c25985d780ab8f7088b" args="() tx_nodiscard" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txOK </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Проверка правильности работы библиотеки </p>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Состояние библиотеки: true -- библиотека в порядке, false -- не в порядке.</dd></dl>
<p>"Библиотека не в порядке" означает, что ее внутренние данные неверны. Самая простая причина - не открыто окно, однако могут быть и другие проблемы.</p>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#gafce21ce98474d5559f316b3d47cdbfab" title="Создание окна рисования">txCreateWindow()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00081.htm#gafce21ce98474d5559f316b3d47cdbfab" title="Создание окна рисования">txCreateWindow</a> (800, 600);
          <span class="keywordflow">if</span> (!<a class="code" href="a00081.htm#ga3291ffa23a348c25985d780ab8f7088b" title="Проверка правильности работы библиотеки">txOK</a>())
              {
              <a class="code" href="a00080.htm#gaf9be7d98f32c0737a2d7f30039a60c0a" title="Выводит сообщение в окне с помощью функции MessageBox.">txMessageBox</a> (<span class="stringliteral">&quot;Не смогла создать окно&quot;</span>, <span class="stringliteral">&quot;Извините&quot;</span>, MB_ICONSTOP);
              <span class="keywordflow">return</span>;
              }
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga11074386e81c0c8677f36c0a16ac0aa1"></a><!-- doxytag: member="TXLib.h::txGetExtent" ref="ga11074386e81c0c8677f36c0a16ac0aa1" args="(HDC dc=txDC()) tx_nodiscard" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">POINT txGetExtent </td>
          <td>(</td>
          <td class="paramtype">HDC&#160;</td>
          <td class="paramname"><em>dc</em> = <code>txDC()</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Возвращает размер окна, картинки или холста в виде структуры POINT. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">dc</td><td><em>Дескриптор контекста рисования (холста) с загруженной или созданной картинкой, размеры которого нужно определить. Необязателен. Если не указан или равен <a class="el" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC()</a>, возвращаются размеры окна TXLib.</em></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Размер окна, картинки или холста в виде структуры POINT, содержащей компоненты <code>x</code> и <code>y</code>.</dd></dl>
<dl class="note"><dt><b>Заметки:</b></dt><dd>Если окно не создано, возвращается размер экрана.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#gab79782d80f6c61587d02f0633aa2f198" title="Возвращает ширину окна или холста.">txGetExtentX()</a>, <a class="el" href="a00081.htm#gaa9bb7fd84e0b9f59c96be89d70c74321" title="Возвращает высоту окна или холста.">txGetExtentY()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00081.htm#gafce21ce98474d5559f316b3d47cdbfab" title="Создание окна рисования">txCreateWindow</a> (800, 600);

          HDC image = <a class="code" href="a00081.htm#gaec4970aac125bcf0d8a0b10a118222f7" title="Загружает из файла изображение в формате BMP. Делает это довольно медленно.">txLoadImage</a> (<span class="stringliteral">&quot;TX/Wizard/TX Application/VS/HTML/1033/TX Application_resize.bmp&quot;</span>);

          POINT center = { <a class="code" href="a00081.htm#gab79782d80f6c61587d02f0633aa2f198" title="Возвращает ширину окна или холста.">txGetExtentX</a>() / 2, <a class="code" href="a00081.htm#gaa9bb7fd84e0b9f59c96be89d70c74321" title="Возвращает высоту окна или холста.">txGetExtentY</a>() / 2 };
          POINT size   = <a class="code" href="a00081.htm#ga11074386e81c0c8677f36c0a16ac0aa1" title="Возвращает размер окна, картинки или холста в виде структуры POINT.">txGetExtent</a> (image);

          <a class="code" href="a00081.htm#ga6dfb121b4a1116f987baeb515713cbbf" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt</a> (center.x,            center.y,            image);  <span class="comment">// This is krivo</span>

          <a class="code" href="a00081.htm#ga6dfb121b4a1116f987baeb515713cbbf" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt</a> (center.x - size.x/2, center.y - size.y/2, image);  <span class="comment">// This is centered</span>

          <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025" title="Белый цвет.">TX_WHITE</a>, 3);
          <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a01fe8cb0f589868456167ee3a4652df8" title="Прозрачный цвет. Отключает рисование.">TX_TRANSPARENT</a>);
          <a class="code" href="a00081.htm#gaa14e9c2a46cf713efaa1f850074d8adc" title="Рисует окружность или круг.">txCircle</a> (center.x, center.y, hypot (size.x, size.y) / 2);
          <a class="code" href="a00081.htm#gaa14e9c2a46cf713efaa1f850074d8adc" title="Рисует окружность или круг.">txCircle</a> (center.x, center.y, 10);

          <a class="code" href="a00081.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC</a> (image);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gab79782d80f6c61587d02f0633aa2f198"></a><!-- doxytag: member="TXLib.h::txGetExtentX" ref="gab79782d80f6c61587d02f0633aa2f198" args="(HDC dc=txDC()) tx_nodiscard" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int txGetExtentX </td>
          <td>(</td>
          <td class="paramtype">HDC&#160;</td>
          <td class="paramname"><em>dc</em> = <code>txDC()</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Возвращает ширину окна или холста. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">dc</td><td><em>Дескриптор контекста рисования (холста), ширина которого возвращается. Необязателен. Если не указан или равен <a class="el" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC()</a>, возвращаются ширина окна TXLib.</em></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Ширина окна рисования.</dd></dl>
<dl class="note"><dt><b>Заметки:</b></dt><dd>Если окно не создано, возвращается ширина экрана.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#ga11074386e81c0c8677f36c0a16ac0aa1" title="Возвращает размер окна, картинки или холста в виде структуры POINT.">txGetExtent()</a>, <a class="el" href="a00081.htm#gaa9bb7fd84e0b9f59c96be89d70c74321" title="Возвращает высоту окна или холста.">txGetExtentY()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00081.htm#ga09938df8859ae8b62638a3af76ee6735" title="Устанавливает текущее выравнивание текста (влево/вправо/по центру).">txSetTextAlign</a> (TA_CENTER);
          <a class="code" href="a00081.htm#ga52e119361961d9eee33c176a3084e55d" title="Рисует текст.">txTextOut</a> (<a class="code" href="a00081.htm#gab79782d80f6c61587d02f0633aa2f198" title="Возвращает ширину окна или холста.">txGetExtentX</a>() / 2, 100, <span class="stringliteral">&quot;Oh, oh, you&#39;re in the [army]middle now&quot;</span>);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gaa9bb7fd84e0b9f59c96be89d70c74321"></a><!-- doxytag: member="TXLib.h::txGetExtentY" ref="gaa9bb7fd84e0b9f59c96be89d70c74321" args="(HDC dc=txDC()) tx_nodiscard" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int txGetExtentY </td>
          <td>(</td>
          <td class="paramtype">HDC&#160;</td>
          <td class="paramname"><em>dc</em> = <code>txDC()</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Возвращает высоту окна или холста. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">dc</td><td><em>Дескриптор контекста рисования (холста), высота которого возвращается. Необязателен. Если не указан или равен <a class="el" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC()</a>, возвращается высота окна TXLib.</em></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Высота окна рисования.</dd></dl>
<dl class="note"><dt><b>Заметки:</b></dt><dd>Если окно не создано, возвращается высота экрана.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#ga11074386e81c0c8677f36c0a16ac0aa1" title="Возвращает размер окна, картинки или холста в виде структуры POINT.">txGetExtent()</a>, <a class="el" href="a00081.htm#gab79782d80f6c61587d02f0633aa2f198" title="Возвращает ширину окна или холста.">txGetExtentX()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <span class="keywordtype">void</span> DrawHouse (<span class="keywordtype">int</span> height);
          ...
          DrawHouse (<a class="code" href="a00081.htm#gaa9bb7fd84e0b9f59c96be89d70c74321" title="Возвращает высоту окна или холста.">txGetExtentY</a>() / 2);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gafa31ebd8ed957c41713900a407497cf8"></a><!-- doxytag: member="TXLib.h::txWindow" ref="gafa31ebd8ed957c41713900a407497cf8" args="() tx_nodiscard" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">HWND txWindow </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Возвращает дескриптор окна рисования </p>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Дескриптор (системный номер, handler) окна холста.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC()</a>, <a class="el" href="a00081.htm#ga3a8ec79acc0dcbcc04bff3aecc235b4e" title="Возвращает буфер памяти, связанный с холстом (HDC) TXLib.">txVideoMemory()</a>, <a class="el" href="a00080.htm#ga532fa8a55c4f3d4f94ff0fdceae732b2" title="Блокировка холста (контекста рисования).">txLock()</a>, <a class="el" href="a00080.htm#ga8fe4ec4c66cb69ce337747fe65dd0cc6" title="Разблокировка холста">txUnlock()</a>, <a class="el" href="a00080.htm#gafdd807831b131ba38d5856b6ee4e8287" title="Вызов функции Win32 GDI с автоматической блокировкой и разблокировкой.">txGDI()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          SetWindowText (<a class="code" href="a00081.htm#gafa31ebd8ed957c41713900a407497cf8" title="Возвращает дескриптор окна рисования">txWindow</a>(), <span class="stringliteral">&quot;Новые заголовки -- теперь и в ваших окнах!&quot;</span>);
          <a class="code" href="a00080.htm#gaf9be7d98f32c0737a2d7f30039a60c0a" title="Выводит сообщение в окне с помощью функции MessageBox.">txMessageBox</a> (<span class="stringliteral">&quot;Распишитесь&quot;</span>, <span class="stringliteral">&quot;Получите&quot;</span>, MB_ICONINFORMATION);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga5e96023070a7e836d57ff9f4fac8a341"></a><!-- doxytag: member="TXLib.h::RGB" ref="ga5e96023070a7e836d57ff9f4fac8a341" args="(int red, int green, int blue)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">COLORREF RGB </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>red</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>green</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>blue</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Создает (смешивает) цвет из трех базовых цветов (компонент). </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">red</td><td>Количество красного цвета в интервале [0; 255]. </td></tr>
    <tr><td class="paramname">green</td><td>Количество зеленого цвета в интервале [0; 255]. </td></tr>
    <tr><td class="paramname">blue</td><td>Количество синего цвета в интервале [0; 255].</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Созданный цвет в формате COLORREF.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, <a class="el" href="a00081.htm#gab6462db4dbcca4915d460036c6c8896d" title="Возвращает текущий цвет линий и текста.">txGetColor()</a>, <a class="el" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00081.htm#ga4d83b7e2d67f422cf703e15f2d7c4dfa" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00081.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a>, <a class="el" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a>, <a class="el" href="a00081.htm#gac2b196b6826392229fa209e01817f941" title="Извлекает цветовую компоненту (цветовой канал) из смешанного цвета.">txExtractColor()</a>, <a class="el" href="a00081.htm#ga1350174ec2a2c83182437f04c88c2d95" title="Преобразует цвет из формата RGB в формат HSL.">txRGB2HSL()</a>, <a class="el" href="a00081.htm#ga6d5e95c1f234d32b8859826859127244" title="Преобразует цвет из формата HSL в формат RGB.">txHSL2RGB()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (<a class="code" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (255, 128, 0));                <span class="comment">// Красный + половина зеленого = оранжевый</span>

          <span class="keywordtype">int</span> red = 20, green = 200, blue = 20;
          COLORREF color = <a class="code" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (red, green, blue);
          <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (color);

          <span class="keyword">const</span> COLORREF SKY_COLOR = <a class="code" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (0, 128, 255);  <span class="comment">// Создаем константу для нового цвета</span>

          ...
          <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (SKY_COLOR);                    <span class="comment">// Используем ее</span>
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga66facc5848748507d3ea48c75b33ba23"></a><!-- doxytag: member="TXLib.h::txSetColor" ref="ga66facc5848748507d3ea48c75b33ba23" args="(COLORREF color, double thickness=1, HDC dc=txDC())" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">HPEN txSetColor </td>
          <td>(</td>
          <td class="paramtype">COLORREF&#160;</td>
          <td class="paramname"><em>color</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>thickness</em> = <code>1</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HDC&#160;</td>
          <td class="paramname"><em>dc</em> = <code>txDC()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Устанавливает текущий цвет и толщину линий, цвет текста. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">color</td><td>Цвет линий и текста, см. txColors, <a class="el" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a>. </td></tr>
    <tr><td class="paramname">thickness</td><td><em>Толщина линий. Необязательна. Если не указана, то 1 пиксель.</em> </td></tr>
    <tr><td class="paramname">dc</td><td><em>Дескриптор контекста рисования (холста) для установки цвета. Необязателен.</em></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Перо, созданное при установке цвета. При ошибке возвращается NULL.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00081.htm#gab6462db4dbcca4915d460036c6c8896d" title="Возвращает текущий цвет линий и текста.">txGetColor()</a>, <a class="el" href="a00081.htm#ga4d83b7e2d67f422cf703e15f2d7c4dfa" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00081.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a>, <a class="el" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a2331cdb79541487869e7c2445a2eb5f0" title="Желтый цвет.">TX_YELLOW</a>);             <span class="comment">// Цвет линий будет желтым</span>
          <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (<a class="code" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (255, 128, 0), 5);  <span class="comment">// Оранжевые линии толщиной 5 пикселей</span>

          <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (<a class="code" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (255, 255, 0));     <span class="comment">// Желтый = Красный + зеленый (другой способ указания цвета)</span>
          <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (<a class="code" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (255, 128, 64));    <span class="comment">// Нечто оранжевое</span>
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gab6462db4dbcca4915d460036c6c8896d"></a><!-- doxytag: member="TXLib.h::txGetColor" ref="gab6462db4dbcca4915d460036c6c8896d" args="(HDC dc=txDC()) tx_nodiscard" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">COLORREF txGetColor </td>
          <td>(</td>
          <td class="paramtype">HDC&#160;</td>
          <td class="paramname"><em>dc</em> = <code>txDC()</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Возвращает текущий цвет линий и текста. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">dc</td><td><em>Дескриптор контекста рисования (холста) для возврата цвета. Необязателен.</em></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Текущий цвет линий и текста, см. txColors, <a class="el" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a>.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, <a class="el" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00081.htm#ga4d83b7e2d67f422cf703e15f2d7c4dfa" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00081.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a>, <a class="el" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          COLORREF color = <a class="code" href="a00081.htm#gab6462db4dbcca4915d460036c6c8896d" title="Возвращает текущий цвет линий и текста.">txGetColor</a>();
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gad21ad5660a5423f31c2c8e77329758b2"></a><!-- doxytag: member="TXLib.h::txSetFillColor" ref="gad21ad5660a5423f31c2c8e77329758b2" args="(COLORREF color, HDC dc=txDC())" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">HBRUSH txSetFillColor </td>
          <td>(</td>
          <td class="paramtype">COLORREF&#160;</td>
          <td class="paramname"><em>color</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HDC&#160;</td>
          <td class="paramname"><em>dc</em> = <code>txDC()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Устанавливает текущий цвет заполнения фигур. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">color</td><td>Цвет заполнения, см. txColors, <a class="el" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a>. </td></tr>
    <tr><td class="paramname">dc</td><td><em>Дескриптор контекста рисования (холста) для установки цвета. Необязателен.</em></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Кисть, созданная при установке цвета. При ошибке возвращается NULL.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, <a class="el" href="a00081.htm#ga4d83b7e2d67f422cf703e15f2d7c4dfa" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00081.htm#gab6462db4dbcca4915d460036c6c8896d" title="Возвращает текущий цвет линий и текста.">txGetColor()</a>, <a class="el" href="a00081.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a>, <a class="el" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5ae45f1e493cce7ef326f8bd9e8c684c6b" title="Светло-зеленый цвет.">TX_LIGHTGREEN</a>);
          <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (255, 128, 0));
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga4d83b7e2d67f422cf703e15f2d7c4dfa"></a><!-- doxytag: member="TXLib.h::txGetFillColor" ref="ga4d83b7e2d67f422cf703e15f2d7c4dfa" args="(HDC dc=txDC()) tx_nodiscard" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">COLORREF txGetFillColor </td>
          <td>(</td>
          <td class="paramtype">HDC&#160;</td>
          <td class="paramname"><em>dc</em> = <code>txDC()</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Возвращает текущий цвет заполнения фигур. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">dc</td><td><em>Дескриптор контекста рисования (холста) для возврата цвета. Необязателен.</em></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Текущий цвет заполнения фигур, см. txColors, <a class="el" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a>.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, <a class="el" href="a00081.htm#gab6462db4dbcca4915d460036c6c8896d" title="Возвращает текущий цвет линий и текста.">txGetColor()</a>, <a class="el" href="a00081.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a>, <a class="el" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          COLORREF color = <a class="code" href="a00081.htm#ga4d83b7e2d67f422cf703e15f2d7c4dfa" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor</a>();
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gac2b196b6826392229fa209e01817f941"></a><!-- doxytag: member="TXLib.h::txExtractColor" ref="gac2b196b6826392229fa209e01817f941" args="(COLORREF color, COLORREF component) tx_nodiscard" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned txExtractColor </td>
          <td>(</td>
          <td class="paramtype">COLORREF&#160;</td>
          <td class="paramname"><em>color</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">COLORREF&#160;</td>
          <td class="paramname"><em>component</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Извлекает цветовую компоненту (цветовой канал) из смешанного цвета. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">color</td><td>Смешанный цвет. </td></tr>
    <tr><td class="paramname">component</td><td>Извлекаемая компонента, см. txColors.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Цветовая компонента, см. txColors.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, <a class="el" href="a00081.htm#gab6462db4dbcca4915d460036c6c8896d" title="Возвращает текущий цвет линий и текста.">txGetColor()</a>, <a class="el" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00081.htm#ga4d83b7e2d67f422cf703e15f2d7c4dfa" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00081.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a>, <a class="el" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a>, <a class="el" href="a00081.htm#gac2b196b6826392229fa209e01817f941" title="Извлекает цветовую компоненту (цветовой канал) из смешанного цвета.">txExtractColor()</a>, <a class="el" href="a00081.htm#ga1350174ec2a2c83182437f04c88c2d95" title="Преобразует цвет из формата RGB в формат HSL.">txRGB2HSL()</a>, <a class="el" href="a00081.htm#ga6d5e95c1f234d32b8859826859127244" title="Преобразует цвет из формата HSL в формат RGB.">txHSL2RGB()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <span class="keywordtype">int</span> red       = <a class="code" href="a00081.htm#gac2b196b6826392229fa209e01817f941" title="Извлекает цветовую компоненту (цветовой канал) из смешанного цвета.">txExtractColor</a> (color, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a342ad901a39ab4b40f091f6699b64927" title="Темно-красный цвет. Слишком темный.">TX_RED</a>);
          <span class="keywordtype">int</span> lightness = <a class="code" href="a00081.htm#gac2b196b6826392229fa209e01817f941" title="Извлекает цветовую компоненту (цветовой канал) из смешанного цвета.">txExtractColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aac23422a0b96bfc917484ba1fb0990de" title="Темно-синий цвет. Плохо виден.">TX_BLUE</a>, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5acc91e717a52d475213f0201bfae5341e" title="Светлота цвета в модели HSL.">TX_LIGHTNESS</a>);

          Другие примеры см. в функциях AppearText(), AppearEarth() Примера 5 (&quot;Циклы&quot;).
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga1350174ec2a2c83182437f04c88c2d95"></a><!-- doxytag: member="TXLib.h::txRGB2HSL" ref="ga1350174ec2a2c83182437f04c88c2d95" args="(COLORREF rgbColor) tx_nodiscard" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">COLORREF txRGB2HSL </td>
          <td>(</td>
          <td class="paramtype">COLORREF&#160;</td>
          <td class="paramname"><em>rgbColor</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Преобразует цвет из формата RGB в формат HSL. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">rgbColor</td><td>Преобразуемый цвет в формате <small>&#160;</small><span class="s"> ЕГЭ </span><small>&#160;</small> RGB.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Созданный цвет в виде COLORREF.</dd></dl>
<p>Формат <b>RGB</b> определяется как</p>
<ul>
<li>Красная компонента цвета (Red), от 0 до 255.</li>
<li>Зеленая компонента цвета (Green), от 0 до 255.</li>
<li>Синяя компонента цвета (Blue), от 0 до 255.</li>
</ul>
<p>Формат <b>HSL</b> определяется как</p>
<ul>
<li>Цветовой тон (Hue), от 0 до 255 <b>(не до 360).</b></li>
<li>Насыщенность (Saturation), от 0 до 255.</li>
<li>Светлота (Lightness), от 0 до 255.</li>
</ul>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, <a class="el" href="a00081.htm#gab6462db4dbcca4915d460036c6c8896d" title="Возвращает текущий цвет линий и текста.">txGetColor()</a>, <a class="el" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00081.htm#ga4d83b7e2d67f422cf703e15f2d7c4dfa" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00081.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a>, <a class="el" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a>, <a class="el" href="a00081.htm#gac2b196b6826392229fa209e01817f941" title="Извлекает цветовую компоненту (цветовой канал) из смешанного цвета.">txExtractColor()</a>, <a class="el" href="a00081.htm#ga1350174ec2a2c83182437f04c88c2d95" title="Преобразует цвет из формата RGB в формат HSL.">txRGB2HSL()</a>, <a class="el" href="a00081.htm#ga6d5e95c1f234d32b8859826859127244" title="Преобразует цвет из формата HSL в формат RGB.">txHSL2RGB()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          COLORREF hslColor = <a class="code" href="a00081.htm#ga1350174ec2a2c83182437f04c88c2d95" title="Преобразует цвет из формата RGB в формат HSL.">txRGB2HSL</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a342ad901a39ab4b40f091f6699b64927" title="Темно-красный цвет. Слишком темный.">TX_RED</a>);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga6d5e95c1f234d32b8859826859127244"></a><!-- doxytag: member="TXLib.h::txHSL2RGB" ref="ga6d5e95c1f234d32b8859826859127244" args="(COLORREF hslColor) tx_nodiscard" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">COLORREF txHSL2RGB </td>
          <td>(</td>
          <td class="paramtype">COLORREF&#160;</td>
          <td class="paramname"><em>hslColor</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Преобразует цвет из формата HSL в формат RGB. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">hslColor</td><td>Преобразуемый цвет в формате HSL.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Созданный цвет в виде COLORREF.</dd></dl>
<p>Формат <b>RGB</b> определяется как</p>
<ul>
<li>Красная компонента цвета (Red), от 0 до 255.</li>
<li>Зеленая компонента цвета (Green), от 0 до 255.</li>
<li>Синяя компонента цвета (Blue), от 0 до 255.</li>
</ul>
<p>Формат <b>HSL</b> определяется как</p>
<ul>
<li>Цветовой тон (Hue), от 0 до 255 <b>(не до 360).</b></li>
<li>Насыщенность (Saturation), от 0 до 255.</li>
<li>Светлота (Lightness), от 0 до 255.</li>
</ul>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, <a class="el" href="a00081.htm#gab6462db4dbcca4915d460036c6c8896d" title="Возвращает текущий цвет линий и текста.">txGetColor()</a>, <a class="el" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00081.htm#ga4d83b7e2d67f422cf703e15f2d7c4dfa" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00081.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a>, <a class="el" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a>, <a class="el" href="a00081.htm#gac2b196b6826392229fa209e01817f941" title="Извлекает цветовую компоненту (цветовой канал) из смешанного цвета.">txExtractColor()</a>, <a class="el" href="a00081.htm#ga1350174ec2a2c83182437f04c88c2d95" title="Преобразует цвет из формата RGB в формат HSL.">txRGB2HSL()</a>, <a class="el" href="a00081.htm#ga6d5e95c1f234d32b8859826859127244" title="Преобразует цвет из формата HSL в формат RGB.">txHSL2RGB()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <span class="keywordtype">int</span> hue = 10, saturation = 128, lightness = 128;
          COLORREF hslColor = <a class="code" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (hue, saturation, lightness);
          <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (<a class="code" href="a00081.htm#ga6d5e95c1f234d32b8859826859127244" title="Преобразует цвет из формата HSL в формат RGB.">txHSL2RGB</a> (hslColor));
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga78e83baeb6a02d5fa33dd8b062e513d9"></a><!-- doxytag: member="TXLib.h::txClear" ref="ga78e83baeb6a02d5fa33dd8b062e513d9" args="(HDC dc=txDC())" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txClear </td>
          <td>(</td>
          <td class="paramtype">HDC&#160;</td>
          <td class="paramname"><em>dc</em> = <code>txDC()</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Стирает холст текущим цветом заполнения. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">dc</td><td><em>Дескриптор контекста рисования (холста) для стирания. Необязателен.</em></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна -- true, иначе -- false.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00081.htm#ga4d83b7e2d67f422cf703e15f2d7c4dfa" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00081.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a>, <a class="el" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aac23422a0b96bfc917484ba1fb0990de" title="Темно-синий цвет. Плохо виден.">TX_BLUE</a>);  <span class="comment">// Кто-то хотел синий фон?</span>
          <a class="code" href="a00081.htm#ga78e83baeb6a02d5fa33dd8b062e513d9" title="Стирает холст текущим цветом заполнения.">txClear</a>();
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gafafd861ab7dc599b2e68b258b6727c85"></a><!-- doxytag: member="TXLib.h::txSetPixel" ref="gafafd861ab7dc599b2e68b258b6727c85" args="(double x, double y, COLORREF color, HDC dc=txDC())" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txSetPixel </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">COLORREF&#160;</td>
          <td class="paramname"><em>color</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HDC&#160;</td>
          <td class="paramname"><em>dc</em> = <code>txDC()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Рисует пиксель (точку на экране). </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>X-координата точки. </td></tr>
    <tr><td class="paramname">y</td><td>Y-координата точки. </td></tr>
    <tr><td class="paramname">color</td><td>Цвет точки, см. txColors, <a class="el" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a>. </td></tr>
    <tr><td class="paramname">dc</td><td><em>Дескриптор контекста рисования (холста) для рисования. Необязателен.</em></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна -- true, иначе -- false.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#ga90daedc95ac28938003edb5b50479542" title="Возвращает текущий цвет точки (пикселя) на экране.">txGetPixel()</a>, <a class="el" href="a00081.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a>, <a class="el" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a>, <a class="el" href="a00081.htm#ga3a8ec79acc0dcbcc04bff3aecc235b4e" title="Возвращает буфер памяти, связанный с холстом (HDC) TXLib.">txVideoMemory()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00081.htm#gafafd861ab7dc599b2e68b258b6727c85" title="Рисует пиксель (точку на экране).">txSetPixel</a> (100, 100, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a1c1e8dec8618fe54eee9e569a828a504" title="Светло-красный цвет. Не самого лучшего оттенка.">TX_LIGHTRED</a>);  <span class="comment">// Красная точка! http://www.google.ru/search?q=коты+и+красная+точка</span>

          <a class="code" href="a00081.htm#gafafd861ab7dc599b2e68b258b6727c85" title="Рисует пиксель (точку на экране).">txSetPixel</a> (100, 100, <a class="code" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (255, 128, 0));
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga90daedc95ac28938003edb5b50479542"></a><!-- doxytag: member="TXLib.h::txGetPixel" ref="ga90daedc95ac28938003edb5b50479542" args="(double x, double y, HDC dc=txDC()) tx_nodiscard" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">COLORREF txGetPixel </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HDC&#160;</td>
          <td class="paramname"><em>dc</em> = <code>txDC()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Возвращает текущий цвет точки (пикселя) на экране. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>X-координата точки. </td></tr>
    <tr><td class="paramname">y</td><td>Y-координата точки. </td></tr>
    <tr><td class="paramname">dc</td><td><em>Дескриптор контекста рисования (холста) для возврата цвета. Необязателен.</em></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Текущий цвет пикселя, см. txColors, <a class="el" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a>.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#gafafd861ab7dc599b2e68b258b6727c85" title="Рисует пиксель (точку на экране).">txSetPixel()</a>, <a class="el" href="a00081.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a>, <a class="el" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a>, <a class="el" href="a00081.htm#ga3a8ec79acc0dcbcc04bff3aecc235b4e" title="Возвращает буфер памяти, связанный с холстом (HDC) TXLib.">txVideoMemory()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          COLORREF color = <a class="code" href="a00081.htm#ga90daedc95ac28938003edb5b50479542" title="Возвращает текущий цвет точки (пикселя) на экране.">txGetPixel</a> (100, 200);

          <span class="keywordflow">if</span> (<a class="code" href="a00081.htm#ga90daedc95ac28938003edb5b50479542" title="Возвращает текущий цвет точки (пикселя) на экране.">txGetPixel</a> (x, y) == <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a342ad901a39ab4b40f091f6699b64927" title="Темно-красный цвет. Слишком темный.">TX_RED</a>)
              CarCrash (x, y);     <span class="comment">// Mess with the red -- die like the rest</span>
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gaaee38df6f38b6f1729b9db1c4ac23e65"></a><!-- doxytag: member="TXLib.h::txLine" ref="gaaee38df6f38b6f1729b9db1c4ac23e65" args="(double x0, double y0, double x1, double y1, HDC dc=txDC())" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txLine </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HDC&#160;</td>
          <td class="paramname"><em>dc</em> = <code>txDC()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Рисует линию. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">x0</td><td>X-координата начальной точки. </td></tr>
    <tr><td class="paramname">y0</td><td>Y-координата начальной точки. </td></tr>
    <tr><td class="paramname">x1</td><td>X-координата конечной точки. </td></tr>
    <tr><td class="paramname">y1</td><td>Y-координата конечной точки. </td></tr>
    <tr><td class="paramname">dc</td><td><em>Дескриптор контекста рисования (холста) для рисования линии. Необязателен.</em></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна -- true, иначе -- false.</dd></dl>
<p>Цвет и толщина линии задается функцией <a class="el" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>.</p>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, <a class="el" href="a00081.htm#gab6462db4dbcca4915d460036c6c8896d" title="Возвращает текущий цвет линий и текста.">txGetColor()</a>, <a class="el" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00081.htm#ga4d83b7e2d67f422cf703e15f2d7c4dfa" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00081.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a>, <a class="el" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a>, <a class="el" href="a00081.htm#gaaee38df6f38b6f1729b9db1c4ac23e65" title="Рисует линию.">txLine()</a>, <a class="el" href="a00081.htm#ga18a0418f3c06463e958077cddf2a4864" title="Рисует прямоугольник.">txRectangle()</a>, <a class="el" href="a00081.htm#gacbbb638439ad7ba88804178516019fb1" title="Рисует ломаную линию или многоугольник.">txPolygon()</a>, <a class="el" href="a00081.htm#gaaf82e7c5a0fd06548f42c757f73d3dae" title="Рисует эллипс.">txEllipse()</a>, <a class="el" href="a00081.htm#gaa14e9c2a46cf713efaa1f850074d8adc" title="Рисует окружность или круг.">txCircle()</a>, <a class="el" href="a00081.htm#ga5e1e4cc39cc18962bb480c4adfa1344d" title="Рисует дугу эллипса.">txArc()</a>, <a class="el" href="a00081.htm#ga8e06e3abcb6b3724d332feb8aa83a8df" title="Рисует сектор эллипса.">txPie()</a>, <a class="el" href="a00081.htm#ga59468ca0fd4c182ac0a03573267eb3e9" title="Рисует хорду эллипса.">txChord()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00081.htm#gaaee38df6f38b6f1729b9db1c4ac23e65" title="Рисует линию.">txLine</a> (10, 50, 100, 500);  <span class="comment">// Правда бедный примерчик, да?</span>
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga18a0418f3c06463e958077cddf2a4864"></a><!-- doxytag: member="TXLib.h::txRectangle" ref="ga18a0418f3c06463e958077cddf2a4864" args="(double x0, double y0, double x1, double y1, HDC dc=txDC())" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txRectangle </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HDC&#160;</td>
          <td class="paramname"><em>dc</em> = <code>txDC()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Рисует прямоугольник. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">x0</td><td>X-координата верхнего левого угла. </td></tr>
    <tr><td class="paramname">y0</td><td>Y-координата верхнего левого угла. </td></tr>
    <tr><td class="paramname">x1</td><td>X-координата нижнего правого угла. </td></tr>
    <tr><td class="paramname">y1</td><td>Y-координата нижнего правого угла. </td></tr>
    <tr><td class="paramname">dc</td><td><em>Дескриптор контекста рисования (холста) для рисования прямоугольника. Необязателен.</em></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна -- true, иначе -- false.</dd></dl>
<p>Цвет и толщина линий задается функцией <a class="el" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, цвет заполнения -- <a class="el" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>.</p>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, <a class="el" href="a00081.htm#gab6462db4dbcca4915d460036c6c8896d" title="Возвращает текущий цвет линий и текста.">txGetColor()</a>, <a class="el" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00081.htm#ga4d83b7e2d67f422cf703e15f2d7c4dfa" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00081.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a>, <a class="el" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a>, <a class="el" href="a00081.htm#gaaee38df6f38b6f1729b9db1c4ac23e65" title="Рисует линию.">txLine()</a>, <a class="el" href="a00081.htm#ga18a0418f3c06463e958077cddf2a4864" title="Рисует прямоугольник.">txRectangle()</a>, <a class="el" href="a00081.htm#gacbbb638439ad7ba88804178516019fb1" title="Рисует ломаную линию или многоугольник.">txPolygon()</a>, <a class="el" href="a00081.htm#gaaf82e7c5a0fd06548f42c757f73d3dae" title="Рисует эллипс.">txEllipse()</a>, <a class="el" href="a00081.htm#gaa14e9c2a46cf713efaa1f850074d8adc" title="Рисует окружность или круг.">txCircle()</a>, <a class="el" href="a00081.htm#ga5e1e4cc39cc18962bb480c4adfa1344d" title="Рисует дугу эллипса.">txArc()</a>, <a class="el" href="a00081.htm#ga8e06e3abcb6b3724d332feb8aa83a8df" title="Рисует сектор эллипса.">txPie()</a>, <a class="el" href="a00081.htm#ga59468ca0fd4c182ac0a03573267eb3e9" title="Рисует хорду эллипса.">txChord()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00081.htm#ga18a0418f3c06463e958077cddf2a4864" title="Рисует прямоугольник.">txRectangle</a> (100, 200, 400, 500);

          Win32::RoundRect (<a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), 100, 200, 400, 500, 30, 30);  <span class="comment">// И такое есть. Погуглите &quot;RoundRect function&quot;.</span>
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gacbbb638439ad7ba88804178516019fb1"></a><!-- doxytag: member="TXLib.h::txPolygon" ref="gacbbb638439ad7ba88804178516019fb1" args="(const POINT points[], int numPoints, HDC dc=txDC())" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txPolygon </td>
          <td>(</td>
          <td class="paramtype">const POINT&#160;</td>
          <td class="paramname"><em>points</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>numPoints</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HDC&#160;</td>
          <td class="paramname"><em>dc</em> = <code>txDC()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Рисует ломаную линию или многоугольник. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">points</td><td>Массив структур POINT с координатами точек. </td></tr>
    <tr><td class="paramname">numPoints</td><td>Количество точек в массиве. </td></tr>
    <tr><td class="paramname">dc</td><td><em>Дескриптор контекста рисования (холста) для рисования. Необязателен.</em></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна -- true, иначе -- false.</dd></dl>
<p>Цвет и толщина линий задается функцией <a class="el" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, цвет заполнения -- <a class="el" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>. Если нужно нарисовать ломаную линию, а не многоугольник, используйте прозрачный цвет заполнения (TX_TRANSPARENT).</p>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, <a class="el" href="a00081.htm#gab6462db4dbcca4915d460036c6c8896d" title="Возвращает текущий цвет линий и текста.">txGetColor()</a>, <a class="el" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00081.htm#ga4d83b7e2d67f422cf703e15f2d7c4dfa" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00081.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a>, <a class="el" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a>, <a class="el" href="a00081.htm#gaaee38df6f38b6f1729b9db1c4ac23e65" title="Рисует линию.">txLine()</a>, <a class="el" href="a00081.htm#ga18a0418f3c06463e958077cddf2a4864" title="Рисует прямоугольник.">txRectangle()</a>, <a class="el" href="a00081.htm#gacbbb638439ad7ba88804178516019fb1" title="Рисует ломаную линию или многоугольник.">txPolygon()</a>, <a class="el" href="a00081.htm#gaaf82e7c5a0fd06548f42c757f73d3dae" title="Рисует эллипс.">txEllipse()</a>, <a class="el" href="a00081.htm#gaa14e9c2a46cf713efaa1f850074d8adc" title="Рисует окружность или круг.">txCircle()</a>, <a class="el" href="a00081.htm#ga5e1e4cc39cc18962bb480c4adfa1344d" title="Рисует дугу эллипса.">txArc()</a>, <a class="el" href="a00081.htm#ga8e06e3abcb6b3724d332feb8aa83a8df" title="Рисует сектор эллипса.">txPie()</a>, <a class="el" href="a00081.htm#ga59468ca0fd4c182ac0a03573267eb3e9" title="Рисует хорду эллипса.">txChord()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          POINT star[5] = {{150, 300}, {200, 100}, {250, 300}, {100, 200}, {300, 200}};
          <a class="code" href="a00081.htm#gacbbb638439ad7ba88804178516019fb1" title="Рисует ломаную линию или многоугольник.">txPolygon</a> (star, 5);  <span class="comment">// Я кривая звездочка</span>
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gaaf82e7c5a0fd06548f42c757f73d3dae"></a><!-- doxytag: member="TXLib.h::txEllipse" ref="gaaf82e7c5a0fd06548f42c757f73d3dae" args="(double x0, double y0, double x1, double y1, HDC dc=txDC())" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txEllipse </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HDC&#160;</td>
          <td class="paramname"><em>dc</em> = <code>txDC()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Рисует эллипс. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">x0</td><td>X-координата верхнего левого угла прямоугольника, описанного вокруг эллипса. </td></tr>
    <tr><td class="paramname">y0</td><td>Y-координата верхнего левого угла описанного прямоугольника. </td></tr>
    <tr><td class="paramname">x1</td><td>X-координата нижнего правого угла описанного прямоугольника. </td></tr>
    <tr><td class="paramname">y1</td><td>Y-координата нижнего правого угла описанного прямоугольника. </td></tr>
    <tr><td class="paramname">dc</td><td><em>Дескриптор контекста рисования (холста) для рисования. Необязателен.</em></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна -- true, иначе -- false.</dd></dl>
<p>Цвет и толщина линий задается функцией <a class="el" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, цвет заполнения -- <a class="el" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>.</p>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, <a class="el" href="a00081.htm#gab6462db4dbcca4915d460036c6c8896d" title="Возвращает текущий цвет линий и текста.">txGetColor()</a>, <a class="el" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00081.htm#ga4d83b7e2d67f422cf703e15f2d7c4dfa" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00081.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a>, <a class="el" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a>, <a class="el" href="a00081.htm#gaaee38df6f38b6f1729b9db1c4ac23e65" title="Рисует линию.">txLine()</a>, <a class="el" href="a00081.htm#ga18a0418f3c06463e958077cddf2a4864" title="Рисует прямоугольник.">txRectangle()</a>, <a class="el" href="a00081.htm#gacbbb638439ad7ba88804178516019fb1" title="Рисует ломаную линию или многоугольник.">txPolygon()</a>, <a class="el" href="a00081.htm#gaaf82e7c5a0fd06548f42c757f73d3dae" title="Рисует эллипс.">txEllipse()</a>, <a class="el" href="a00081.htm#gaa14e9c2a46cf713efaa1f850074d8adc" title="Рисует окружность или круг.">txCircle()</a>, <a class="el" href="a00081.htm#ga5e1e4cc39cc18962bb480c4adfa1344d" title="Рисует дугу эллипса.">txArc()</a>, <a class="el" href="a00081.htm#ga8e06e3abcb6b3724d332feb8aa83a8df" title="Рисует сектор эллипса.">txPie()</a>, <a class="el" href="a00081.htm#ga59468ca0fd4c182ac0a03573267eb3e9" title="Рисует хорду эллипса.">txChord()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00081.htm#gaaf82e7c5a0fd06548f42c757f73d3dae" title="Рисует эллипс.">txEllipse</a> (100, 100, 300, 200);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gaa14e9c2a46cf713efaa1f850074d8adc"></a><!-- doxytag: member="TXLib.h::txCircle" ref="gaa14e9c2a46cf713efaa1f850074d8adc" args="(double x, double y, double r)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txCircle </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>r</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Рисует окружность или круг. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>X-координата центра. </td></tr>
    <tr><td class="paramname">y</td><td>Y-координата центра. </td></tr>
    <tr><td class="paramname">r</td><td>Радиус.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна -- true, иначе -- false.</dd></dl>
<p>Цвет и толщина линий задается функцией <a class="el" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, цвет заполнения -- <a class="el" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>.</p>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, <a class="el" href="a00081.htm#gab6462db4dbcca4915d460036c6c8896d" title="Возвращает текущий цвет линий и текста.">txGetColor()</a>, <a class="el" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00081.htm#ga4d83b7e2d67f422cf703e15f2d7c4dfa" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00081.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a>, <a class="el" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a>, <a class="el" href="a00081.htm#gaaee38df6f38b6f1729b9db1c4ac23e65" title="Рисует линию.">txLine()</a>, <a class="el" href="a00081.htm#ga18a0418f3c06463e958077cddf2a4864" title="Рисует прямоугольник.">txRectangle()</a>, <a class="el" href="a00081.htm#gacbbb638439ad7ba88804178516019fb1" title="Рисует ломаную линию или многоугольник.">txPolygon()</a>, <a class="el" href="a00081.htm#gaaf82e7c5a0fd06548f42c757f73d3dae" title="Рисует эллипс.">txEllipse()</a>, <a class="el" href="a00081.htm#gaa14e9c2a46cf713efaa1f850074d8adc" title="Рисует окружность или круг.">txCircle()</a>, <a class="el" href="a00081.htm#ga5e1e4cc39cc18962bb480c4adfa1344d" title="Рисует дугу эллипса.">txArc()</a>, <a class="el" href="a00081.htm#ga8e06e3abcb6b3724d332feb8aa83a8df" title="Рисует сектор эллипса.">txPie()</a>, <a class="el" href="a00081.htm#ga59468ca0fd4c182ac0a03573267eb3e9" title="Рисует хорду эллипса.">txChord()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00081.htm#gaa14e9c2a46cf713efaa1f850074d8adc" title="Рисует окружность или круг.">txCircle</a> (100, 100, 10);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga5e1e4cc39cc18962bb480c4adfa1344d"></a><!-- doxytag: member="TXLib.h::txArc" ref="ga5e1e4cc39cc18962bb480c4adfa1344d" args="(double x0, double y0, double x1, double y1, double startAngle, double totalAngle, HDC dc=txDC())" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txArc </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>startAngle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>totalAngle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HDC&#160;</td>
          <td class="paramname"><em>dc</em> = <code>txDC()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Рисует дугу эллипса. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">x0</td><td>X-координата верхнего левого угла прямоугольника, описанного вокруг эллипса, содержащего дугу (см. txEllipse). </td></tr>
    <tr><td class="paramname">y0</td><td>Y-координата верхнего левого угла прямоугольника. </td></tr>
    <tr><td class="paramname">x1</td><td>X-координата нижнего правого угла прямоугольника. </td></tr>
    <tr><td class="paramname">y1</td><td>Y-координата нижнего правого угла прямоугольника. </td></tr>
    <tr><td class="paramname">startAngle</td><td>Угол между направлением оси OX и началом дуги (в градусах). </td></tr>
    <tr><td class="paramname">totalAngle</td><td>Величина дуги (в градусах). </td></tr>
    <tr><td class="paramname">dc</td><td><em>Дескриптор контекста рисования (холста) для рисования. Необязателен.</em></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна -- true, иначе -- false.</dd></dl>
<p>Цвет и толщина линий задается функцией <a class="el" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, цвет заполнения -- <a class="el" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>.</p>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, <a class="el" href="a00081.htm#gab6462db4dbcca4915d460036c6c8896d" title="Возвращает текущий цвет линий и текста.">txGetColor()</a>, <a class="el" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00081.htm#ga4d83b7e2d67f422cf703e15f2d7c4dfa" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00081.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a>, <a class="el" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a>, <a class="el" href="a00081.htm#gaaee38df6f38b6f1729b9db1c4ac23e65" title="Рисует линию.">txLine()</a>, <a class="el" href="a00081.htm#ga18a0418f3c06463e958077cddf2a4864" title="Рисует прямоугольник.">txRectangle()</a>, <a class="el" href="a00081.htm#gacbbb638439ad7ba88804178516019fb1" title="Рисует ломаную линию или многоугольник.">txPolygon()</a>, <a class="el" href="a00081.htm#gaaf82e7c5a0fd06548f42c757f73d3dae" title="Рисует эллипс.">txEllipse()</a>, <a class="el" href="a00081.htm#gaa14e9c2a46cf713efaa1f850074d8adc" title="Рисует окружность или круг.">txCircle()</a>, <a class="el" href="a00081.htm#ga5e1e4cc39cc18962bb480c4adfa1344d" title="Рисует дугу эллипса.">txArc()</a>, <a class="el" href="a00081.htm#ga8e06e3abcb6b3724d332feb8aa83a8df" title="Рисует сектор эллипса.">txPie()</a>, <a class="el" href="a00081.htm#ga59468ca0fd4c182ac0a03573267eb3e9" title="Рисует хорду эллипса.">txChord()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00081.htm#ga5e1e4cc39cc18962bb480c4adfa1344d" title="Рисует дугу эллипса.">txArc</a> (100, 100, 300, 200, 45, 270);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga8e06e3abcb6b3724d332feb8aa83a8df"></a><!-- doxytag: member="TXLib.h::txPie" ref="ga8e06e3abcb6b3724d332feb8aa83a8df" args="(double x0, double y0, double x1, double y1, double startAngle, double totalAngle, HDC dc=txDC())" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txPie </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>startAngle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>totalAngle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HDC&#160;</td>
          <td class="paramname"><em>dc</em> = <code>txDC()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Рисует сектор эллипса. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">x0</td><td>X-координата верхнего левого угла прямоугольника, описанного вокруг эллипса, содержащего дугу (см. txEllipse). </td></tr>
    <tr><td class="paramname">y0</td><td>Y-координата верхнего левого угла прямоугольника. </td></tr>
    <tr><td class="paramname">x1</td><td>X-координата нижнего правого угла прямоугольника. </td></tr>
    <tr><td class="paramname">y1</td><td>Y-координата нижнего правого угла прямоугольника. </td></tr>
    <tr><td class="paramname">startAngle</td><td>Угол между направлением оси OX и началом сектора (в градусах). </td></tr>
    <tr><td class="paramname">totalAngle</td><td>Величина сектора (в градусах). </td></tr>
    <tr><td class="paramname">dc</td><td><em>Дескриптор контекста рисования (холста) для рисования. Необязателен.</em></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна -- true, иначе -- false.</dd></dl>
<p>Цвет и толщина линий задается функцией <a class="el" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, цвет заполнения -- <a class="el" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>.</p>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, <a class="el" href="a00081.htm#gab6462db4dbcca4915d460036c6c8896d" title="Возвращает текущий цвет линий и текста.">txGetColor()</a>, <a class="el" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00081.htm#ga4d83b7e2d67f422cf703e15f2d7c4dfa" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00081.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a>, <a class="el" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a>, <a class="el" href="a00081.htm#gaaee38df6f38b6f1729b9db1c4ac23e65" title="Рисует линию.">txLine()</a>, <a class="el" href="a00081.htm#ga18a0418f3c06463e958077cddf2a4864" title="Рисует прямоугольник.">txRectangle()</a>, <a class="el" href="a00081.htm#gacbbb638439ad7ba88804178516019fb1" title="Рисует ломаную линию или многоугольник.">txPolygon()</a>, <a class="el" href="a00081.htm#gaaf82e7c5a0fd06548f42c757f73d3dae" title="Рисует эллипс.">txEllipse()</a>, <a class="el" href="a00081.htm#gaa14e9c2a46cf713efaa1f850074d8adc" title="Рисует окружность или круг.">txCircle()</a>, <a class="el" href="a00081.htm#ga5e1e4cc39cc18962bb480c4adfa1344d" title="Рисует дугу эллипса.">txArc()</a>, <a class="el" href="a00081.htm#ga8e06e3abcb6b3724d332feb8aa83a8df" title="Рисует сектор эллипса.">txPie()</a>, <a class="el" href="a00081.htm#ga59468ca0fd4c182ac0a03573267eb3e9" title="Рисует хорду эллипса.">txChord()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00081.htm#ga8e06e3abcb6b3724d332feb8aa83a8df" title="Рисует сектор эллипса.">txPie</a> (100, 100, 300, 200, 0, 180);  <span class="comment">// Enter Pacman</span>
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga59468ca0fd4c182ac0a03573267eb3e9"></a><!-- doxytag: member="TXLib.h::txChord" ref="ga59468ca0fd4c182ac0a03573267eb3e9" args="(double x0, double y0, double x1, double y1, double startAngle, double totalAngle, HDC dc=txDC())" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txChord </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>startAngle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>totalAngle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HDC&#160;</td>
          <td class="paramname"><em>dc</em> = <code>txDC()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Рисует хорду эллипса. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">x0</td><td>X-координата верхнего левого угла прямоугольника, описанного вокруг эллипса, содержащего дугу (см. txEllipse). </td></tr>
    <tr><td class="paramname">y0</td><td>Y-координата верхнего левого угла прямоугольника. </td></tr>
    <tr><td class="paramname">x1</td><td>X-координата нижнего правого угла прямоугольника. </td></tr>
    <tr><td class="paramname">y1</td><td>Y-координата нижнего правого угла прямоугольника. </td></tr>
    <tr><td class="paramname">startAngle</td><td>Угол между направлением оси OX и началом хорды (в градусах). </td></tr>
    <tr><td class="paramname">totalAngle</td><td>Величина хорды (в градусах). </td></tr>
    <tr><td class="paramname">dc</td><td><em>Дескриптор контекста рисования (холста) для рисования. Необязателен.</em></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна -- true, иначе -- false.</dd></dl>
<p>Цвет и толщина линий задается функцией <a class="el" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, цвет заполнения -- <a class="el" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>.</p>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, <a class="el" href="a00081.htm#gab6462db4dbcca4915d460036c6c8896d" title="Возвращает текущий цвет линий и текста.">txGetColor()</a>, <a class="el" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00081.htm#ga4d83b7e2d67f422cf703e15f2d7c4dfa" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00081.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a>, <a class="el" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a>, <a class="el" href="a00081.htm#gaaee38df6f38b6f1729b9db1c4ac23e65" title="Рисует линию.">txLine()</a>, <a class="el" href="a00081.htm#ga18a0418f3c06463e958077cddf2a4864" title="Рисует прямоугольник.">txRectangle()</a>, <a class="el" href="a00081.htm#gacbbb638439ad7ba88804178516019fb1" title="Рисует ломаную линию или многоугольник.">txPolygon()</a>, <a class="el" href="a00081.htm#gaaf82e7c5a0fd06548f42c757f73d3dae" title="Рисует эллипс.">txEllipse()</a>, <a class="el" href="a00081.htm#gaa14e9c2a46cf713efaa1f850074d8adc" title="Рисует окружность или круг.">txCircle()</a>, <a class="el" href="a00081.htm#ga5e1e4cc39cc18962bb480c4adfa1344d" title="Рисует дугу эллипса.">txArc()</a>, <a class="el" href="a00081.htm#ga8e06e3abcb6b3724d332feb8aa83a8df" title="Рисует сектор эллипса.">txPie()</a>, <a class="el" href="a00081.htm#ga59468ca0fd4c182ac0a03573267eb3e9" title="Рисует хорду эллипса.">txChord()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00081.htm#ga59468ca0fd4c182ac0a03573267eb3e9" title="Рисует хорду эллипса.">txChord</a> (100, 100, 300, 200, 45, 270);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga8adde0a20efa7597d8653653817353b2"></a><!-- doxytag: member="TXLib.h::txFloodFill" ref="ga8adde0a20efa7597d8653653817353b2" args="(double x, double y, COLORREF color=TX_TRANSPARENT, DWORD mode=FLOODFILLSURFACE, HDC dc=txDC())" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txFloodFill </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">COLORREF&#160;</td>
          <td class="paramname"><em>color</em> = <code>TX_TRANSPARENT</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD&#160;</td>
          <td class="paramname"><em>mode</em> = <code>FLOODFILLSURFACE</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HDC&#160;</td>
          <td class="paramname"><em>dc</em> = <code>txDC()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Заливает произвольный контур текущим цветом заполнения. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>X-координата точки начала заливки. </td></tr>
    <tr><td class="paramname">y</td><td>Y-координата точки начала заливки. </td></tr>
    <tr><td class="paramname">color</td><td><em>Цвет заливаемой области. Необязателен. Если не указан, то используется TX_TRANSPARENT -- автоопределение цвета.</em> </td></tr>
    <tr><td class="paramname">mode</td><td><em>Режим заливки. Необязателен. Если не указан, то используется FLOODFILLSURFACE -- заливка однородного фона.</em> </td></tr>
    <tr><td class="paramname">dc</td><td><em>Дескриптор контекста рисования (холста) для рисования. Необязателен.</em></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна -- true, иначе -- false.</dd></dl>
<p>Цвет заполнения задается функцией <a class="el" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>. Не рекомендуется для применения, так как работает довольно медленно. Лучше Используйте <a class="el" href="a00081.htm#gacbbb638439ad7ba88804178516019fb1" title="Рисует ломаную линию или многоугольник.">txPolygon()</a>.</p>
<dl>
<dt>Режимы заливки: </dt>
<dd><table  border="0">
<tr valign="top">
<td>FLOODFILLSURFACE &#160;&#160;</td><td>-- Заливать область, указанную цветом color. </td></tr>
<tr valign="top">
<td>FLOODFILLBORDER &#160;&#160;</td><td>-- Заливать до границы, указанной цветом color. </td></tr>
</table>
</dd>
</dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00081.htm#ga4d83b7e2d67f422cf703e15f2d7c4dfa" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00081.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a>, <a class="el" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a>, <a class="el" href="a00081.htm#gaaee38df6f38b6f1729b9db1c4ac23e65" title="Рисует линию.">txLine()</a>, <a class="el" href="a00081.htm#ga18a0418f3c06463e958077cddf2a4864" title="Рисует прямоугольник.">txRectangle()</a>, <a class="el" href="a00081.htm#gacbbb638439ad7ba88804178516019fb1" title="Рисует ломаную линию или многоугольник.">txPolygon()</a>, <a class="el" href="a00081.htm#gaaf82e7c5a0fd06548f42c757f73d3dae" title="Рисует эллипс.">txEllipse()</a>, <a class="el" href="a00081.htm#gaa14e9c2a46cf713efaa1f850074d8adc" title="Рисует окружность или круг.">txCircle()</a>, <a class="el" href="a00081.htm#ga5e1e4cc39cc18962bb480c4adfa1344d" title="Рисует дугу эллипса.">txArc()</a>, <a class="el" href="a00081.htm#ga8e06e3abcb6b3724d332feb8aa83a8df" title="Рисует сектор эллипса.">txPie()</a>, <a class="el" href="a00081.htm#ga59468ca0fd4c182ac0a03573267eb3e9" title="Рисует хорду эллипса.">txChord()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5ae197423002e969d08646554e8b647454" title="Розовый гламурный :)">TX_PINK</a>);
          <a class="code" href="a00081.htm#gaaee38df6f38b6f1729b9db1c4ac23e65" title="Рисует линию.">txLine</a> (100, 200, 150, 100);
          <a class="code" href="a00081.htm#gaaee38df6f38b6f1729b9db1c4ac23e65" title="Рисует линию.">txLine</a> (150, 100, 200, 200);
          <a class="code" href="a00081.htm#gaaee38df6f38b6f1729b9db1c4ac23e65" title="Рисует линию.">txLine</a> (200, 200, 100, 200);
          <a class="code" href="a00081.htm#ga8adde0a20efa7597d8653653817353b2" title="Заливает произвольный контур текущим цветом заполнения.">txFloodFill</a> (150, 150);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gaf5f3dec18e058830a6eb85ca127472df"></a><!-- doxytag: member="TXLib.h::txTriangle" ref="gaf5f3dec18e058830a6eb85ca127472df" args="(double x1, double y1, double x2, double y2, double x3, double y3)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txTriangle </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x3</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y3</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Функция, которая <em>должна бы</em> рисовать треугольник. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">x1</td><td>X-координата 1-й точки. </td></tr>
    <tr><td class="paramname">y1</td><td>Y-координата 1-й точки. </td></tr>
    <tr><td class="paramname">x2</td><td>X-координата 2-й точки. </td></tr>
    <tr><td class="paramname">y2</td><td>Y-координата 2-й точки. </td></tr>
    <tr><td class="paramname">x3</td><td>X-координата 3-й точки. </td></tr>
    <tr><td class="paramname">y3</td><td>Y-координата 3-й точки.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была бы успешна -- true, иначе -- false.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00081.htm#ga4d83b7e2d67f422cf703e15f2d7c4dfa" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00081.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a>, <a class="el" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a>, <a class="el" href="a00081.htm#gaaee38df6f38b6f1729b9db1c4ac23e65" title="Рисует линию.">txLine()</a>, <a class="el" href="a00081.htm#ga18a0418f3c06463e958077cddf2a4864" title="Рисует прямоугольник.">txRectangle()</a>, <a class="el" href="a00081.htm#gacbbb638439ad7ba88804178516019fb1" title="Рисует ломаную линию или многоугольник.">txPolygon()</a>, <a class="el" href="a00081.htm#gaaf82e7c5a0fd06548f42c757f73d3dae" title="Рисует эллипс.">txEllipse()</a>, <a class="el" href="a00081.htm#gaa14e9c2a46cf713efaa1f850074d8adc" title="Рисует окружность или круг.">txCircle()</a>, <a class="el" href="a00081.htm#ga5e1e4cc39cc18962bb480c4adfa1344d" title="Рисует дугу эллипса.">txArc()</a>, <a class="el" href="a00081.htm#ga8e06e3abcb6b3724d332feb8aa83a8df" title="Рисует сектор эллипса.">txPie()</a>, <a class="el" href="a00081.htm#ga59468ca0fd4c182ac0a03573267eb3e9" title="Рисует хорду эллипса.">txChord()</a></dd></dl>
<dl class="user"><dt><b>См. также:</b></dt><dd><a class="el" href="a00004.htm">Пример с функциями с параметрами</a> </dd></dl>

<p>См. определение в файле <a class="el" href="a00058_source.htm">TXLib.h</a> строка <a class="el" href="a00058_source.htm#l02002">2002</a></p>

</div>
</div>
<a class="anchor" id="gac76227ff55076802ea267be18b4d7a8d"></a><!-- doxytag: member="TXLib.h::txDrawMan" ref="gac76227ff55076802ea267be18b4d7a8d" args="(int x, int y, int sizeX, int sizeY, COLORREF color, double handL, double handR, double twist, double head, double eyes, double wink, double crazy, double smile, double hair, double wind)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void txDrawMan </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>sizeX</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>sizeY</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">COLORREF&#160;</td>
          <td class="paramname"><em>color</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>handL</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>handR</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>twist</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>head</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>eyes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>wink</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>crazy</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>smile</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>hair</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>wind</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Рисует человечка. </p>
<p>Это пример функции, которую Вы могли бы написать и сами.</p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>X-координата человечка. </td></tr>
    <tr><td class="paramname">y</td><td>Y-координата человечка. </td></tr>
    <tr><td class="paramname">sizeX</td><td>Ширина человечка. </td></tr>
    <tr><td class="paramname">sizeY</td><td>Высота человечка (также определяет размер головы). </td></tr>
    <tr><td class="paramname">color</td><td>Цвет человечка. </td></tr>
    <tr><td class="paramname">handL</td><td>Высота подъема левой руки (относительно высоты человечка). </td></tr>
    <tr><td class="paramname">handR</td><td>Высота подъема правой руки (относительно высоты человечка). </td></tr>
    <tr><td class="paramname">twist</td><td>Смещение <em>спины</em> (относительно ширины человечка). </td></tr>
    <tr><td class="paramname">head</td><td>Высота <em>подъема</em> головы (относительно высоты человечка). </td></tr>
    <tr><td class="paramname">eyes</td><td>Величина глаз (относительно размера головы). </td></tr>
    <tr><td class="paramname">wink</td><td>Моргание глаз (0 -- оба открыты, -1 -- закрыт левый, +1 -- закрыт правый). </td></tr>
    <tr><td class="paramname">crazy</td><td>Смещение глаз по вертикали (относительно размера головы). </td></tr>
    <tr><td class="paramname">smile</td><td>Улыбка (относительно размера головы). </td></tr>
    <tr><td class="paramname">hair</td><td>Длина волос (относительно размера головы). </td></tr>
    <tr><td class="paramname">wind</td><td>Ветер, развевающий волосы (относительно размера головы).</td></tr>
  </table>
  </dd>
</dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00081.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a>, <a class="el" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a>, <a class="el" href="a00081.htm#gaaee38df6f38b6f1729b9db1c4ac23e65" title="Рисует линию.">txLine()</a>, <a class="el" href="a00081.htm#gaa14e9c2a46cf713efaa1f850074d8adc" title="Рисует окружность или круг.">txCircle()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00081.htm#gafce21ce98474d5559f316b3d47cdbfab" title="Создание окна рисования">txCreateWindow</a> (800, 600);

        <span class="comment">//-----------+---+----+-----+-----+----------+-----+-----+-----+----+----+----+-----+-----+----+-----</span>
        <span class="comment">//           | x |  y |sizeX|sizeY| color    |handL|handR|twist|head|eyes|wink|crazy|smile|hair|wind</span>
        <span class="comment">//-----------+---+----+-----+-----+----------+-----+-----+-----+----+----+----+-----+-----+----+-----</span>
        <span class="comment">//           |   |    |     |     |          |     |     |     |    |    |    |     |     |    |</span>
           <a class="code" href="a00081.htm#gac76227ff55076802ea267be18b4d7a8d" title="Рисует человечка.">txDrawMan</a> (125, 250, 200,  200, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025" title="Белый цвет.">TX_WHITE</a>,    0,    0,    0,   0,   0.8,  0,   0,   1.0,   0,  0);
           <a class="code" href="a00081.htm#gac76227ff55076802ea267be18b4d7a8d" title="Рисует человечка.">txDrawMan</a> (325, 250, 100,  200, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a2331cdb79541487869e7c2445a2eb5f0" title="Желтый цвет.">TX_YELLOW</a>,   0,    0,    0,   0,   0.8,  0,   0,  -1.0,   2,  0);
           <a class="code" href="a00081.htm#gac76227ff55076802ea267be18b4d7a8d" title="Рисует человечка.">txDrawMan</a> (525, 250, 200,  100, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5ab192f19b013a2563740be0da4e7252d9" title="Оранжевый цвет.">TX_ORANGE</a>,   0,    0,    0,   0,   1.0,  0,  -1,   0.3,   1,  0);
           <a class="code" href="a00081.htm#gac76227ff55076802ea267be18b4d7a8d" title="Рисует человечка.">txDrawMan</a> (725, 250, 100,  100, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a1c1e8dec8618fe54eee9e569a828a504" title="Светло-красный цвет. Не самого лучшего оттенка.">TX_LIGHTRED</a>, 0,    0,    0,   0,   1.0,  0,   1,  -0.3,   3,  0);

           <a class="code" href="a00081.htm#gac76227ff55076802ea267be18b4d7a8d" title="Рисует человечка.">txDrawMan</a> (125, 550, 200,  200, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025" title="Белый цвет.">TX_WHITE</a>,    0.3,  0.3,  0,   0,   0.8, -1,   1,   0.5,   2, -1);
           <a class="code" href="a00081.htm#gac76227ff55076802ea267be18b4d7a8d" title="Рисует человечка.">txDrawMan</a> (325, 550, 100,  200, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a2331cdb79541487869e7c2445a2eb5f0" title="Желтый цвет.">TX_YELLOW</a>,  -0.5, -0.5,  0,   0.1, 0.8,  1,   0,  -0.5,   3,  5);
           <a class="code" href="a00081.htm#gac76227ff55076802ea267be18b4d7a8d" title="Рисует человечка.">txDrawMan</a> (525, 550, 200,  100, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5ab192f19b013a2563740be0da4e7252d9" title="Оранжевый цвет.">TX_ORANGE</a>,  -0.5,  0.3,  0.2, 0,   0.8, -1,   1,   0.0,  10, -5);
           <a class="code" href="a00081.htm#gac76227ff55076802ea267be18b4d7a8d" title="Рисует человечка.">txDrawMan</a> (725, 550, 100,  100, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a1c1e8dec8618fe54eee9e569a828a504" title="Светло-красный цвет. Не самого лучшего оттенка.">TX_LIGHTRED</a>, 0.3, -0.5, -0.4, 0,   0.8,  1,  -1,   0.0,   1,  1);
</pre></div> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00058_source.htm">TXLib.h</a> строка <a class="el" href="a00058_source.htm#l02078">2078</a></p>

</div>
</div>
<a class="anchor" id="ga52e119361961d9eee33c176a3084e55d"></a><!-- doxytag: member="TXLib.h::txTextOut" ref="ga52e119361961d9eee33c176a3084e55d" args="(double x, double y, const char text[], HDC dc=txDC())" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txTextOut </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char&#160;</td>
          <td class="paramname"><em>text</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HDC&#160;</td>
          <td class="paramname"><em>dc</em> = <code>txDC()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Рисует текст. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>X-координата начальной точки текста. </td></tr>
    <tr><td class="paramname">y</td><td>Y-координата начальной точки текста. </td></tr>
    <tr><td class="paramname">text</td><td>Текстовая строка. </td></tr>
    <tr><td class="paramname">dc</td><td><em>Дескриптор контекста рисования (холста) для рисования. Необязателен.</em></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна -- true, иначе -- false.</dd></dl>
<p>Цвет текста задается функцией <a class="el" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, выравнивание (влево/вправо/по центру) -- <a class="el" href="a00081.htm#ga09938df8859ae8b62638a3af76ee6735" title="Устанавливает текущее выравнивание текста (влево/вправо/по центру).">txSetTextAlign()</a>.</p>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, <a class="el" href="a00081.htm#gab6462db4dbcca4915d460036c6c8896d" title="Возвращает текущий цвет линий и текста.">txGetColor()</a>, <a class="el" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00081.htm#ga4d83b7e2d67f422cf703e15f2d7c4dfa" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00081.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a>, <a class="el" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a>, <a class="el" href="a00081.htm#ga6689b9a89add9c5eb5cf54a8c86539a4" title="Выбирает текущий шрифт, его размер и другие атрибуты.">txSelectFont()</a>, <a class="el" href="a00081.htm#ga09938df8859ae8b62638a3af76ee6735" title="Устанавливает текущее выравнивание текста (влево/вправо/по центру).">txSetTextAlign()</a>, <a class="el" href="a00081.htm#ga64af5f87cd652548278ff98d26f58148" title="Вычисляет размеры текстовой надписи.">txGetTextExtent()</a>, <a class="el" href="a00081.htm#gad5483eacac697420a84f66733e45ed02" title="Вычисляет ширину текстовой надписи.">txGetTextExtentX()</a>, <a class="el" href="a00081.htm#gac021e9984ef217a7a8c14094e3d684c9" title="Вычисляет высоту текстовой надписи.">txGetTextExtentY()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00081.htm#ga52e119361961d9eee33c176a3084e55d" title="Рисует текст.">txTextOut</a> (100, 100, <span class="stringliteral">&quot;Здесь могла бы быть Ваша реклама.&quot;</span>);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gaf6a9b31e58b6a0523ce1636a97053606"></a><!-- doxytag: member="TXLib.h::txDrawText" ref="gaf6a9b31e58b6a0523ce1636a97053606" args="(double x0, double y0, double x1, double y1, const char text[], unsigned format=DT_CENTER|DT_VCENTER|DT_WORDBREAK|DT_WORD_ELLIPSIS, HDC dc=txDC())" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txDrawText </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char&#160;</td>
          <td class="paramname"><em>text</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>format</em> = <code>DT_CENTER|DT_VCENTER|DT_WORDBREAK|DT_WORD_ELLIPSIS</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HDC&#160;</td>
          <td class="paramname"><em>dc</em> = <code>txDC()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Рисует текст, размещенный в прямоугольной области. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">x0</td><td>X-координата верхнего левого угла области. </td></tr>
    <tr><td class="paramname">y0</td><td>Y-координата верхнего левого угла области. </td></tr>
    <tr><td class="paramname">x1</td><td>X-координата нижнего правого угла области. </td></tr>
    <tr><td class="paramname">y1</td><td>Y-координата нижнего правого угла области. </td></tr>
    <tr><td class="paramname">text</td><td>Текстовая строка. </td></tr>
    <tr><td class="paramname">format</td><td><em>Флаги форматирования текста. Необязательны. Если не указаны, то используется: центрирование, перенос по словам и добавление многоточия, если надпись не умещается в область.</em> </td></tr>
    <tr><td class="paramname">dc</td><td><em>Дескриптор контекста рисования (холста) для рисования. Необязателен.</em></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна -- true, иначе -- false.</dd></dl>
<p>Цвет текста задается функцией <a class="el" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, выравнивание (влево/вправо/по центру) -- <a class="el" href="a00081.htm#ga09938df8859ae8b62638a3af76ee6735" title="Устанавливает текущее выравнивание текста (влево/вправо/по центру).">txSetTextAlign()</a>.</p>
<dl class="note"><dt><b>Заметки:</b></dt><dd>Не выводит ничего, если координаты идут в неверном порядке (если x0 &gt; x1 или y0 &gt; y1).</dd></dl>
<p>Флаги форматирования текста см. в MSDN (<a href="http://msdn.com">http://msdn.com</a>), искать "DrawText Function (Windows)": <a href="http://msdn.microsoft.com/en-us/library/dd162498%28VS.85%29.aspx.">http://msdn.microsoft.com/en-us/library/dd162498%28VS.85%29.aspx.</a></p>
<p><b>Автоматический перенос</b> текста на несколько строк включается, если текст состоит из нескольких строк (есть хотя бы один символ новой строки <b><code>\n</code>)</b>.</p>
<p>Если надо отформатировать текст не по центру, а по левому или правому краю, то не забудьте указать остальные флаги форматирования, если они нужны: <code>DT_VCENTER</code> (вертикальное центрирование) <code></code>| <code>DT_WORDBREAK</code> (перенос по словам) <code></code>| <code>DT_WORD_ELLIPSIS</code> (ставить многоточие в конце, если текст не умещается). См. значение флагов по умолчанию.</p>
<dl class="note"><dt><b>Заметки:</b></dt><dd>Вертикальное центрирование работает только для надписей, в которых нет символа новой строки <code>\n</code>.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, <a class="el" href="a00081.htm#gab6462db4dbcca4915d460036c6c8896d" title="Возвращает текущий цвет линий и текста.">txGetColor()</a>, <a class="el" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00081.htm#ga4d83b7e2d67f422cf703e15f2d7c4dfa" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00081.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a>, <a class="el" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a>, <a class="el" href="a00081.htm#ga52e119361961d9eee33c176a3084e55d" title="Рисует текст.">txTextOut()</a>, <a class="el" href="a00081.htm#ga6689b9a89add9c5eb5cf54a8c86539a4" title="Выбирает текущий шрифт, его размер и другие атрибуты.">txSelectFont()</a>, <a class="el" href="a00081.htm#ga64af5f87cd652548278ff98d26f58148" title="Вычисляет размеры текстовой надписи.">txGetTextExtent()</a>, <a class="el" href="a00081.htm#gad5483eacac697420a84f66733e45ed02" title="Вычисляет ширину текстовой надписи.">txGetTextExtentX()</a>, <a class="el" href="a00081.htm#gac021e9984ef217a7a8c14094e3d684c9" title="Вычисляет высоту текстовой надписи.">txGetTextExtentY()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a>     (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a9f0adfcb24eeb418fc39fe950db65ec8" title="Черный цвет.">TX_BLACK</a>);
          <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a5308a5fc6c34169a8af67630a5a750d5" title="Темно-серый цвет.">TX_DARKGRAY</a>); Win32::RoundRect (<a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), 105, 105, 205, 255, 30, 30);
          <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025" title="Белый цвет.">TX_WHITE</a>);    Win32::RoundRect (<a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), 100, 100, 200, 250, 30, 30);

          <a class="code" href="a00081.htm#ga6689b9a89add9c5eb5cf54a8c86539a4" title="Выбирает текущий шрифт, его размер и другие атрибуты.">txSelectFont</a> (<span class="stringliteral">&quot;Arial&quot;</span>, 20, 0, FW_BOLD);
          <a class="code" href="a00081.htm#gaf6a9b31e58b6a0523ce1636a97053606" title="Рисует текст, размещенный в прямоугольной области.">txDrawText</a>  (100, 100, 200, 250, <span class="stringliteral">&quot;I hate it when I&#39;m studying &quot;</span>
                                           <span class="stringliteral">&quot;and a Velociraptor throws bananas on me.\n&quot;</span>);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga6689b9a89add9c5eb5cf54a8c86539a4"></a><!-- doxytag: member="TXLib.h::txSelectFont" ref="ga6689b9a89add9c5eb5cf54a8c86539a4" args="(const char name[], double sizeY, double sizeX=&#45;1, int bold=FW_DONTCARE, bool italic=false, bool underline=false, bool strikeout=false, double angle=0, HDC dc=txDC())" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">HFONT txSelectFont </td>
          <td>(</td>
          <td class="paramtype">const char&#160;</td>
          <td class="paramname"><em>name</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>sizeY</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>sizeX</em> = <code>-1</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>bold</em> = <code>FW_DONTCARE</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>italic</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>underline</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>strikeout</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>angle</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HDC&#160;</td>
          <td class="paramname"><em>dc</em> = <code>txDC()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Выбирает текущий шрифт, его размер и другие атрибуты. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">name</td><td>Название шрифта. </td></tr>
    <tr><td class="paramname">sizeY</td><td>Высота букв (размер по <code>Y</code>). </td></tr>
    <tr><td class="paramname">sizeX</td><td><em>Ширина букв. Необязательна. Если не указана, то берется 1/3 от высоты.</em> </td></tr>
    <tr><td class="paramname">bold</td><td><em>Жирность шрифта (от 0 до 1000). Необязательна. Если не указана, то берется обычный шрифт.</em> </td></tr>
    <tr><td class="paramname">italic</td><td><em>Курсив. Необязателен.</em> </td></tr>
    <tr><td class="paramname">underline</td><td><em>Подчеркивание. Необязательно.</em> </td></tr>
    <tr><td class="paramname">strikeout</td><td><em>Перечеркивание. Необязательно.</em> </td></tr>
    <tr><td class="paramname">angle</td><td><em>Угол поворота текста (в градусах). Необязателен.</em> </td></tr>
    <tr><td class="paramname">dc</td><td><em>Дескриптор контекста рисования (холста) для выбора шрифта. Необязателен.</em></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Выбранный шрифт. Если он не был найден, то устанавливается системный шрифт Windows <code></code>(SYSTEM_FIXED_FONT, см. MSDN). Существование шрифта можно проверить функцией <a class="el" href="a00081.htm#ga794901725b6c4a96f585742b70c0ea05" title="Ищет шрифт по его названию.">txFontExist()</a>.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#ga52e119361961d9eee33c176a3084e55d" title="Рисует текст.">txTextOut()</a>, <a class="el" href="a00081.htm#gaf6a9b31e58b6a0523ce1636a97053606" title="Рисует текст, размещенный в прямоугольной области.">txDrawText()</a>, <a class="el" href="a00081.htm#ga794901725b6c4a96f585742b70c0ea05" title="Ищет шрифт по его названию.">txFontExist()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00081.htm#ga6689b9a89add9c5eb5cf54a8c86539a4" title="Выбирает текущий шрифт, его размер и другие атрибуты.">txSelectFont</a> (<span class="stringliteral">&quot;Comic Sans MS&quot;</span>, 40);
          <a class="code" href="a00081.htm#ga52e119361961d9eee33c176a3084e55d" title="Рисует текст.">txTextOut</a> (100, 100, <span class="stringliteral">&quot;И здесь могла бы быть Ваша реклама.&quot;</span>);
          <a class="code" href="a00081.htm#ga6689b9a89add9c5eb5cf54a8c86539a4" title="Выбирает текущий шрифт, его размер и другие атрибуты.">txSelectFont</a> (<span class="stringliteral">&quot;Comic Sans MS&quot;</span>, 40, 10, <span class="keyword">false</span>, <span class="keyword">true</span>, <span class="keyword">false</span>, <span class="keyword">true</span>, 15);
          <a class="code" href="a00081.htm#ga52e119361961d9eee33c176a3084e55d" title="Рисует текст.">txTextOut</a> (100, 200, <span class="stringliteral">&quot;Но ее почему-то нет.&quot;</span>);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga64af5f87cd652548278ff98d26f58148"></a><!-- doxytag: member="TXLib.h::txGetTextExtent" ref="ga64af5f87cd652548278ff98d26f58148" args="(const char text[], HDC dc=txDC()) tx_nodiscard" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">SIZE txGetTextExtent </td>
          <td>(</td>
          <td class="paramtype">const char&#160;</td>
          <td class="paramname"><em>text</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HDC&#160;</td>
          <td class="paramname"><em>dc</em> = <code>txDC()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Вычисляет размеры текстовой надписи. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">text</td><td>Текстовая строка. </td></tr>
    <tr><td class="paramname">dc</td><td><em>Дескриптор контекста рисования (холста), где планируется разместить надпись. Необязателен.</em></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Размеры надписи в структуре SIZE.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#ga52e119361961d9eee33c176a3084e55d" title="Рисует текст.">txTextOut()</a>, <a class="el" href="a00081.htm#ga6689b9a89add9c5eb5cf54a8c86539a4" title="Выбирает текущий шрифт, его размер и другие атрибуты.">txSelectFont()</a>, <a class="el" href="a00081.htm#ga64af5f87cd652548278ff98d26f58148" title="Вычисляет размеры текстовой надписи.">txGetTextExtent()</a>, <a class="el" href="a00081.htm#gad5483eacac697420a84f66733e45ed02" title="Вычисляет ширину текстовой надписи.">txGetTextExtentX()</a>, <a class="el" href="a00081.htm#gac021e9984ef217a7a8c14094e3d684c9" title="Вычисляет высоту текстовой надписи.">txGetTextExtentY()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          SIZE size = <a class="code" href="a00081.htm#ga64af5f87cd652548278ff98d26f58148" title="Вычисляет размеры текстовой надписи.">txGetTextExtent</a> (text);
          <a class="code" href="a00081.htm#ga52e119361961d9eee33c176a3084e55d" title="Рисует текст.">txTextOut</a> (100 + size.cx / 2, 200 + size.cy / 2, text);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gad5483eacac697420a84f66733e45ed02"></a><!-- doxytag: member="TXLib.h::txGetTextExtentX" ref="gad5483eacac697420a84f66733e45ed02" args="(const char text[], HDC dc=txDC()) tx_nodiscard" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int txGetTextExtentX </td>
          <td>(</td>
          <td class="paramtype">const char&#160;</td>
          <td class="paramname"><em>text</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HDC&#160;</td>
          <td class="paramname"><em>dc</em> = <code>txDC()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Вычисляет ширину текстовой надписи. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">text</td><td>Текстовая строка. </td></tr>
    <tr><td class="paramname">dc</td><td><em>Дескриптор контекста рисования (холста), где планируется разместить надпись. Необязателен.</em></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Ширина надписи.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#ga52e119361961d9eee33c176a3084e55d" title="Рисует текст.">txTextOut()</a>, <a class="el" href="a00081.htm#ga6689b9a89add9c5eb5cf54a8c86539a4" title="Выбирает текущий шрифт, его размер и другие атрибуты.">txSelectFont()</a>, <a class="el" href="a00081.htm#ga64af5f87cd652548278ff98d26f58148" title="Вычисляет размеры текстовой надписи.">txGetTextExtent()</a>, <a class="el" href="a00081.htm#gad5483eacac697420a84f66733e45ed02" title="Вычисляет ширину текстовой надписи.">txGetTextExtentX()</a>, <a class="el" href="a00081.htm#gac021e9984ef217a7a8c14094e3d684c9" title="Вычисляет высоту текстовой надписи.">txGetTextExtentY()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00081.htm#ga52e119361961d9eee33c176a3084e55d" title="Рисует текст.">txTextOut</a> (100 + <a class="code" href="a00081.htm#gad5483eacac697420a84f66733e45ed02" title="Вычисляет ширину текстовой надписи.">txGetTextExtentX</a> (text) / 2, 200 + <a class="code" href="a00081.htm#gac021e9984ef217a7a8c14094e3d684c9" title="Вычисляет высоту текстовой надписи.">txGetTextExtentY</a> (text) / 2, text);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gac021e9984ef217a7a8c14094e3d684c9"></a><!-- doxytag: member="TXLib.h::txGetTextExtentY" ref="gac021e9984ef217a7a8c14094e3d684c9" args="(const char text[], HDC dc=txDC()) tx_nodiscard" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int txGetTextExtentY </td>
          <td>(</td>
          <td class="paramtype">const char&#160;</td>
          <td class="paramname"><em>text</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HDC&#160;</td>
          <td class="paramname"><em>dc</em> = <code>txDC()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Вычисляет высоту текстовой надписи. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">text</td><td>Текстовая строка. </td></tr>
    <tr><td class="paramname">dc</td><td><em>Дескриптор контекста рисования (холста), где планируется разместить надпись. Необязателен.</em></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Высота надписи.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#ga52e119361961d9eee33c176a3084e55d" title="Рисует текст.">txTextOut()</a>, <a class="el" href="a00081.htm#ga6689b9a89add9c5eb5cf54a8c86539a4" title="Выбирает текущий шрифт, его размер и другие атрибуты.">txSelectFont()</a>, <a class="el" href="a00081.htm#ga64af5f87cd652548278ff98d26f58148" title="Вычисляет размеры текстовой надписи.">txGetTextExtent()</a>, <a class="el" href="a00081.htm#gad5483eacac697420a84f66733e45ed02" title="Вычисляет ширину текстовой надписи.">txGetTextExtentX()</a>, <a class="el" href="a00081.htm#gac021e9984ef217a7a8c14094e3d684c9" title="Вычисляет высоту текстовой надписи.">txGetTextExtentY()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00081.htm#ga52e119361961d9eee33c176a3084e55d" title="Рисует текст.">txTextOut</a> (100 + <a class="code" href="a00081.htm#gad5483eacac697420a84f66733e45ed02" title="Вычисляет ширину текстовой надписи.">txGetTextExtentX</a> (text) / 2, 200 + <a class="code" href="a00081.htm#gac021e9984ef217a7a8c14094e3d684c9" title="Вычисляет высоту текстовой надписи.">txGetTextExtentY</a> (text) / 2, text);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga09938df8859ae8b62638a3af76ee6735"></a><!-- doxytag: member="TXLib.h::txSetTextAlign" ref="ga09938df8859ae8b62638a3af76ee6735" args="(unsigned align=TA_CENTER|TA_BASELINE, HDC dc=txDC())" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned txSetTextAlign </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>align</em> = <code>TA_CENTER|TA_BASELINE</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HDC&#160;</td>
          <td class="paramname"><em>dc</em> = <code>txDC()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Устанавливает текущее выравнивание текста (влево/вправо/по центру). </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">align</td><td><em>Флаги выравнивания. Необязательны. Если не указаны, то используются центрирование по горизонтали.</em> </td></tr>
    <tr><td class="paramname">dc</td><td><em>Дескриптор контекста рисования (холста), где планируется разместить надпись. Необязателен.</em></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Предыдущее состояние выравнивания текста.</dd></dl>
<dl>
<dt>Флаги выравнивания: </dt>
<dd><table  border="0">
<tr valign="top">
<td>TA_LEFT &#160;&#160;</td><td>Текст выравнивается влево. Точка <code></code>(X,Y) определяет левую границу текста. </td></tr>
<tr valign="top">
<td>TA_RIGHT &#160;&#160;</td><td>Текст выравнивается вправо. Точка <code></code>(X,Y) определяет правую границу текста. </td></tr>
<tr valign="top">
<td>TA_CENTER &#160;&#160;</td><td>Текст центрируется по горизонтали относительно точки @ (X,Y). <br/>
 </td></tr>
<tr valign="top">
<td></td></tr>
<tr valign="top">
<td>TA_BASELINE &#160;&#160;</td><td>Точка <code></code>(X,Y) определяет базовую линию текста. </td></tr>
<tr valign="top">
<td>TA_BOTTOM &#160;&#160;</td><td>Точка <code></code>(X,Y) определяет нижнюю границу текста. </td></tr>
<tr valign="top">
<td>TA_TOP &#160;&#160;</td><td>Точка <code></code>(X,Y) определяет верхнюю границу текста. </td></tr>
</table>
</dd>
</dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#ga52e119361961d9eee33c176a3084e55d" title="Рисует текст.">txTextOut()</a>, <a class="el" href="a00081.htm#ga6689b9a89add9c5eb5cf54a8c86539a4" title="Выбирает текущий шрифт, его размер и другие атрибуты.">txSelectFont()</a>, <a class="el" href="a00081.htm#ga64af5f87cd652548278ff98d26f58148" title="Вычисляет размеры текстовой надписи.">txGetTextExtent()</a>, <a class="el" href="a00081.htm#gad5483eacac697420a84f66733e45ed02" title="Вычисляет ширину текстовой надписи.">txGetTextExtentX()</a>, <a class="el" href="a00081.htm#gac021e9984ef217a7a8c14094e3d684c9" title="Вычисляет высоту текстовой надписи.">txGetTextExtentY()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00081.htm#ga09938df8859ae8b62638a3af76ee6735" title="Устанавливает текущее выравнивание текста (влево/вправо/по центру).">txSetTextAlign</a> (TA_RIGHT);
          <a class="code" href="a00081.htm#ga52e119361961d9eee33c176a3084e55d" title="Рисует текст.">txTextOut</a> (700, 100, <span class="stringliteral">&quot;Чтобы доступ был легок и быстр,&quot;</span>);
          <a class="code" href="a00081.htm#ga52e119361961d9eee33c176a3084e55d" title="Рисует текст.">txTextOut</a> (700, 150, <span class="stringliteral">&quot;Переменную клади в регистр.&quot;</span>);
          <a class="code" href="a00081.htm#ga09938df8859ae8b62638a3af76ee6735" title="Устанавливает текущее выравнивание текста (влево/вправо/по центру).">txSetTextAlign</a>();
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga794901725b6c4a96f585742b70c0ea05"></a><!-- doxytag: member="TXLib.h::txFontExist" ref="ga794901725b6c4a96f585742b70c0ea05" args="(const char name[]) tx_nodiscard" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">LOGFONT* txFontExist </td>
          <td>(</td>
          <td class="paramtype">const char&#160;</td>
          <td class="paramname"><em>name</em>[]</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Ищет шрифт по его названию. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">name</td><td>Название шрифта.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Информация о шрифте в структуре LOGFONT. Если шрифт не найден, возвращает NULL.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#ga52e119361961d9eee33c176a3084e55d" title="Рисует текст.">txTextOut()</a>, <a class="el" href="a00081.htm#ga6689b9a89add9c5eb5cf54a8c86539a4" title="Выбирает текущий шрифт, его размер и другие атрибуты.">txSelectFont()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <span class="keywordflow">if</span> (<a class="code" href="a00081.htm#ga794901725b6c4a96f585742b70c0ea05" title="Ищет шрифт по его названию.">txFontExist</a> (<span class="stringliteral">&quot;Comic Sans MS&quot;</span>)) <a class="code" href="a00081.htm#ga6689b9a89add9c5eb5cf54a8c86539a4" title="Выбирает текущий шрифт, его размер и другие атрибуты.">txSelectFont</a> (<span class="stringliteral">&quot;Comic Sans MS&quot;</span>,   30);
          <span class="keywordflow">else</span>                               <a class="code" href="a00081.htm#ga6689b9a89add9c5eb5cf54a8c86539a4" title="Выбирает текущий шрифт, его размер и другие атрибуты.">txSelectFont</a> (<span class="stringliteral">&quot;Times New Roman&quot;</span>, 30);

          <a class="code" href="a00081.htm#ga52e119361961d9eee33c176a3084e55d" title="Рисует текст.">txTextOut</a> (100, 100, <span class="stringliteral">&quot;Комик ли Санс?&quot;</span>);  <span class="comment">// google.ru/search?q=philosoraptor</span>
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga1008da052f2fbe9ec0f70c2f6b4f0700"></a><!-- doxytag: member="TXLib.h::txCreateCompatibleDC" ref="ga1008da052f2fbe9ec0f70c2f6b4f0700" args="(double sizeX, double sizeY, HBITMAP bitmap=NULL) tx_nodiscard" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">HDC txCreateCompatibleDC </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>sizeX</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>sizeY</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HBITMAP&#160;</td>
          <td class="paramname"><em>bitmap</em> = <code>NULL</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Создает дополнительный холст (контекст рисования, Device Context, DC) в памяти. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">sizeX</td><td>Ширина холста. </td></tr>
    <tr><td class="paramname">sizeY</td><td>Высота холста. </td></tr>
    <tr><td class="paramname">bitmap</td><td><em>Bitmap to be associated with DC (optional). If omitted, color bitmap will be created automatically via Win32::CreateDIBSection.</em></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Дескриптор (системный номер, выданный Windows) созданного холста (контекста рисования).</dd></dl>
<p>После создания на этом холсте можно рисовать, как и на основном окне TXLib, используя параметр <code>dc</code> функций рисования. Созданный холст имеет свои собственные настройки цветов, шрифтов и т.д., отличные от настроек основного окна TXLib. Чтобы увидеть результат рисования, скопируйте изображение холста на экран с помощью функций <a class="el" href="a00081.htm#ga6dfb121b4a1116f987baeb515713cbbf" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt()</a>, <a class="el" href="a00081.htm#ga54f48f0bcb9453add294e0a9f8b1fb1d" title="Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом прозрачности...">txTransparentBlt()</a> или <a class="el" href="a00081.htm#ga4d6f780cdef622df0fda71d0b3cfee52" title="Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом полупрозрачности...">txAlphaBlend()</a>.</p>
<dl class="warning"><dt><b>Предупреждения:</b></dt><dd>Созданный контекст затем будет нужно <b>обязательно</b> удалить при помощи <a class="el" href="a00081.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC()</a>. <br/>
 <small>When the program will be shutting down, TXLib will try to delete DCs which were not deleted, but this is not guaranteed.</small> При этом удаляется и <code>bitmap</code>, будьте внимательны.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#gafce21ce98474d5559f316b3d47cdbfab" title="Создание окна рисования">txCreateWindow()</a>, <a class="el" href="a00081.htm#ga1008da052f2fbe9ec0f70c2f6b4f0700" title="Создает дополнительный холст (контекст рисования, Device Context, DC) в памяти.">txCreateCompatibleDC()</a>, <a class="el" href="a00081.htm#gaec4970aac125bcf0d8a0b10a118222f7" title="Загружает из файла изображение в формате BMP. Делает это довольно медленно.">txLoadImage()</a>, <a class="el" href="a00081.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC()</a>, <a class="el" href="a00081.htm#ga45389db909311454bbdfed3898d760d1" title="Сохраняет в файл изображение в формате BMP.">txSaveImage()</a>, <a class="el" href="a00081.htm#ga11074386e81c0c8677f36c0a16ac0aa1" title="Возвращает размер окна, картинки или холста в виде структуры POINT.">txGetExtent()</a>, <a class="el" href="a00081.htm#ga7535f88c0fd15b4b49195060d38f2603" title="Создает аппаратно-независимый дополнительный холст (контекст рисования, Device Context, DC) в памяти с возможностью прямого доступа к нему как к массиву.">txCreateDIBSection()</a>, <a class="el" href="a00081.htm#ga3a8ec79acc0dcbcc04bff3aecc235b4e" title="Возвращает буфер памяти, связанный с холстом (HDC) TXLib.">txVideoMemory()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          HDC save = <a class="code" href="a00081.htm#ga1008da052f2fbe9ec0f70c2f6b4f0700" title="Создает дополнительный холст (контекст рисования, Device Context, DC) в памяти.">txCreateCompatibleDC</a> (100, 100);

          <a class="code" href="a00081.htm#ga6dfb121b4a1116f987baeb515713cbbf" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt</a> (save, 0, 0, 100, 100, <a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), 0, 0);  <span class="comment">// Сохраняем фон</span>

          <a class="code" href="a00081.htm#ga52e119361961d9eee33c176a3084e55d" title="Рисует текст.">txTextOut</a> (20, 20, <span class="stringliteral">&quot;Boo!&quot;</span>);
          <a class="code" href="a00081.htm#ga6c293f0b0f71efebdeeb0b56a97ba50c" title="Задерживает выполнение программы на определенное время.">txSleep</a> (2000);

          <a class="code" href="a00081.htm#ga6dfb121b4a1116f987baeb515713cbbf" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt</a> (<a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), 0, 0, 100, 100, save, 0, 0);  <span class="comment">// Текст исчезает</span>

          <a class="code" href="a00081.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC</a> (save);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga7535f88c0fd15b4b49195060d38f2603"></a><!-- doxytag: member="TXLib.h::txCreateDIBSection" ref="ga7535f88c0fd15b4b49195060d38f2603" args="(double sizeX, double sizeY, RGBQUAD **pixels=NULL) tx_nodiscard" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">HDC txCreateDIBSection </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>sizeX</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>sizeY</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">RGBQUAD **&#160;</td>
          <td class="paramname"><em>pixels</em> = <code>NULL</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Создает аппаратно-независимый дополнительный холст (контекст рисования, Device Context, DC) в памяти с возможностью прямого доступа к нему как к массиву. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">sizeX</td><td>Ширина холста. </td></tr>
    <tr><td class="paramname">sizeY</td><td>Высота холста. </td></tr>
    <tr><td class="paramname">pixels</td><td><em>Указатель на переменную, которая будет использоваться для доступа к пикселям изображения. Необязателен. Эта переменная должна быть указателем на массив структур RGBQUAD, каждая из которых описывает цвет одного пикселя. <b>Не</b> надо создавать самому этот массив! Его создаст <a class="el" href="a00081.htm#ga7535f88c0fd15b4b49195060d38f2603" title="Создает аппаратно-независимый дополнительный холст (контекст рисования, Device Context, DC) в памяти с возможностью прямого доступа к нему как к массиву.">txCreateDIBSection()</a> и вернет через этот указательный параметр. Объявите только указатель и занулите его, потом его адрес передайте в функцию.</em></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Дескриптор созданного аппаратно-независимого холста (контекста рисования).</dd></dl>
<p>После создания на этом холсте можно рисовать, как и на основном окне TXLib, используя параметр <code>dc</code> функций рисования. Созданный холст имеет свои собственные настройки цветов, шрифтов и т.д., отличные от настроек основного окна TXLib. Чтобы увидеть результат рисования, скопируйте изображение холста на экран с помощью функций <a class="el" href="a00081.htm#ga6dfb121b4a1116f987baeb515713cbbf" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt()</a>, <a class="el" href="a00081.htm#ga54f48f0bcb9453add294e0a9f8b1fb1d" title="Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом прозрачности...">txTransparentBlt()</a> или <a class="el" href="a00081.htm#ga4d6f780cdef622df0fda71d0b3cfee52" title="Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом полупрозрачности...">txAlphaBlend()</a>.</p>
<p>Самое важное, что аппаратно-независимые холсты, создаваемые этой функцией, позволяют напрямую и быстро изменять цвета пикселей изображения, а также его прозрачность в каждой точке. См. пример использования.</p>
<p>Для прямого доступа к пикселям холста, как к массиву, надо объявить указатель на массив структур RGBQUAD и передать адрес этого указателя в качестве третьего параметра функции <a class="el" href="a00081.htm#ga7535f88c0fd15b4b49195060d38f2603" title="Создает аппаратно-независимый дополнительный холст (контекст рисования, Device Context, DC) в памяти с возможностью прямого доступа к нему как к массиву.">txCreateDIBSection()</a>. Она изменит значение этого указателя так, что он станет указывать на массив цветов пикселей холста.</p>
<p>Массив <code>pixels</code> одномерный, но по сути он описывает двумерное изображение. Поэтому с ним надо работать как с двумерным прямоугольным массивом, физически расположенным в одномерном массиве: вручную вычислять смещение от начала массива до нужного пикселя и после этого адресоваться к массиву. (Так обычно делают, размещая двумерные массивы в динамической памяти.) Кроме того, "Y-ось" этого массива направлена <b>вверх</b>, а не вниз, как в окне TXLib. Поэтому для нужного пикселя его смещение от начала массива нужно рассчитывать с помощью формулы <code>x + (-y + sizeY) * sizeX</code>. См. пример использования.</p>
<dl class="warning"><dt><b>Предупреждения:</b></dt><dd>Будьте осторожны, не выходите за границы массива, последствия будут непредсказуемыми. <br/>
<br/>
</dd>
<dd>
Созданный контекст затем будет нужно <b>обязательно</b> удалить при помощи <a class="el" href="a00081.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC()</a>. <br/>
 <small>When the program will be shutting down, TXLib will try to delete DCs which were not deleted, but this is not guaranteed.</small></dd></dl>
<dl class="note"><dt><b>Заметки:</b></dt><dd>Память под массив RGBQUAD выделять <b>не</b> надо и освобождать его <b>не</b> надо, этим занимается сама <a class="el" href="a00081.htm#ga7535f88c0fd15b4b49195060d38f2603" title="Создает аппаратно-независимый дополнительный холст (контекст рисования, Device Context, DC) в памяти с возможностью прямого доступа к нему как к массиву.">txCreateDIBSection()</a> вместе с <a class="el" href="a00081.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC()</a>. <br/>
<br/>
</dd>
<dd>
Аппаратно-независимые холсты -- это контексты устройств, связанные с аппаратно-независимыми растрами (Device Independent Bitmaps, DIB) Windows.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#gafce21ce98474d5559f316b3d47cdbfab" title="Создание окна рисования">txCreateWindow()</a>, <a class="el" href="a00081.htm#ga1008da052f2fbe9ec0f70c2f6b4f0700" title="Создает дополнительный холст (контекст рисования, Device Context, DC) в памяти.">txCreateCompatibleDC()</a>, <a class="el" href="a00081.htm#gaec4970aac125bcf0d8a0b10a118222f7" title="Загружает из файла изображение в формате BMP. Делает это довольно медленно.">txLoadImage()</a>, <a class="el" href="a00081.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC()</a>, <a class="el" href="a00081.htm#ga45389db909311454bbdfed3898d760d1" title="Сохраняет в файл изображение в формате BMP.">txSaveImage()</a>, <a class="el" href="a00081.htm#ga11074386e81c0c8677f36c0a16ac0aa1" title="Возвращает размер окна, картинки или холста в виде структуры POINT.">txGetExtent()</a>, <a class="el" href="a00081.htm#ga1008da052f2fbe9ec0f70c2f6b4f0700" title="Создает дополнительный холст (контекст рисования, Device Context, DC) в памяти.">txCreateCompatibleDC()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <span class="keywordtype">int</span> main()
              {
              <a class="code" href="a00081.htm#gafce21ce98474d5559f316b3d47cdbfab" title="Создание окна рисования">txCreateWindow</a> (800, 600);

              POINT size = <a class="code" href="a00081.htm#ga11074386e81c0c8677f36c0a16ac0aa1" title="Возвращает размер окна, картинки или холста в виде структуры POINT.">txGetExtent</a>();

              <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a9f0adfcb24eeb418fc39fe950db65ec8" title="Черный цвет.">TX_BLACK</a>);
              <a class="code" href="a00081.htm#gaa148d2040d20ed74cf46ab186c35f9ed" title="Запрещает или разрешает рисование мигающего курсора в окне.">txTextCursor</a> (<span class="keyword">false</span>);
              <a class="code" href="a00081.htm#gae92e621aaed81f90e4d142356e38762a" title="Блокирует обновление изображения окна, во избежание мигания.">txBegin</a>();

              HDC src = GetDC (HWND_DESKTOP);                       <span class="comment">// Get HDC from Windows Desktop</span>

              RGBQUAD* buf = NULL;                                  <span class="comment">// Do NOT actually create the array!</span>
              HDC dc = <a class="code" href="a00081.htm#ga7535f88c0fd15b4b49195060d38f2603" title="Создает аппаратно-независимый дополнительный холст (контекст рисования, Device Context, DC) в памяти с возможностью прямого доступа к нему как к массиву.">txCreateDIBSection</a> (size.x, size.y, &amp;buf);
              assert (dc); assert (buf);                            <span class="comment">// Here, &#39;buf&#39; points to an array created</span>
                                                                    <span class="comment">// by txCreateDIBSection()</span>
              <span class="keywordflow">while</span> (!GetAsyncKeyState (VK_ESCAPE))
                  {
                  <a class="code" href="a00081.htm#ga6dfb121b4a1116f987baeb515713cbbf" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt</a> (dc, 0, 0, size.x, size.y, src);

                  <span class="keywordflow">for</span> (<span class="keywordtype">int</span> y = 0; y &lt; size.y; y++)
                  <span class="keywordflow">for</span> (<span class="keywordtype">int</span> x = 0; x &lt; size.x; x++)
                      {
                      RGBQUAD* c = &amp; buf [x + y * size.x];          <span class="comment">// Get color at (x, y) within image buffer</span>

                      c-&gt;rgbRed      = (BYTE) c-&gt;rgbRed;
                      c-&gt;rgbGreen    = (BYTE) c-&gt;rgbGreen;
                      c-&gt;rgbBlue     = (BYTE) c-&gt;rgbBlue;

                      <span class="keywordtype">double</span> r       = hypot (x - size.x/2, y - size.y/2);
                      <span class="keywordtype">double</span> alpha   = sin (0.05 * r) * 0.1 + 0.5;

                      c-&gt;rgbReserved = (BYTE) <a class="code" href="a00080.htm#gacd66e8cacf954c3bc3bba81d09425a12" title="Округляет число до целого">ROUND</a> (255 * alpha);  <span class="comment">// Set alpha-channel (transparency)</span>
                      }

                  <a class="code" href="a00081.htm#ga6280d640bb3b08dc82c8dd29caf5ff47" title="Пересчитывает цвета пикселей с учетом прозрачности (переводит цвета в формат Premultiplied Alpha)...">txUseAlpha</a> (dc) asserted;                         <span class="comment">// Premultiply colors with alpha</span>

                  <a class="code" href="a00081.htm#ga78e83baeb6a02d5fa33dd8b062e513d9" title="Стирает холст текущим цветом заполнения.">txClear</a>();
                  <a class="code" href="a00081.htm#ga4d6f780cdef622df0fda71d0b3cfee52" title="Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом полупрозрачности...">txAlphaBlend</a> (<a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), 0, 0, 0, 0, dc);

                  printf (&quot;FPS %.0lf\t\t\r&quot;, <a class="code" href="a00081.htm#ga1aca71127c9986f995b2372903d65964" title="Выдает количество кадров (вызовов этой функции) в секунду.">txGetFPS</a>());
                  <a class="code" href="a00081.htm#ga6c293f0b0f71efebdeeb0b56a97ba50c" title="Задерживает выполнение программы на определенное время.">txSleep</a> (0);
                  }

              <a class="code" href="a00081.htm#ga45389db909311454bbdfed3898d760d1" title="Сохраняет в файл изображение в формате BMP.">txSaveImage</a> (&quot;TxFilter.bmp&quot;, dc);

              <a class="code" href="a00081.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC</a> (dc);
              ReleaseDC (HWND_DESKTOP, src);                        <span class="comment">// Free Windows Desktop HDC</span>

              return 0;
              }
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gaec4970aac125bcf0d8a0b10a118222f7"></a><!-- doxytag: member="TXLib.h::txLoadImage" ref="gaec4970aac125bcf0d8a0b10a118222f7" args="(const char filename[], unsigned imageFlags=IMAGE_BITMAP, unsigned loadFlags=LR_LOADFROMFILE) tx_nodiscard" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">HDC txLoadImage </td>
          <td>(</td>
          <td class="paramtype">const char&#160;</td>
          <td class="paramname"><em>filename</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>imageFlags</em> = <code>IMAGE_BITMAP</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>loadFlags</em> = <code>LR_LOADFROMFILE</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Загружает из файла изображение в формате BMP. Делает это довольно медленно. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">filename</td><td>Имя файла с изображением в формате BMP. </td></tr>
    <tr><td class="paramname">imageFlags</td><td><em>Тип загружаемого изображения, см. ниже. Необязателен. Если не указаны, загружается рисунок в формате BMP.</em> </td></tr>
    <tr><td class="paramname">loadFlags</td><td><em>Флаги загрузки изображения, см. ниже. Необязательны. Если не указаны, загрузка идет из файла.</em></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Дескриптор созданного контекста рисования в памяти, с загруженным изображением. Если изображение не загружено (не найден файл, неверный формат файла и т.д.), то NULL.</dd></dl>
<dl class="warning"><dt><b>Предупреждения:</b></dt><dd>Изображение загружается в автоматически создаваемый контекст рисования в памяти ("виртуальный холст"), который затем будет нужно <b>обязательно удалить</b> при помощи <a class="el" href="a00081.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC()</a>. <br/>
<br/>
 <small>When the program will be shutting down, TXLib will try to delete DCs which were not deleted, but this is not guaranteed.</small></dd></dl>
<dl class="note"><dt><b>Заметки:</b></dt><dd>Изображения поддерживаются <b>только в формате BMP.</b> Если взять файл другого формата, например JPG, и переименовать его со сменой расширения на BMP, то от этого формат не изменится. Такое изображение загружено не будет.</dd></dl>
<p>Если функция вернула NULL, то надо прежде всего <b>проверить наличие файла изображения</b> по указанному в программе пути и формат файла. Если путь к файлу не указан (или указан как неполный), то путь отсчитывается от текущей папки программы, которая может не совпадать текущей папкой среды программирования. Текущую папку программы можно посмотреть по команде About в системном меню (она указана там как "Run from").</p>
<p>Если изображение в файле содержит альфа-канал (информацию о прозрачности), то его цвета должны находиться в формате <b>Premultiplied Alpha</b>. См. замечания к функции <a class="el" href="a00081.htm#ga4d6f780cdef622df0fda71d0b3cfee52" title="Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом полупрозрачности...">txAlphaBlend()</a>.</p>
<p>Если изображение в файле с альфа-каналом <b>не</b> находится в формате <b>Premultiplied Alpha</b>, то после вызова <a class="el" href="a00081.htm#gaec4970aac125bcf0d8a0b10a118222f7" title="Загружает из файла изображение в формате BMP. Делает это довольно медленно.">txLoadImage()</a> нужно вызвать функцию <a class="el" href="a00081.htm#ga6280d640bb3b08dc82c8dd29caf5ff47" title="Пересчитывает цвета пикселей с учетом прозрачности (переводит цвета в формат Premultiplied Alpha)...">txUseAlpha()</a>. Однако не надо этого делать, если цвета в файле <b>уже</b> находятся в формате Premultiplied Alpha, иначе картинка станет темнее. Также не надо вызывать <a class="el" href="a00081.htm#ga6280d640bb3b08dc82c8dd29caf5ff47" title="Пересчитывает цвета пикселей с учетом прозрачности (переводит цвета в формат Premultiplied Alpha)...">txUseAlpha()</a> несколько раз для одного и того же изображения.</p>
<dl class="note"><dt><b>Заметки:</b></dt><dd><b>Не надо часто загружать</b> одно и то же изображение, особенно в цикле. От этого программа начинает тормозить! <br/>
 </dd>
<dd>
Загрузите один раз <em>перед</em> циклом, потом используйте много раз. Посмотрите, как это сделано в примере <a class="el" href="a00054.htm" title="Пример использования функций txLoadImage(), txDeleteDC(), txBitBlt(), txTransparentBlt(), txAlphaBlend().">TX\Examples\Tennis\Tennis.cpp</a>.</dd></dl>
<dl>
<dt>Типы загружаемых изображений: </dt>
<dd><table  border="0">
<tr valign="top">
<td>IMAGE_BITMAP &#160;&#160;</td><td>Рисунок в формате BMP </td></tr>
<tr valign="top">
<td>IMAGE_CURSOR &#160;&#160;</td><td>Курсор в формате CUR или ANI </td></tr>
<tr valign="top">
<td>IMAGE_ICON &#160;&#160;</td><td>Иконка в формате ICO </td></tr>
</table>
</dd>
</dl>
<dl>
<dt>Флаги загрузки: </dt>
<dd><table  border="0">
<tr valign="top">
<td>LR_CREATEDIBSECTION &#160;&#160;</td><td>Создает DIB (device-indepandent bitmap), удобную для прямого доступа к данным </td></tr>
<tr valign="top">
<td>LR_LOADFROMFILE &#160;&#160;</td><td>Загружает из файла (если этот флаг не указан, то загружает из ресурса EXE-файла) </td></tr>
<tr valign="top">
<td>Остальные флаги загрузки &#160;&#160;</td><td>см. на MSDN.com, поиск "LoadImage function". </td></tr>
</table>
</dd>
</dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#gafce21ce98474d5559f316b3d47cdbfab" title="Создание окна рисования">txCreateWindow()</a>, <a class="el" href="a00081.htm#ga1008da052f2fbe9ec0f70c2f6b4f0700" title="Создает дополнительный холст (контекст рисования, Device Context, DC) в памяти.">txCreateCompatibleDC()</a>, <a class="el" href="a00081.htm#gaec4970aac125bcf0d8a0b10a118222f7" title="Загружает из файла изображение в формате BMP. Делает это довольно медленно.">txLoadImage()</a>, <a class="el" href="a00081.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC()</a>, <a class="el" href="a00081.htm#ga6dfb121b4a1116f987baeb515713cbbf" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt()</a>, <a class="el" href="a00081.htm#ga4d6f780cdef622df0fda71d0b3cfee52" title="Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом полупрозрачности...">txAlphaBlend()</a>, <a class="el" href="a00081.htm#ga54f48f0bcb9453add294e0a9f8b1fb1d" title="Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом прозрачности...">txTransparentBlt()</a>, <a class="el" href="a00081.htm#ga45389db909311454bbdfed3898d760d1" title="Сохраняет в файл изображение в формате BMP.">txSaveImage()</a>, <a class="el" href="a00081.htm#ga11074386e81c0c8677f36c0a16ac0aa1" title="Возвращает размер окна, картинки или холста в виде структуры POINT.">txGetExtent()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd>Пример использования см. в файле <a class="el" href="a00054.htm" title="Пример использования функций txLoadImage(), txDeleteDC(), txBitBlt(), txTransparentBlt(), txAlphaBlend().">TX\Examples\Tennis\Tennis.cpp</a>. <div class="fragment"><pre class="fragment">          HDC  background_CopiedFromHelp = <a class="code" href="a00081.htm#gaec4970aac125bcf0d8a0b10a118222f7" title="Загружает из файла изображение в формате BMP. Делает это довольно медленно.">txLoadImage</a> (<span class="stringliteral">&quot;Resources\\Images\\Background.bmp&quot;</span>);

          <span class="keywordflow">if</span> (!background_CopiedFromHelp)
              <a class="code" href="a00080.htm#gaf9be7d98f32c0737a2d7f30039a60c0a" title="Выводит сообщение в окне с помощью функции MessageBox.">txMessageBox</a> (<span class="stringliteral">&quot;Не могу загрузить фон из Background.bmp&quot;</span>, <span class="stringliteral">&quot;Да, я скопировал это из примера&quot;</span>);

          <span class="comment">// Не надо часто загружать одно и то же изображение, особенно в цикле -- программа будет тормозить!</span>
          <span class="comment">// Загрузите один раз перед циклом, потом используйте много раз.</span>
          <span class="comment">// Посмотрите, как сделано в примере TX\Examples\Tennis\Tennis.cpp.</span>

          <a class="code" href="a00081.htm#ga6dfb121b4a1116f987baeb515713cbbf" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt</a> (<a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), 0, 0, 800, 600, background_CopiedFromHelp, 0, 0);

          ...
          <a class="code" href="a00081.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC</a> (background_CopiedFromHelp);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga505f212582bf9b2bf95a4ef15f84af42"></a><!-- doxytag: member="TXLib.h::txDeleteDC" ref="ga505f212582bf9b2bf95a4ef15f84af42" args="(HDC dc)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txDeleteDC </td>
          <td>(</td>
          <td class="paramtype">HDC&#160;</td>
          <td class="paramname"><em>dc</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Уничтожает холст (контекст рисования, DC) в памяти. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">dc</td><td>Контекст рисования для уничтожения. <br/>
 <em>Если передан указатель на контекст, то после уничтожения по указателю записывается NULL.</em></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна -- true, иначе -- false.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#gafce21ce98474d5559f316b3d47cdbfab" title="Создание окна рисования">txCreateWindow()</a>, <a class="el" href="a00081.htm#ga1008da052f2fbe9ec0f70c2f6b4f0700" title="Создает дополнительный холст (контекст рисования, Device Context, DC) в памяти.">txCreateCompatibleDC()</a>, <a class="el" href="a00081.htm#gaec4970aac125bcf0d8a0b10a118222f7" title="Загружает из файла изображение в формате BMP. Делает это довольно медленно.">txLoadImage()</a>, <a class="el" href="a00081.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC()</a>, <a class="el" href="a00081.htm#ga45389db909311454bbdfed3898d760d1" title="Сохраняет в файл изображение в формате BMP.">txSaveImage()</a>, <a class="el" href="a00081.htm#ga11074386e81c0c8677f36c0a16ac0aa1" title="Возвращает размер окна, картинки или холста в виде структуры POINT.">txGetExtent()</a>, <a class="el" href="a00081.htm#ga7535f88c0fd15b4b49195060d38f2603" title="Создает аппаратно-независимый дополнительный холст (контекст рисования, Device Context, DC) в памяти с возможностью прямого доступа к нему как к массиву.">txCreateDIBSection()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd>Пример использования см. в файле <a class="el" href="a00054.htm" title="Пример использования функций txLoadImage(), txDeleteDC(), txBitBlt(), txTransparentBlt(), txAlphaBlend().">TX\Examples\Tennis\Tennis.cpp</a>. <div class="fragment"><pre class="fragment">          HDC  background_CopiedFromHelp = <a class="code" href="a00081.htm#gaec4970aac125bcf0d8a0b10a118222f7" title="Загружает из файла изображение в формате BMP. Делает это довольно медленно.">txLoadImage</a> (<span class="stringliteral">&quot;Resources\\Images\\Background.bmp&quot;</span>);

          <span class="keywordflow">if</span> (!background_CopiedFromHelp)
              <a class="code" href="a00080.htm#gaf9be7d98f32c0737a2d7f30039a60c0a" title="Выводит сообщение в окне с помощью функции MessageBox.">txMessageBox</a> (<span class="stringliteral">&quot;Не могу загрузить фон из Background.bmp, и я скопировал это из примера.&quot;</span>, <span class="stringliteral">&quot;Oh, not now&quot;</span>);

          <span class="comment">// См. важный комментарий в примере к функции txLoadImage!</span>

          <a class="code" href="a00081.htm#ga6dfb121b4a1116f987baeb515713cbbf" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt</a> (<a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), 0, 0, 800, 600, background_CopiedFromHelp, 0, 0);

          ...
          <a class="code" href="a00081.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC</a> (background_CopiedFromHelp);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga6dfb121b4a1116f987baeb515713cbbf"></a><!-- doxytag: member="TXLib.h::txBitBlt" ref="ga6dfb121b4a1116f987baeb515713cbbf" args="(HDC destImage, double xDest, double yDest, double width, double height, HDC sourceImage, double xSource=0, double ySource=0, unsigned operation=SRCCOPY)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txBitBlt </td>
          <td>(</td>
          <td class="paramtype">HDC&#160;</td>
          <td class="paramname"><em>destImage</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>xDest</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>yDest</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>height</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HDC&#160;</td>
          <td class="paramname"><em>sourceImage</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>xSource</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>ySource</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>operation</em> = <code>SRCCOPY</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Копирует изображение с одного холста (контекста рисования, DC) на другой. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">destImage</td><td>Контекст назначения (куда копировать). Для копирования в окно TXLib укажите <a class="el" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC()</a>. </td></tr>
    <tr><td class="paramname">xDest</td><td>X-координата верхнего левого угла копируемого изображения. </td></tr>
    <tr><td class="paramname">yDest</td><td>Y-координата верхнего левого угла копируемого изображения. </td></tr>
    <tr><td class="paramname">width</td><td>Ширина копируемой области. <em>Если равна 0, то равна ширине изображения-источника.</em> </td></tr>
    <tr><td class="paramname">height</td><td>Высота копируемой области. <em>Если равна 0, то равна высоте изображения-источника.</em> </td></tr>
    <tr><td class="paramname">sourceImage</td><td>Контекст источника (откуда копировать). </td></tr>
    <tr><td class="paramname">xSource</td><td><em>X-координата верхнего левого угла копируемой области внутри изображения-источника. Необязательна. Если не указана, то 0.</em> </td></tr>
    <tr><td class="paramname">ySource</td><td><em>Y-координата верхнего левого угла копируемой области внутри изображения-источника. Необязательна. Если не указана, то 0.</em> </td></tr>
    <tr><td class="paramname">operation</td><td><em>Вид операции копирования. Список видов гуглите по запросу "BitBlt function MSDN". Необязательен. Если не указан, то <code>SRCCOPY</code> (обычное копирование изображения).</em></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна -- true, иначе -- false.</dd></dl>
<dl class="warning"><dt><b>Предупреждения:</b></dt><dd>Если контексты источника равен NULL, то он не существует и копирование вызовет ошибку. Наиболее частая причина -- ошибка при загрузке файла изображения и отсутствие проверки на эту ошибку. Пример с проверкой на правильность загрузки см. ниже.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#ga4d6f780cdef622df0fda71d0b3cfee52" title="Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом полупрозрачности...">txAlphaBlend()</a>, <a class="el" href="a00081.htm#ga54f48f0bcb9453add294e0a9f8b1fb1d" title="Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом прозрачности...">txTransparentBlt()</a>, <a class="el" href="a00081.htm#ga45389db909311454bbdfed3898d760d1" title="Сохраняет в файл изображение в формате BMP.">txSaveImage()</a>, <a class="el" href="a00081.htm#ga11074386e81c0c8677f36c0a16ac0aa1" title="Возвращает размер окна, картинки или холста в виде структуры POINT.">txGetExtent()</a>, <a class="el" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, <a class="el" href="a00081.htm#gab6462db4dbcca4915d460036c6c8896d" title="Возвращает текущий цвет линий и текста.">txGetColor()</a>, <a class="el" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00081.htm#ga4d83b7e2d67f422cf703e15f2d7c4dfa" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00081.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a>, <a class="el" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a>, <a class="el" href="a00081.htm#ga7535f88c0fd15b4b49195060d38f2603" title="Создает аппаратно-независимый дополнительный холст (контекст рисования, Device Context, DC) в памяти с возможностью прямого доступа к нему как к массиву.">txCreateDIBSection()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd>Пример использования см. в файле <a class="el" href="a00054.htm" title="Пример использования функций txLoadImage(), txDeleteDC(), txBitBlt(), txTransparentBlt(), txAlphaBlend().">TX\Examples\Tennis\Tennis.cpp</a>. <div class="fragment"><pre class="fragment">          HDC  background_CopiedFromHelp = <a class="code" href="a00081.htm#gaec4970aac125bcf0d8a0b10a118222f7" title="Загружает из файла изображение в формате BMP. Делает это довольно медленно.">txLoadImage</a> (<span class="stringliteral">&quot;Resources\\Images\\Background.bmp&quot;</span>);

          <span class="keywordflow">if</span> (!background_CopiedFromHelp)
              (<span class="stringliteral">&quot;Не могу фон из загрузить Background.bmp, и да, я взял этот код из примера.&quot;</span>, <span class="stringliteral">&quot;Once again :(&quot;</span>);

          <span class="comment">// См. важный комментарий в примере к функции txLoadImage!</span>

          <a class="code" href="a00081.htm#ga6dfb121b4a1116f987baeb515713cbbf" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt</a> (<a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), 0, 0, 800, 600, background_CopiedFromHelp);

          ...
          <a class="code" href="a00081.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC</a> (background_CopiedFromHelp);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga3cb3f1af2aed93b9df7b7e9730e2cb89"></a><!-- doxytag: member="TXLib.h::txBitBlt" ref="ga3cb3f1af2aed93b9df7b7e9730e2cb89" args="(double xDest, double yDest, HDC sourceImage, double xSource=0, double ySource=0)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txBitBlt </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>xDest</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>yDest</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HDC&#160;</td>
          <td class="paramname"><em>sourceImage</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>xSource</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>ySource</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Копирует изображение на экран. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">xDest</td><td>X-координата верхнего левого угла копируемого изображения. </td></tr>
    <tr><td class="paramname">yDest</td><td>Y-координата верхнего левого угла копируемого изображения. </td></tr>
    <tr><td class="paramname">sourceImage</td><td>Копируемое изображение. </td></tr>
    <tr><td class="paramname">xSource</td><td><em>X-координата верхнего левого угла копируемой области внутри изображения-источника. Необязательна. Если не указана, то 0.</em> </td></tr>
    <tr><td class="paramname">ySource</td><td><em>Y-координата верхнего левого угла копируемой области внутри изображения-источника. Необязательна. Если не указана, то 0.</em></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна -- true, иначе -- false.</dd></dl>
<p>См. описание в функции <a class="el" href="a00081.htm#ga6dfb121b4a1116f987baeb515713cbbf" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt()</a> выше. </p>

</div>
</div>
<a class="anchor" id="ga54f48f0bcb9453add294e0a9f8b1fb1d"></a><!-- doxytag: member="TXLib.h::txTransparentBlt" ref="ga54f48f0bcb9453add294e0a9f8b1fb1d" args="(HDC destImage, double xDest, double yDest, double width, double height, HDC sourceImage, double xSource=0, double ySource=0, COLORREF transColor=TX_BLACK)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txTransparentBlt </td>
          <td>(</td>
          <td class="paramtype">HDC&#160;</td>
          <td class="paramname"><em>destImage</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>xDest</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>yDest</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>height</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HDC&#160;</td>
          <td class="paramname"><em>sourceImage</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>xSource</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>ySource</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">COLORREF&#160;</td>
          <td class="paramname"><em>transColor</em> = <code>TX_BLACK</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом прозрачности. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">destImage</td><td>Контекст назначения (куда копировать). Для копирования в окно TXLib укажите <a class="el" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC()</a>. </td></tr>
    <tr><td class="paramname">xDest</td><td>X-координата верхнего левого угла копируемого изображения. </td></tr>
    <tr><td class="paramname">yDest</td><td>Y-координата верхнего левого угла копируемого изображения. </td></tr>
    <tr><td class="paramname">width</td><td>Ширина копируемой области. <em>Если равна 0, то автоматически берется из размера источника.</em> </td></tr>
    <tr><td class="paramname">height</td><td>Высота копируемой области. <em>Если равна 0, то автоматически берется из размера источника.</em> </td></tr>
    <tr><td class="paramname">sourceImage</td><td>Контекст источника (откуда копировать). </td></tr>
    <tr><td class="paramname">xSource</td><td><em>X-координата верхнего левого угла копируемой области внутри изображения-источника. Необязательна. Если не указана, то 0.</em> </td></tr>
    <tr><td class="paramname">ySource</td><td><em>Y-координата верхнего левого угла копируемой области внутри изображения-источника. Необязательна. Если не указана, то 0.</em> </td></tr>
    <tr><td class="paramname">transColor</td><td><em>Цвет, который будет считаться прозрачным. Необязателен. Если не указан, то TX_BLACK.</em></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна -- true, иначе -- false.</dd></dl>
<dl class="warning"><dt><b>Предупреждения:</b></dt><dd>Если контекст источника равен NULL, то он не существует и копирование вызовет ошибку. Наиболее частая причина -- ошибка при загрузке файла изображения и отсутствие проверки на эту ошибку. Пример с проверкой на правильность загрузки см. ниже. <br/>
<br/>
</dd>
<dd>
Изображение-источник и изображение-приемник не могут налагаться друг на друга. <br/>
<br/>
</dd>
<dd>
Если прямоугольник копируемой области не полностью лежит внутри изображения-источника, то функция работать не будет. Такое бывает, если xSource или ySource отрицательны, или величина (xSource + width) больше ширины изображения-источника, или величина (ySource + height) больше высоты изображения-источника.</dd></dl>
<p>Стандартная функция TransparentBlt из Win32 API может масштабировать изображение. В txTransparentBlt это убрано для упрощения использования. If you need image scaling, use original function TransparentBlt and don't mess with stupid TX-based tools. (See implementation of txTransparentBlt in <a class="el" href="a00058.htm" title="Библиотека Тупого Художника (The Dumb Artist Library, TX Library, TXLib).">TXLib.h</a>).</p>
<dl class="note"><dt><b>Заметки:</b></dt><dd>Если TransparentBlt не работает, используйте функцию AlphaBlend, она вообще лучше.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#ga6dfb121b4a1116f987baeb515713cbbf" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt()</a>, <a class="el" href="a00081.htm#ga54f48f0bcb9453add294e0a9f8b1fb1d" title="Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом прозрачности...">txTransparentBlt()</a>, <a class="el" href="a00081.htm#gaec4970aac125bcf0d8a0b10a118222f7" title="Загружает из файла изображение в формате BMP. Делает это довольно медленно.">txLoadImage()</a>, <a class="el" href="a00081.htm#ga1008da052f2fbe9ec0f70c2f6b4f0700" title="Создает дополнительный холст (контекст рисования, Device Context, DC) в памяти.">txCreateCompatibleDC()</a>, <a class="el" href="a00081.htm#ga45389db909311454bbdfed3898d760d1" title="Сохраняет в файл изображение в формате BMP.">txSaveImage()</a>, <a class="el" href="a00081.htm#ga11074386e81c0c8677f36c0a16ac0aa1" title="Возвращает размер окна, картинки или холста в виде структуры POINT.">txGetExtent()</a>, <a class="el" href="a00081.htm#ga7535f88c0fd15b4b49195060d38f2603" title="Создает аппаратно-независимый дополнительный холст (контекст рисования, Device Context, DC) в памяти с возможностью прямого доступа к нему как к массиву.">txCreateDIBSection()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd>Пример использования см. в файле <a class="el" href="a00054.htm" title="Пример использования функций txLoadImage(), txDeleteDC(), txBitBlt(), txTransparentBlt(), txAlphaBlend().">TX\Examples\Tennis\Tennis.cpp</a>. <div class="fragment"><pre class="fragment">          HDC  superman_CopiedFromHelp = <a class="code" href="a00081.htm#gaec4970aac125bcf0d8a0b10a118222f7" title="Загружает из файла изображение в формате BMP. Делает это довольно медленно.">txLoadImage</a> (<span class="stringliteral">&quot;Resources\\Images\\Superman.bmp&quot;</span>);

          <span class="keywordflow">if</span> (!superman_CopiedFromHelp)
              <a class="code" href="a00080.htm#gaf9be7d98f32c0737a2d7f30039a60c0a" title="Выводит сообщение в окне с помощью функции MessageBox.">txMessageBox</a> (<span class="stringliteral">&quot;Cannot load superman, all the monsters will succeed (I copied them from TXLib Help)&quot;</span>, <span class="stringliteral">&quot;Sorry&quot;</span>);

          <span class="comment">// См. важный комментарий в примере к функции txLoadImage!</span>

          <a class="code" href="a00081.htm#ga54f48f0bcb9453add294e0a9f8b1fb1d" title="Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом прозрачности...">txTransparentBlt</a> (<a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), 0, 0, 800, 600, superman_CopiedFromHelp);

          <span class="comment">// А можно и так:</span>
          Win32::TransparentBlt (<a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), 0, 0, 800, 600, superman_CopiedFromHelp, 0, 0, 80, 60, -1); <span class="comment">// 10x zoom</span>
          <span class="comment">// Познай мощь Win32 GDI, отказавшись от TXLib&#39;а! :) см. TransparentBlt в MSDN.com.</span>

          ...
          <a class="code" href="a00081.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC</a> (superman_CopiedFromHelp);  <span class="comment">// So pity :( But he was only a copy from TXLib Help.</span>
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga6e5105284a1d93aff19fc29d14a8a532"></a><!-- doxytag: member="TXLib.h::txTransparentBlt" ref="ga6e5105284a1d93aff19fc29d14a8a532" args="(double xDest, double yDest, HDC sourceImage, COLORREF transColor=TX_BLACK, double xSource=0, double ySource=0)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txTransparentBlt </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>xDest</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>yDest</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HDC&#160;</td>
          <td class="paramname"><em>sourceImage</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">COLORREF&#160;</td>
          <td class="paramname"><em>transColor</em> = <code>TX_BLACK</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>xSource</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>ySource</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Копирует изображение на экран с учетом прозрачности. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">xDest</td><td>X-координата верхнего левого угла копируемого изображения. </td></tr>
    <tr><td class="paramname">yDest</td><td>Y-координата верхнего левого угла копируемого изображения. </td></tr>
    <tr><td class="paramname">sourceImage</td><td>Копируемое изображение. </td></tr>
    <tr><td class="paramname">transColor</td><td><em>Цвет, который будет считаться прозрачным. Необязателен. Если не указан, то TX_BLACK.</em> </td></tr>
    <tr><td class="paramname">xSource</td><td><em>X-координата верхнего левого угла копируемой области внутри изображения-источника. Необязательна. Если не указана, то 0.</em> </td></tr>
    <tr><td class="paramname">ySource</td><td><em>Y-координата верхнего левого угла копируемой области внутри изображения-источника. Необязательна. Если не указана, то 0.</em></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна -- true, иначе -- false.</dd></dl>
<p>См. описание в функции <a class="el" href="a00081.htm#ga54f48f0bcb9453add294e0a9f8b1fb1d" title="Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом прозрачности...">txTransparentBlt()</a> выше. </p>

</div>
</div>
<a class="anchor" id="ga4d6f780cdef622df0fda71d0b3cfee52"></a><!-- doxytag: member="TXLib.h::txAlphaBlend" ref="ga4d6f780cdef622df0fda71d0b3cfee52" args="(HDC destImage, double xDest, double yDest, double width, double height, HDC sourceImage, double xSource=0, double ySource=0, double alpha=1.0)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txAlphaBlend </td>
          <td>(</td>
          <td class="paramtype">HDC&#160;</td>
          <td class="paramname"><em>destImage</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>xDest</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>yDest</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>height</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HDC&#160;</td>
          <td class="paramname"><em>sourceImage</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>xSource</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>ySource</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>alpha</em> = <code>1.0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом полупрозрачности. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">destImage</td><td>Контекст назначения (куда копировать). Для копирования в окно TXLib укажите <a class="el" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC()</a>. </td></tr>
    <tr><td class="paramname">xDest</td><td>X-координата верхнего левого угла копируемого изображения. </td></tr>
    <tr><td class="paramname">yDest</td><td>Y-координата верхнего левого угла копируемого изображения. </td></tr>
    <tr><td class="paramname">width</td><td>Ширина копируемой области. <em>Если равна 0, то равна ширине изображения-источника.</em> </td></tr>
    <tr><td class="paramname">height</td><td>Высота копируемой области. <em>Если равна 0, то равна высоте изображения-источника.</em> </td></tr>
    <tr><td class="paramname">sourceImage</td><td>Контекст источника (откуда копировать). Должен иметь 32-битовый формат и альфа-канал (см. ниже). </td></tr>
    <tr><td class="paramname">xSource</td><td><em>X-координата верхнего левого угла копируемой области внутри изображения-источника. Необязательна. Если не указана, то 0.</em> </td></tr>
    <tr><td class="paramname">ySource</td><td><em>Y-координата верхнего левого угла копируемой области внутри изображения-источника. Необязательна. Если не указана, то 0.</em> </td></tr>
    <tr><td class="paramname">alpha</td><td><em>Общая прозрачность изображения, в дополнение к альфа-каналу (0 -- все прозрачно, 1 -- использовать только альфа-канал). Необязательна. Если не указана, то 1.</em></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна -- true, иначе -- false.</dd></dl>
<dl class="warning"><dt><b>Предупреждения:</b></dt><dd>Если контекст источника равен NULL, то он не существует и копирование вызовет ошибку. Наиболее частая причина -- ошибка при загрузке файла изображения и отсутствие проверки на эту ошибку. Пример с проверкой на правильность загрузки см. ниже. <br/>
<br/>
</dd>
<dd>
Изображение-источник и изображение-приемник не могут налагаться друг на друга. <br/>
<br/>
</dd>
<dd>
Если прямоугольник копируемой области не полностью лежит внутри изображения-источника, то функция работать не будет. Такое бывает, если xSource или ySource отрицательны, или величина (xSource + width) больше ширины изображения-источника, или величина (ySource + height) больше высоты изображения-источника.</dd></dl>
<dl class="note"><dt><b>Заметки:</b></dt><dd>Изображение-источник должно быть загружено с помощью <a class="el" href="a00081.htm#gaec4970aac125bcf0d8a0b10a118222f7" title="Загружает из файла изображение в формате BMP. Делает это довольно медленно.">txLoadImage()</a> и иметь <b>32-битовый RGBA-формат.</b> Дополнительный канал <b>(A: альфа-канал)</b> 32-битового формата отвечает за попиксельную прозрачность участков изображения: для каждого пикселя в этом канале значение 0 означает его полную прозрачность, значение 255 -- полную непрозрачность, промежуточные значения -- полупрозрачность. <br/>
<br/>
</dd></dl>
<p>Пустое 32-битовое изображение-источник также может быть создано с помощью функции <a class="el" href="a00081.htm#ga7535f88c0fd15b4b49195060d38f2603" title="Создает аппаратно-независимый дополнительный холст (контекст рисования, Device Context, DC) в памяти с возможностью прямого доступа к нему как к массиву.">txCreateDIBSection()</a>, а 24-битовое -- функцией <a class="el" href="a00081.htm#ga1008da052f2fbe9ec0f70c2f6b4f0700" title="Создает дополнительный холст (контекст рисования, Device Context, DC) в памяти.">txCreateCompatibleDC()</a>. После создания на этом изображении можно рисовать, как на основном окне TXLib, используя параметр <code>dc</code> функций рисования.</p>
<dl class="warning"><dt><b>Предупреждения:</b></dt><dd>Если изображение имеет 32-битовый RGBA-формат файла, то его альфа-канал не должен быть полностью черным, иначе <a class="el" href="a00081.htm#ga4d6f780cdef622df0fda71d0b3cfee52" title="Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом полупрозрачности...">txAlphaBlend()</a> посчитает изображение полностью прозрачным и не выведет на экран ничего. <br/>
<br/>
</dd></dl>
<p>Если изображение-источник создано с помощью <a class="el" href="a00081.htm#ga7535f88c0fd15b4b49195060d38f2603" title="Создает аппаратно-независимый дополнительный холст (контекст рисования, Device Context, DC) в памяти с возможностью прямого доступа к нему как к массиву.">txCreateDIBSection()</a> или <a class="el" href="a00081.htm#gaec4970aac125bcf0d8a0b10a118222f7" title="Загружает из файла изображение в формате BMP. Делает это довольно медленно.">txLoadImage()</a>, то <a class="el" href="a00081.htm#ga4d6f780cdef622df0fda71d0b3cfee52" title="Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом полупрозрачности...">txAlphaBlend()</a> может использовать как общую прозрачность, задачаемую параметром <code>alpha</code>, так и попиксельную прозрачность, задаваемую альфа-каналом.</p>
<p>Если изображение имеет 24-битовый RGB-формат файлов (TrueColor), то это подразумевает, что попиксельной прозрачности нет и все пиксели изображения имеют равную прозрачность, задающуюся параметром <code>alpha</code>. <br/>
<br/>
</p>
<p>Имейте в виду, что многие графические редакторы сохраняют изображение в 32-битовом формате, даже если вы явно указываете 24-битовый формат или формат TrueColor. Если при этом в изображении нет альфа-канала, то txAlphaBlend не выведет ничего. Так происходит, например, если сохранять картинку в Microsoft Paint, который не умеет создавать альфа-каналы и при этом сохраняет всегда в 32-битовом формате. Для таких случаев надо использовать txTransparentBlt. <br/>
<br/>
</p>
<p>Для BMP-файла альфа-канал можно сделать, например, в Adobe Photoshop, командой "Новый канал (New Channel)" в палитре каналов (Channels). Черный цвет в альфа-канале соответствует полной прозрачности, белый -- полной непрозрачности. <b>При этом в прозрачных областях само изображение (в каналах R, G, B) должно быть черным, и чем прозрачнее, тем чернее.</b> Такой формат цвета называется <b>Premultiplied Alpha.</b> См. изображение с альфа-каналом в примере <a class="el" href="a00054.htm" title="Пример использования функций txLoadImage(), txDeleteDC(), txBitBlt(), txTransparentBlt(), txAlphaBlend().">TX\Examples\Tennis\Tennis.cpp</a> (файл с теннисной ракеткой: TX\Examples\Tennis\Resources\Images\Racket.bmp).</p>
<p>Иначе говоря, при пересчете в формат <b>Premultiplied Alpha</b> надо домножить цвета в каналах R,G,B на значения альфа-канале <code>A:</code> <code>R,G,B *= A / 255.0</code>. Получится вот что:</p>
<ul>
<li>Если значение альфа-канала для некоторого пикселя равно 0 (полная прозрачность), тогда значения каналов R,G,B для этого пикселя также станут 0 (это черный цвет).</li>
<li>Если значение альфа-канала для некоторого пикселя равно 255 (полная непрозрачность), тогда значения каналов R,G,B для этого пикселя не изменятся.</li>
<li>Для других значений альфа-канала, пиксели изображения станут темнее.</li>
</ul>
<p>В редакторе Adobe Photoshop это можно сделать командой <b>Image -- Apply Image</b> с параметрами: </p>
<table  border="0">
<tr valign="top">
<td>Source: &#160;&#160;</td><td><em>Имя файла с картинкой</em> </td></tr>
<tr valign="top">
<td>Layer: &#160;&#160;</td><td>Background </td></tr>
<tr valign="top">
<td><b>Channel:</b> &#160;&#160;</td><td><b> Alpha 1</b> </td></tr>
<tr valign="top">
<td>Blending: &#160;&#160;</td><td>Multiply </td></tr>
<tr valign="top">
<td>Opacity: &#160;&#160;</td><td>100% </td></tr>
</table>
<p>Если изображение с альфа-каналом <b>не</b> находится в формате <b>Premultiplied Alpha</b> <small>&#160;</small><span class="s"> и вам лень читать что, что написано выше, </span><small>&#160;</small> то для перевода в этот формат можно использовать функцию <a class="el" href="a00081.htm#ga6280d640bb3b08dc82c8dd29caf5ff47" title="Пересчитывает цвета пикселей с учетом прозрачности (переводит цвета в формат Premultiplied Alpha)...">txUseAlpha()</a>. Однако не надо вызывать <a class="el" href="a00081.htm#ga6280d640bb3b08dc82c8dd29caf5ff47" title="Пересчитывает цвета пикселей с учетом прозрачности (переводит цвета в формат Premultiplied Alpha)...">txUseAlpha()</a> несколько раз для одного и того же уже загруженного изображения, иначе оно может становиться темнее и темнее.</p>
<dl class="note"><dt><b>Заметки:</b></dt><dd>Стандартная функция AlphaBlend из Win32 API <b>может</b> масштабировать изображение. В txAlphaBlend это <b>убрано</b> для упрощения использования. If you still need image scaling, use original function AlphaBlend and don't mess with stupid TX-based tools. (See implementation of txAlphaBlend in <a class="el" href="a00058.htm" title="Библиотека Тупого Художника (The Dumb Artist Library, TX Library, TXLib).">TXLib.h</a>: open this file in your editor and search for txAlphaBlend function definition.)</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#ga6dfb121b4a1116f987baeb515713cbbf" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt()</a>, <a class="el" href="a00081.htm#ga54f48f0bcb9453add294e0a9f8b1fb1d" title="Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом прозрачности...">txTransparentBlt()</a>, <a class="el" href="a00081.htm#gaec4970aac125bcf0d8a0b10a118222f7" title="Загружает из файла изображение в формате BMP. Делает это довольно медленно.">txLoadImage()</a>, <a class="el" href="a00081.htm#ga1008da052f2fbe9ec0f70c2f6b4f0700" title="Создает дополнительный холст (контекст рисования, Device Context, DC) в памяти.">txCreateCompatibleDC()</a>, <a class="el" href="a00081.htm#ga45389db909311454bbdfed3898d760d1" title="Сохраняет в файл изображение в формате BMP.">txSaveImage()</a>, <a class="el" href="a00081.htm#ga11074386e81c0c8677f36c0a16ac0aa1" title="Возвращает размер окна, картинки или холста в виде структуры POINT.">txGetExtent()</a>, <a class="el" href="a00081.htm#ga7535f88c0fd15b4b49195060d38f2603" title="Создает аппаратно-независимый дополнительный холст (контекст рисования, Device Context, DC) в памяти с возможностью прямого доступа к нему как к массиву.">txCreateDIBSection()</a>, <a class="el" href="a00081.htm#ga6280d640bb3b08dc82c8dd29caf5ff47" title="Пересчитывает цвета пикселей с учетом прозрачности (переводит цвета в формат Premultiplied Alpha)...">txUseAlpha()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd>Пример использования см. в файле <a class="el" href="a00054.htm" title="Пример использования функций txLoadImage(), txDeleteDC(), txBitBlt(), txTransparentBlt(), txAlphaBlend().">TX\Examples\Tennis\Tennis.cpp</a>. <div class="fragment"><pre class="fragment">          HDC  batman_CopiedFromHelp = <a class="code" href="a00081.htm#gaec4970aac125bcf0d8a0b10a118222f7" title="Загружает из файла изображение в формате BMP. Делает это довольно медленно.">txLoadImage</a> (<span class="stringliteral">&quot;Resources\\Images\\Batman.bmp&quot;</span>);

          <span class="keywordflow">if</span> (!batman_CopiedFromHelp)
              <a class="code" href="a00080.htm#gaf9be7d98f32c0737a2d7f30039a60c0a" title="Выводит сообщение в окне с помощью функции MessageBox.">txMessageBox</a> (<span class="stringliteral">&quot;Call to Batman failed because I copied it from TXLib Help&quot;</span>, <span class="stringliteral">&quot;Do save yourself&quot;</span>);

          <a class="code" href="a00081.htm#ga6280d640bb3b08dc82c8dd29caf5ff47" title="Пересчитывает цвета пикселей с учетом прозрачности (переводит цвета в формат Premultiplied Alpha)...">txUseAlpha</a> (batman_CopiedFromHelp);  <span class="comment">// If image colors are not premultiplied, see above</span>

          <span class="comment">// См. важный комментарий в примере к функции txLoadImage!</span>

          <a class="code" href="a00081.htm#ga4d6f780cdef622df0fda71d0b3cfee52" title="Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом полупрозрачности...">txAlphaBlend</a> (<a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), 0, 0, 800, 600, batman_CopiedFromHelp);

          ...
          <a class="code" href="a00081.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC</a> (batman_CopiedFromHelp);  <span class="comment">// Don&#39;t worry, batman will return in &quot;Batman returns&quot; movie, later...</span>
          ...

          <span class="keywordflow">return</span> batman_CopiedFromHelp;        <span class="comment">// ...and there he comes -- in TXLib copy form</span>
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gaa0af478a9b959bb096a8a686d2e685b5"></a><!-- doxytag: member="TXLib.h::txAlphaBlend" ref="gaa0af478a9b959bb096a8a686d2e685b5" args="(double xDest, double yDest, HDC sourceImage, double xSource=0, double ySource=0, double alpha=1.0)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txAlphaBlend </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>xDest</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>yDest</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HDC&#160;</td>
          <td class="paramname"><em>sourceImage</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>xSource</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>ySource</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>alpha</em> = <code>1.0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Копирует изображение на экран с учетом полупрозрачности. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">xDest</td><td>X-координата верхнего левого угла копируемого изображения. </td></tr>
    <tr><td class="paramname">yDest</td><td>Y-координата верхнего левого угла копируемого изображения. </td></tr>
    <tr><td class="paramname">sourceImage</td><td>Копируемое изображение. </td></tr>
    <tr><td class="paramname">xSource</td><td><em>X-координата верхнего левого угла копируемой области внутри изображения-источника. Необязательна. Если не указана, то 0.</em> </td></tr>
    <tr><td class="paramname">ySource</td><td><em>Y-координата верхнего левого угла копируемой области внутри изображения-источника. Необязательна. Если не указана, то 0.</em> </td></tr>
    <tr><td class="paramname">alpha</td><td><em>Общая прозрачность изображения, в дополнение к альфа-каналу (0 -- все прозрачно, 1 -- использовать только альфа-канал). Необязательна. Если не указана, то 1.</em></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна -- true, иначе -- false.</dd></dl>
<p>См. описание в функции <a class="el" href="a00081.htm#ga4d6f780cdef622df0fda71d0b3cfee52" title="Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом полупрозрачности...">txAlphaBlend()</a> выше. </p>

</div>
</div>
<a class="anchor" id="ga6280d640bb3b08dc82c8dd29caf5ff47"></a><!-- doxytag: member="TXLib.h::txUseAlpha" ref="ga6280d640bb3b08dc82c8dd29caf5ff47" args="(HDC image)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">HDC txUseAlpha </td>
          <td>(</td>
          <td class="paramtype">HDC&#160;</td>
          <td class="paramname"><em>image</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Пересчитывает цвета пикселей с учетом прозрачности (переводит цвета в формат Premultiplied Alpha). </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">image</td><td>Дескриптор холста, изображение которого пересчитывается.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна, возвращается исходный HDC, иначе -- NULL.</dd></dl>
<p>Пересчет цветов в каналах R,G,B в формат <b>Premultiplied Alpha</b> с учетом значения в альфа-канале <code>A</code> идет по формуле <code>R,G,B *= A / 255.0</code>. Получается вот что:</p>
<ul>
<li>Если значение альфа-канала для некоторого пикселя равно 0 (полная прозрачность), тогда значения каналов R,G,B для этого пикселя также станут 0 (это черный цвет).</li>
<li>Если значение альфа-канала для некоторого пикселя равно 255 (полная непрозрачность), тогда значения каналов R,G,B для этого пикселя не изменятся.</li>
<li>Для других значений альфа-канала, пиксели изображения станут темнее.</li>
</ul>
<p>Пересчет цветов пикселей с учетом их прозрачности в формат Premultiplied Alpha необходим:</p>
<ul>
<li>В случае ручного изменения цветов, пример см. в функции <a class="el" href="a00081.htm#ga7535f88c0fd15b4b49195060d38f2603" title="Создает аппаратно-независимый дополнительный холст (контекст рисования, Device Context, DC) в памяти с возможностью прямого доступа к нему как к массиву.">txCreateDIBSection()</a>.</li>
<li>После загрузки картинок из файла с помощью <a class="el" href="a00081.htm#gaec4970aac125bcf0d8a0b10a118222f7" title="Загружает из файла изображение в формате BMP. Делает это довольно медленно.">txLoadImage()</a>, если цвета изображения в нем не были заранее домножены на альфа-канал в Adobe Photoshop или аналогичной программе (см. замечания к функции <a class="el" href="a00081.htm#gaa0af478a9b959bb096a8a686d2e685b5">txAlphaBlend</a>).</li>
</ul>
<p>См. также замечания к функции <a class="el" href="a00081.htm#ga4d6f780cdef622df0fda71d0b3cfee52" title="Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом полупрозрачности...">txAlphaBlend()</a>.</p>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#ga1008da052f2fbe9ec0f70c2f6b4f0700" title="Создает дополнительный холст (контекст рисования, Device Context, DC) в памяти.">txCreateCompatibleDC()</a>, <a class="el" href="a00081.htm#ga7535f88c0fd15b4b49195060d38f2603" title="Создает аппаратно-независимый дополнительный холст (контекст рисования, Device Context, DC) в памяти с возможностью прямого доступа к нему как к массиву.">txCreateDIBSection()</a>, <a class="el" href="a00081.htm#gaec4970aac125bcf0d8a0b10a118222f7" title="Загружает из файла изображение в формате BMP. Делает это довольно медленно.">txLoadImage()</a>, <a class="el" href="a00081.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC()</a>, <a class="el" href="a00081.htm#ga4d6f780cdef622df0fda71d0b3cfee52" title="Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом полупрозрачности...">txAlphaBlend()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd>См. в функции <a class="el" href="a00081.htm#ga7535f88c0fd15b4b49195060d38f2603" title="Создает аппаратно-независимый дополнительный холст (контекст рисования, Device Context, DC) в памяти с возможностью прямого доступа к нему как к массиву.">txCreateDIBSection()</a>. </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga45389db909311454bbdfed3898d760d1"></a><!-- doxytag: member="TXLib.h::txSaveImage" ref="ga45389db909311454bbdfed3898d760d1" args="(const char filename[], HDC dc=txDC())" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txSaveImage </td>
          <td>(</td>
          <td class="paramtype">const char&#160;</td>
          <td class="paramname"><em>filename</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HDC&#160;</td>
          <td class="paramname"><em>dc</em> = <code>txDC()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Сохраняет в файл изображение в формате BMP. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">filename</td><td>Имя файла с расширением "BMP", куда будет записано изображение в формате BMP. </td></tr>
    <tr><td class="paramname">dc</td><td><em>Дескриптор холста, изображение которого сохраняется в файл. Необязателен. Если <a class="el" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC()</a>, сохраняется изображение окна TXLib.</em></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна -- true, иначе -- false.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#ga1008da052f2fbe9ec0f70c2f6b4f0700" title="Создает дополнительный холст (контекст рисования, Device Context, DC) в памяти.">txCreateCompatibleDC()</a>, <a class="el" href="a00081.htm#gaec4970aac125bcf0d8a0b10a118222f7" title="Загружает из файла изображение в формате BMP. Делает это довольно медленно.">txLoadImage()</a>, <a class="el" href="a00081.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC()</a>, <a class="el" href="a00081.htm#ga6dfb121b4a1116f987baeb515713cbbf" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt()</a>, <a class="el" href="a00081.htm#ga4d6f780cdef622df0fda71d0b3cfee52" title="Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом полупрозрачности...">txAlphaBlend()</a>, <a class="el" href="a00081.htm#ga54f48f0bcb9453add294e0a9f8b1fb1d" title="Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом прозрачности...">txTransparentBlt()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00081.htm#gac76227ff55076802ea267be18b4d7a8d" title="Рисует человечка.">txDrawMan</a> (50, 110, 100, 100, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a2331cdb79541487869e7c2445a2eb5f0" title="Желтый цвет.">TX_YELLOW</a>, 0.3, -0.5, -0.4, 0, 0.8, 1, -1, 0.5, 1, 1);

          HDC dc = <a class="code" href="a00081.htm#ga1008da052f2fbe9ec0f70c2f6b4f0700" title="Создает дополнительный холст (контекст рисования, Device Context, DC) в памяти.">txCreateCompatibleDC</a> (100, 110);
          <a class="code" href="a00081.htm#ga6dfb121b4a1116f987baeb515713cbbf" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt</a> (dc, 0, 0, 100, 110, <a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>());
          <a class="code" href="a00081.htm#ga45389db909311454bbdfed3898d760d1" title="Сохраняет в файл изображение в формате BMP.">txSaveImage</a> (<span class="stringliteral">&quot;TXLibMan.bmp&quot;</span>, dc);

          <a class="code" href="a00081.htm#ga6dfb121b4a1116f987baeb515713cbbf" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt</a>     (dc,       0,   0, 100, 110, <a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>());
          <a class="code" href="a00081.htm#ga6dfb121b4a1116f987baeb515713cbbf" title="Копирует изображение с одного холста (контекста рисования, DC) на другой.">txBitBlt</a>     (<a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), 200, 200,   0,   0, dc);
          <a class="code" href="a00081.htm#ga4d6f780cdef622df0fda71d0b3cfee52" title="Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом полупрозрачности...">txAlphaBlend</a> (<a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), 100, 100,   0,   0, dc, 0, 0, 0.25, 0);
          <a class="code" href="a00081.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC</a> (dc);

          <a class="code" href="a00081.htm#ga45389db909311454bbdfed3898d760d1" title="Сохраняет в файл изображение в формате BMP.">txSaveImage</a> (<span class="stringliteral">&quot;ScreenShot.bmp&quot;</span>);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga6c293f0b0f71efebdeeb0b56a97ba50c"></a><!-- doxytag: member="TXLib.h::txSleep" ref="ga6c293f0b0f71efebdeeb0b56a97ba50c" args="(double time=0)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double txSleep </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>time</em> = <code>0</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Задерживает выполнение программы на определенное время. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">time</td><td><em>Задержка в миллисекундах. Необязательна. Если не указана, то используется минимальная возможная задержка.</em></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Реальное время задержки в миллисекундах.</dd></dl>
<dl class="note"><dt><b>Заметки:</b></dt><dd><b>Перед началом задержки изображение в окне обязательно обновится,</b> даже если рисование заблокировано через <a class="el" href="a00081.htm#gae92e621aaed81f90e4d142356e38762a" title="Блокирует обновление изображения окна, во избежание мигания.">txBegin()</a>. <br/>
<br/>
 Более полную информацию об обновлении изображения окна см. в функции <a class="el" href="a00081.htm#gae92e621aaed81f90e4d142356e38762a" title="Блокирует обновление изображения окна, во избежание мигания.">txBegin()</a>. См. также <a class="el" href="a00081.htm#ga809dc04afd5348247846ee01ce9a06e6" title="Разблокирует обновление окна, заблокированное функцией txBegin().">txEnd()</a>, <a class="el" href="a00081.htm#gadc7fd9cdc8c007693db7b6d7de794709" title="Обновляет изображение в окне TXLib вручную.">txRedrawWindow()</a>, <a class="el" href="a00081.htm#gaff3d9c60900531f438a19216485bdd41" title="Разрешает или запрещает автоматическое обновление изображения в окне.">txUpdateWindow()</a>.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#gae92e621aaed81f90e4d142356e38762a" title="Блокирует обновление изображения окна, во избежание мигания.">txBegin()</a>, <a class="el" href="a00081.htm#ga809dc04afd5348247846ee01ce9a06e6" title="Разблокирует обновление окна, заблокированное функцией txBegin().">txEnd()</a>, <a class="el" href="a00081.htm#gaff3d9c60900531f438a19216485bdd41" title="Разрешает или запрещает автоматическое обновление изображения в окне.">txUpdateWindow()</a>, <a class="el" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00081.htm#ga6c293f0b0f71efebdeeb0b56a97ba50c" title="Задерживает выполнение программы на определенное время.">txSleep</a> (500); <span class="comment">// ПП: Поспать Полсекунды</span>
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gae92e621aaed81f90e4d142356e38762a"></a><!-- doxytag: member="TXLib.h::txBegin" ref="gae92e621aaed81f90e4d142356e38762a" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int txBegin </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Блокирует обновление изображения окна, во избежание мигания. </p>
<p>Для снятия блокировки используется функция <a class="el" href="a00081.htm#ga809dc04afd5348247846ee01ce9a06e6" title="Разблокирует обновление окна, заблокированное функцией txBegin().">txEnd()</a>.</p>
<p>TXLib реализует двойную буферизацию. Все рисовательные действия происходят со скрытым HDC, находящемся в памяти, и его содержимое периодически автоматически копируется на экран. Это иногда приводит к мерцанию. Автоматическое копирование можно выключить функцией <a class="el" href="a00081.htm#gae92e621aaed81f90e4d142356e38762a" title="Блокирует обновление изображения окна, во избежание мигания.">txBegin()</a> и обратно включить функцией <a class="el" href="a00081.htm#ga809dc04afd5348247846ee01ce9a06e6" title="Разблокирует обновление окна, заблокированное функцией txBegin().">txEnd()</a>, в этом случае содержимое окна можно перерисовать функциями <a class="el" href="a00081.htm#gadc7fd9cdc8c007693db7b6d7de794709" title="Обновляет изображение в окне TXLib вручную.">txRedrawWindow()</a> или <a class="el" href="a00081.htm#ga6c293f0b0f71efebdeeb0b56a97ba50c" title="Задерживает выполнение программы на определенное время.">txSleep()</a>.</p>
<p>Если в программе требуется задержка, то используйте функции <a class="el" href="a00081.htm#gadc7fd9cdc8c007693db7b6d7de794709" title="Обновляет изображение в окне TXLib вручную.">txRedrawWindow()</a> или <a class="el" href="a00081.htm#ga6c293f0b0f71efebdeeb0b56a97ba50c" title="Задерживает выполнение программы на определенное время.">txSleep()</a>, так как они автоматически обновляют изображение, независимо от состояния блокировки.</p>
<dl class="warning"><dt><b>Предупреждения:</b></dt><dd>Избегайте блокирования на долгое время. Это может привести к дефектам изображения в окне.</dd></dl>
<dl class="note"><dt><b>Заметки:</b></dt><dd>Если нажата клавиша Alt+PrintScreen, то блокировка временно отменяется.</dd></dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Значение счетчика блокировки (если 0, то рисование разблокировано).</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#ga809dc04afd5348247846ee01ce9a06e6" title="Разблокирует обновление окна, заблокированное функцией txBegin().">txEnd()</a>, <a class="el" href="a00081.htm#ga6c293f0b0f71efebdeeb0b56a97ba50c" title="Задерживает выполнение программы на определенное время.">txSleep()</a>, <a class="el" href="a00081.htm#gaff3d9c60900531f438a19216485bdd41" title="Разрешает или запрещает автоматическое обновление изображения в окне.">txUpdateWindow()</a>, <a class="el" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC()</a>, <a class="el" href="a00081.htm#ga3a8ec79acc0dcbcc04bff3aecc235b4e" title="Возвращает буфер памяти, связанный с холстом (HDC) TXLib.">txVideoMemory()</a>, <a class="el" href="a00081.htm#gaa148d2040d20ed74cf46ab186c35f9ed" title="Запрещает или разрешает рисование мигающего курсора в окне.">txTextCursor()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00081.htm#gae92e621aaed81f90e4d142356e38762a" title="Блокирует обновление изображения окна, во избежание мигания.">txBegin</a>();                             <span class="comment">// Здесь изображение &quot;замерзнет&quot;</span>
          <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025" title="Белый цвет.">TX_WHITE</a>);
          <a class="code" href="a00081.htm#ga78e83baeb6a02d5fa33dd8b062e513d9" title="Стирает холст текущим цветом заполнения.">txClear</a>();                             <span class="comment">// Это вызвало бы мигание без txBegin()</span>
          <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a342ad901a39ab4b40f091f6699b64927" title="Темно-красный цвет. Слишком темный.">TX_RED</a>);
          <a class="code" href="a00081.htm#ga18a0418f3c06463e958077cddf2a4864" title="Рисует прямоугольник.">txRectangle</a> (100, 100, 200, 200);
          <a class="code" href="a00081.htm#ga809dc04afd5348247846ee01ce9a06e6" title="Разблокирует обновление окна, заблокированное функцией txBegin().">txEnd</a>();                               <span class="comment">// Здесь мы сразу увидим окончательный рисунок</span>

          <span class="comment">//</span>
          <span class="comment">// Как правильно использовать блокировку обновления окна в циклах:</span>
          <span class="comment">//</span>

          <span class="keywordtype">int</span> x = 0, y = 0;

          <a class="code" href="a00081.htm#gae92e621aaed81f90e4d142356e38762a" title="Блокирует обновление изображения окна, во избежание мигания.">txBegin</a>();                             <span class="comment">// Отключаем автоматическое обновление окна</span>

          <span class="keywordflow">while</span> (!GetAsyncKeyState (VK_ESCAPE))  <span class="comment">// Цикл, пока не нажата клавиша ESCAPE</span>
              {
              <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a9f0adfcb24eeb418fc39fe950db65ec8" title="Черный цвет.">TX_BLACK</a>);
              <a class="code" href="a00081.htm#ga78e83baeb6a02d5fa33dd8b062e513d9" title="Стирает холст текущим цветом заполнения.">txClear</a>();                         <span class="comment">// Очищаем окно</span>

              <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a5308a5fc6c34169a8af67630a5a750d5" title="Темно-серый цвет.">TX_DARKGRAY</a>);      <span class="comment">// Рисуем объект. По-нормальному это надо сделать в отдельной</span>
              <a class="code" href="a00081.htm#gaa14e9c2a46cf713efaa1f850074d8adc" title="Рисует окружность или круг.">txCircle</a> (x, y, 50);               <span class="comment">// функции. На экране это рисование пока не будет видно,</span>
              <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5abec0ab16c8a1ed55e137c20f80cdd25e" title="Светло-серый цвет.">TX_LIGHTGRAY</a>);     <span class="comment">// из-за отключенного обновления и двойной буферизации.</span>
              <a class="code" href="a00081.htm#gaa14e9c2a46cf713efaa1f850074d8adc" title="Рисует окружность или круг.">txCircle</a> (x, y, 30);
              <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025" title="Белый цвет.">TX_WHITE</a>);
              <a class="code" href="a00081.htm#gaa14e9c2a46cf713efaa1f850074d8adc" title="Рисует окружность или круг.">txCircle</a> (x, y, 10);

              x += 5;                            <span class="comment">// Изменяем координаты объекта</span>
              y += 5;

              <a class="code" href="a00081.htm#ga6c293f0b0f71efebdeeb0b56a97ba50c" title="Задерживает выполнение программы на определенное время.">txSleep</a> (50);                      <span class="comment">// Делаем задержку. При этом изображение окна обновляется.</span>
              }

          <a class="code" href="a00081.htm#ga809dc04afd5348247846ee01ce9a06e6" title="Разблокирует обновление окна, заблокированное функцией txBegin().">txEnd</a>();                               <span class="comment">// После цикла включаем автоматическое обновление окна</span>

          <span class="comment">//</span>
          <span class="comment">// Как *НЕ* правильно использовать блокировку:</span>
          <span class="comment">//</span>

          <a class="code" href="a00081.htm#gae92e621aaed81f90e4d142356e38762a" title="Блокирует обновление изображения окна, во избежание мигания.">txBegin</a>();

          <span class="keywordflow">while</span> (!GetAsyncKeyState (VK_ESCAPE))
              {
              <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a9f0adfcb24eeb418fc39fe950db65ec8" title="Черный цвет.">TX_BLACK</a>);         <span class="comment">// Очищаем окно</span>
              <a class="code" href="a00081.htm#ga78e83baeb6a02d5fa33dd8b062e513d9" title="Стирает холст текущим цветом заполнения.">txClear</a>();
              <a class="code" href="a00081.htm#ga6c293f0b0f71efebdeeb0b56a97ba50c" title="Задерживает выполнение программы на определенное время.">txSleep</a> (50);                      <span class="comment">// Первая ошибка: окно обновляется в нелогичный момент,</span>
                                                 <span class="comment">// когда оно только что очищено. Мы увидим только черный фон.</span>

              <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a5308a5fc6c34169a8af67630a5a750d5" title="Темно-серый цвет.">TX_DARKGRAY</a>);      <span class="comment">// Рисуем объект, но он не будет виден.</span>
              <a class="code" href="a00081.htm#gaa14e9c2a46cf713efaa1f850074d8adc" title="Рисует окружность или круг.">txCircle</a> (x, y, 50);
              <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5abec0ab16c8a1ed55e137c20f80cdd25e" title="Светло-серый цвет.">TX_LIGHTGRAY</a>);
              <a class="code" href="a00081.htm#gaa14e9c2a46cf713efaa1f850074d8adc" title="Рисует окружность или круг.">txCircle</a> (x, y, 30);
              <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025" title="Белый цвет.">TX_WHITE</a>);
              <a class="code" href="a00081.htm#gaa14e9c2a46cf713efaa1f850074d8adc" title="Рисует окружность или круг.">txCircle</a> (x, y, 10);

              x += 5;
              y += 5;

              <a class="code" href="a00081.htm#ga809dc04afd5348247846ee01ce9a06e6" title="Разблокирует обновление окна, заблокированное функцией txBegin().">txEnd</a>();                           <span class="comment">// Вторая ошибка: при первом же обороте цикла отключается</span>
              }                                  <span class="comment">// блокировка обновления, от чего изображение начинает мигать.</span>
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga809dc04afd5348247846ee01ce9a06e6"></a><!-- doxytag: member="TXLib.h::txEnd" ref="ga809dc04afd5348247846ee01ce9a06e6" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int txEnd </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Разблокирует обновление окна, заблокированное функцией <a class="el" href="a00081.htm#gae92e621aaed81f90e4d142356e38762a" title="Блокирует обновление изображения окна, во избежание мигания.">txBegin()</a>. </p>
<dl class="warning"><dt><b>Предупреждения:</b></dt><dd>Если <a class="el" href="a00081.htm#gae92e621aaed81f90e4d142356e38762a" title="Блокирует обновление изображения окна, во избежание мигания.">txBegin()</a> вызывалась несколько раз, то для снятия блокировки нужно столько же раз вызвать <a class="el" href="a00081.htm#ga809dc04afd5348247846ee01ce9a06e6" title="Разблокирует обновление окна, заблокированное функцией txBegin().">txEnd()</a>.</dd></dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Значение счетчика блокировки (если 0, то рисование разблокировано).</dd></dl>
<p>Более полную информацию об автоматическом обновлении см. в функции <a class="el" href="a00081.htm#gae92e621aaed81f90e4d142356e38762a" title="Блокирует обновление изображения окна, во избежание мигания.">txBegin()</a>. См. также <a class="el" href="a00081.htm#gadc7fd9cdc8c007693db7b6d7de794709" title="Обновляет изображение в окне TXLib вручную.">txRedrawWindow()</a>, <a class="el" href="a00081.htm#gaff3d9c60900531f438a19216485bdd41" title="Разрешает или запрещает автоматическое обновление изображения в окне.">txUpdateWindow()</a>, <a class="el" href="a00081.htm#ga6c293f0b0f71efebdeeb0b56a97ba50c" title="Задерживает выполнение программы на определенное время.">txSleep()</a>.</p>
<dl class="note"><dt><b>Заметки:</b></dt><dd>Если нажата клавиша Alt+PrintScreen, то блокировка временно отменяется.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#gae92e621aaed81f90e4d142356e38762a" title="Блокирует обновление изображения окна, во избежание мигания.">txBegin()</a>, <a class="el" href="a00081.htm#ga6c293f0b0f71efebdeeb0b56a97ba50c" title="Задерживает выполнение программы на определенное время.">txSleep()</a>, <a class="el" href="a00081.htm#gaff3d9c60900531f438a19216485bdd41" title="Разрешает или запрещает автоматическое обновление изображения в окне.">txUpdateWindow()</a>, <a class="el" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC()</a>, <a class="el" href="a00081.htm#ga3a8ec79acc0dcbcc04bff3aecc235b4e" title="Возвращает буфер памяти, связанный с холстом (HDC) TXLib.">txVideoMemory()</a>, <a class="el" href="a00081.htm#gaa148d2040d20ed74cf46ab186c35f9ed" title="Запрещает или разрешает рисование мигающего курсора в окне.">txTextCursor()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00081.htm#gae92e621aaed81f90e4d142356e38762a" title="Блокирует обновление изображения окна, во избежание мигания.">txBegin</a>();                        <span class="comment">// Здесь изображение &quot;замерзнет&quot;</span>
          <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025" title="Белый цвет.">TX_WHITE</a>);
          <a class="code" href="a00081.htm#ga78e83baeb6a02d5fa33dd8b062e513d9" title="Стирает холст текущим цветом заполнения.">txClear</a>();                        <span class="comment">// Это вызвало бы мигание без txBegin()</span>
          <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a342ad901a39ab4b40f091f6699b64927" title="Темно-красный цвет. Слишком темный.">TX_RED</a>);
          <a class="code" href="a00081.htm#ga18a0418f3c06463e958077cddf2a4864" title="Рисует прямоугольник.">txRectangle</a> (100, 100, 200, 200);
          <a class="code" href="a00081.htm#ga809dc04afd5348247846ee01ce9a06e6" title="Разблокирует обновление окна, заблокированное функцией txBegin().">txEnd</a>();                          <span class="comment">// Здесь мы сразу увидим окончательный рисунок</span>
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gadc7fd9cdc8c007693db7b6d7de794709"></a><!-- doxytag: member="TXLib.h::txRedrawWindow" ref="gadc7fd9cdc8c007693db7b6d7de794709" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void txRedrawWindow </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Обновляет изображение в окне TXLib вручную. </p>
<p>Более полную информацию об автоматическом обновлении см. в функции <a class="el" href="a00081.htm#gae92e621aaed81f90e4d142356e38762a" title="Блокирует обновление изображения окна, во избежание мигания.">txBegin()</a>. См. также <a class="el" href="a00081.htm#ga809dc04afd5348247846ee01ce9a06e6" title="Разблокирует обновление окна, заблокированное функцией txBegin().">txEnd()</a>, <a class="el" href="a00081.htm#gaff3d9c60900531f438a19216485bdd41" title="Разрешает или запрещает автоматическое обновление изображения в окне.">txUpdateWindow()</a>, <a class="el" href="a00081.htm#ga6c293f0b0f71efebdeeb0b56a97ba50c" title="Задерживает выполнение программы на определенное время.">txSleep()</a>.</p>
<dl class="warning"><dt><b>Предупреждения:</b></dt><dd>Реализация этой функции неэффективна: она вызывает txSleep (0), что вызывает задержку. Чтобы сделать более эффективную реализацию, посмотрите исходный текст функций <a class="el" href="a00081.htm#gadc7fd9cdc8c007693db7b6d7de794709" title="Обновляет изображение в окне TXLib вручную.">txRedrawWindow()</a> и <a class="el" href="a00081.htm#ga6c293f0b0f71efebdeeb0b56a97ba50c" title="Задерживает выполнение программы на определенное время.">txSleep()</a> и сделайте лучше. Либо напишите свою, более быструю библиотеку на основе Win32 GDI, GDI Plus, OpenGL, DirectX, SDL или SFML.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#gafa31ebd8ed957c41713900a407497cf8" title="Возвращает дескриптор окна рисования">txWindow()</a>, <a class="el" href="a00081.htm#gae92e621aaed81f90e4d142356e38762a" title="Блокирует обновление изображения окна, во избежание мигания.">txBegin()</a>, <a class="el" href="a00081.htm#ga809dc04afd5348247846ee01ce9a06e6" title="Разблокирует обновление окна, заблокированное функцией txBegin().">txEnd()</a>, <a class="el" href="a00080.htm#ga532fa8a55c4f3d4f94ff0fdceae732b2" title="Блокировка холста (контекста рисования).">txLock()</a>, <a class="el" href="a00080.htm#ga8fe4ec4c66cb69ce337747fe65dd0cc6" title="Разблокировка холста">txUnlock()</a>, <a class="el" href="a00080.htm#gafdd807831b131ba38d5856b6ee4e8287" title="Вызов функции Win32 GDI с автоматической блокировкой и разблокировкой.">txGDI()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00081.htm#gae92e621aaed81f90e4d142356e38762a" title="Блокирует обновление изображения окна, во избежание мигания.">txBegin</a>();                <span class="comment">// Выключаем автоматическое обновление экрана</span>

          <a class="code" href="a00081.htm#gaa14e9c2a46cf713efaa1f850074d8adc" title="Рисует окружность или круг.">txCircle</a> (100, 100, 50);  <span class="comment">// Рисуем -- изображение не появляется</span>

          Sleep (3000);             <span class="comment">// не txSleep()! txSleep() сама обновит изображение на экране</span>

          <a class="code" href="a00081.htm#gadc7fd9cdc8c007693db7b6d7de794709" title="Обновляет изображение в окне TXLib вручную.">txRedrawWindow</a>();         <span class="comment">// Обновляем экран вручную -- изображение появляется</span>
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga0a3cf3a018cea9d5889d2626e9a37136"></a><!-- doxytag: member="TXLib.h::txDestroyWindow" ref="ga0a3cf3a018cea9d5889d2626e9a37136" args="(HWND wnd=txWindow())" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txDestroyWindow </td>
          <td>(</td>
          <td class="paramtype">HWND&#160;</td>
          <td class="paramname"><em>wnd</em> = <code>txWindow()</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Уничтожает окно. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">wnd</td><td><em>Дескриптор окна для уничтожения. Необязательно. Если не указан, уничтожается окно TXLib.</em></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна -- true, иначе -- false.</dd></dl>
<dl class="warning"><dt><b>Предупреждения:</b></dt><dd>Если уничтожается окно TXLib, функция main() принудительно прерывается и программа завершается. При этом <b>не</b> гарантируется правильное завершение программы, поэтому так делать <b>не</b> рекомендуется.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#gafce21ce98474d5559f316b3d47cdbfab" title="Создание окна рисования">txCreateWindow()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00081.htm#ga0a3cf3a018cea9d5889d2626e9a37136" title="Уничтожает окно.">txDestroyWindow</a>();  <span class="comment">// Farewell to the world</span>
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga49983bddca35d531c521cf04c6c2449f"></a><!-- doxytag: member="TXLib.h::txQueryPerformance" ref="ga49983bddca35d531c521cf04c6c2449f" args="() tx_nodiscard" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double txQueryPerformance </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Оценивает скорость работы компьютера. </p>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Скорость работы (графических операций) в условных единицах.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#ga6c293f0b0f71efebdeeb0b56a97ba50c" title="Задерживает выполнение программы на определенное время.">txSleep()</a>, <a class="el" href="a00081.htm#ga1aca71127c9986f995b2372903d65964" title="Выдает количество кадров (вызовов этой функции) в секунду.">txGetFPS()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <span class="keywordflow">if</span> (<a class="code" href="a00081.htm#ga49983bddca35d531c521cf04c6c2449f" title="Оценивает скорость работы компьютера.">txQueryPerformance</a>() &lt; 1) printf (<span class="stringliteral">&quot;Хочется новый компьютер&quot;</span>);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga1aca71127c9986f995b2372903d65964"></a><!-- doxytag: member="TXLib.h::txGetFPS" ref="ga1aca71127c9986f995b2372903d65964" args="(int minFrames=txFramesToAverage) tx_nodiscard" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double txGetFPS </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>minFrames</em> = <code>txFramesToAverage</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Выдает количество кадров (вызовов этой функции) в секунду. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">minFrames</td><td><em>Количество вызовов, после которых FPS начинает усредняться по последним <code>txFramesToAverage</code> кадрам. Необязательно. Если не указано, используется txFramesToAverage.</em></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>FPS (Frames per Second), т.е. количество кадров (вызовов этой функции) в секунду.</dd></dl>
<dl class="note"><dt><b>Заметки:</b></dt><dd>Когда количество вызовов этой функции превысит <code>minFrames</code>, FPS начинает усредняться по последним <code>txFramesToAverage</code> кадрам. Максимальный интервал усреднения -- <code>txFramesToAverage</code> кадров.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#ga6c293f0b0f71efebdeeb0b56a97ba50c" title="Задерживает выполнение программы на определенное время.">txSleep()</a>, <a class="el" href="a00081.htm#ga49983bddca35d531c521cf04c6c2449f" title="Оценивает скорость работы компьютера.">txQueryPerformance()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd>См. в функции <a class="el" href="a00081.htm#ga7535f88c0fd15b4b49195060d38f2603" title="Создает аппаратно-независимый дополнительный холст (контекст рисования, Device Context, DC) в памяти с возможностью прямого доступа к нему как к массиву.">txCreateDIBSection()</a>. </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga791155510da5fc336b3dbe4deab37974"></a><!-- doxytag: member="TXLib.h::txSetConsoleAttr" ref="ga791155510da5fc336b3dbe4deab37974" args="(unsigned colors=0x07)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned txSetConsoleAttr </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>colors</em> = <code>0x07</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Устанавливает цветовые атрибуты консоли. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">colors</td><td><em>Цветовые атрибуты консоли. Необязательны. Если не указаны, то цвет -- светло-серый.</em></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Предыдущие цветовые атрибуты консоли.</dd></dl>
<p><b>Атрибуты</b> -- это цвет текста (colorText) и цвет фона (colorBackground), объединенные вместе: <br/>
<br/>
 <code>colors = colorText + colorBackground * 16</code> <br/>
<br/>
 либо <br/>
<br/>
 <code>colors = colorText | (colorBackground &lt;&lt; 4)</code> <br/>
<br/>
 Цвета атрибутов <b>не</b> имеют никакого отношения к цветам рисования, задаваемыми <a class="el" href="a00081.htm#ga3e94cfad3d9080241f84129d6e5c09b5">TX_...</a> константами, <a class="el" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a>, <a class="el" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, <a class="el" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a> и т.д. Значения цветов см. ниже.</p>
<dl>
<dt>Значения цветов атрибутов </dt>
<dd><table  border="0">
<tr valign="top">
<td>Dec &#160;&#160;</td><td><code>Hex</code> &#160;&#160;</td><td>&#160;&#160;</td><td>Dec &#160;&#160;</td><td><code>Hex</code> &#160;&#160;</td><td><br/>
 </td></tr>
<tr valign="top">
<td></td></tr>
<tr valign="top">
<td>0 = &#160;&#160;</td><td><code>0x0</code> &#160;&#160;</td><td>= BLACK (Черный), &#160;&#160;</td><td>8 = &#160;&#160;</td><td><code>0x8</code> &#160;&#160;</td><td>= DARKGRAY (Темно-серый), </td></tr>
<tr valign="top">
<td>1 = &#160;&#160;</td><td><code>0x1</code> &#160;&#160;</td><td>= BLUE (Синий), &#160;&#160;</td><td>9 = &#160;&#160;</td><td><code>0x9</code> &#160;&#160;</td><td>= LIGHTBLUE (Светло-синий), </td></tr>
<tr valign="top">
<td>2 = &#160;&#160;</td><td><code>0x2</code> &#160;&#160;</td><td>= GREEN (Зеленый), &#160;&#160;</td><td>10 = &#160;&#160;</td><td><code>0xA</code> &#160;&#160;</td><td>= LIGHTGREEN (Светло-зеленый), </td></tr>
<tr valign="top">
<td>3 = &#160;&#160;</td><td><code>0x3</code> &#160;&#160;</td><td>= CYAN (Сине-зеленый), &#160;&#160;</td><td>11 = &#160;&#160;</td><td><code>0xB</code> &#160;&#160;</td><td>= LIGHTCYAN (Светло-сине-зеленый), </td></tr>
<tr valign="top">
<td>4 = &#160;&#160;</td><td><code>0x4</code> &#160;&#160;</td><td>= RED (Красный), &#160;&#160;</td><td>12 = &#160;&#160;</td><td><code>0xC</code> &#160;&#160;</td><td>= LIGHTRED (Светло-красный), </td></tr>
<tr valign="top">
<td>5 = &#160;&#160;</td><td><code>0x5</code> &#160;&#160;</td><td>= MAGENTA (Малиновый), &#160;&#160;</td><td>13 = &#160;&#160;</td><td><code>0xD</code> &#160;&#160;</td><td>= LIGHTMAGENTA (Светло-малиновый), </td></tr>
<tr valign="top">
<td>6 = &#160;&#160;</td><td><code>0x6</code> &#160;&#160;</td><td>= DARKYELLOW (Темно-желтый), &#160;&#160;</td><td>14 = &#160;&#160;</td><td><code>0xE</code> &#160;&#160;</td><td>= YELLOW (Желтый), </td></tr>
<tr valign="top">
<td>7 = &#160;&#160;</td><td><code>0x7</code> &#160;&#160;</td><td>= LIGHTGRAY (Светло-серый), &#160;&#160;</td><td>15 = &#160;&#160;</td><td><code>0xF</code> &#160;&#160;</td><td>= WHITE (Белый). </td></tr>
</table>
</dd>
</dl>
<p>Цвета букв образуются соединением слов <code>FOREGROUND_&lt;название</code> цвета&gt;, например, <code>FOREGROUND_WHITE</code>. <br/>
<br/>
 Цвета фона образуются соединением слов <code>BACKGROUND_&lt;название</code> цвета&gt;, например, <code>BACKGROUND_CYAN</code>.</p>
<p>В шестнадцатеричной системе счисления атрибуты задавать так: если нужен, скажем, желтый цвет на синем фоне, то его код будет <code>0x1e</code> (старшая цифра -- старшие 4 бита -- это цвет фона, младшая цифра -- младшие 4 бита -- это цвет текста).</p>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#gaa148d2040d20ed74cf46ab186c35f9ed" title="Запрещает или разрешает рисование мигающего курсора в окне.">txTextCursor()</a>, <a class="el" href="a00081.htm#gad1fdf92b2b1e0e3d56e03fad24d735bd" title="Возвращает текущие цветовые атрибуты консоли.">txGetConsoleAttr()</a>, <a class="el" href="a00081.htm#gaee548f7b5672cbcbb99246e0291d7336" title="Устанавливает позицию мигающего курсора консоли.">txSetConsoleCursorPos()</a>, <a class="el" href="a00081.htm#ga3227242c57eef33049cdaee655f4faee" title="Возвращает позицию мигающего курсора консоли.">txGetConsoleCursorPos()</a>, <a class="el" href="a00081.htm#gade3dc928a81efd7054c61fa6cb4ddc06" title="Возвращает размер консоли.">txGetConsoleExtent()</a>, <a class="el" href="a00081.htm#ga250455abeab8c99a51153ef8f4ec0396" title="Возвращает размеры шрифта консоли.">txGetConsoleFontSize()</a>, <a class="el" href="a00081.htm#ga2cb63c12d9206e9ed2b2c83c9a08f68e" title="Стирает текст консоли.">txClearConsole()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00081.htm#ga791155510da5fc336b3dbe4deab37974" title="Устанавливает цветовые атрибуты консоли.">txSetConsoleAttr</a> (FOREGROUND_YELLOW | BACKGROUND_BLUE);
          printf (<span class="stringliteral">&quot;А в небе 0x1 есть город 0xE&quot;</span>);  <span class="comment">// (c) Б. Гребенщиков</span>
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gad1fdf92b2b1e0e3d56e03fad24d735bd"></a><!-- doxytag: member="TXLib.h::txGetConsoleAttr" ref="gad1fdf92b2b1e0e3d56e03fad24d735bd" args="() tx_nodiscard" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned txGetConsoleAttr </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Возвращает текущие цветовые атрибуты консоли. </p>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Текущие цветовые атрибуты консоли. См. <a class="el" href="a00081.htm#ga791155510da5fc336b3dbe4deab37974" title="Устанавливает цветовые атрибуты консоли.">txSetConsoleAttr()</a>.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#gaa148d2040d20ed74cf46ab186c35f9ed" title="Запрещает или разрешает рисование мигающего курсора в окне.">txTextCursor()</a>, <a class="el" href="a00081.htm#ga791155510da5fc336b3dbe4deab37974" title="Устанавливает цветовые атрибуты консоли.">txSetConsoleAttr()</a>, <a class="el" href="a00081.htm#gaee548f7b5672cbcbb99246e0291d7336" title="Устанавливает позицию мигающего курсора консоли.">txSetConsoleCursorPos()</a>, <a class="el" href="a00081.htm#ga3227242c57eef33049cdaee655f4faee" title="Возвращает позицию мигающего курсора консоли.">txGetConsoleCursorPos()</a>, <a class="el" href="a00081.htm#gade3dc928a81efd7054c61fa6cb4ddc06" title="Возвращает размер консоли.">txGetConsoleExtent()</a>, <a class="el" href="a00081.htm#ga250455abeab8c99a51153ef8f4ec0396" title="Возвращает размеры шрифта консоли.">txGetConsoleFontSize()</a>, <a class="el" href="a00081.htm#ga2cb63c12d9206e9ed2b2c83c9a08f68e" title="Стирает текст консоли.">txClearConsole()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <span class="keywordtype">unsigned</span> attr = <a class="code" href="a00081.htm#gad1fdf92b2b1e0e3d56e03fad24d735bd" title="Возвращает текущие цветовые атрибуты консоли.">txGetConsoleAttr</a>();
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga2cb63c12d9206e9ed2b2c83c9a08f68e"></a><!-- doxytag: member="TXLib.h::txClearConsole" ref="ga2cb63c12d9206e9ed2b2c83c9a08f68e" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txClearConsole </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Стирает текст консоли. </p>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна -- true, иначе -- false.</dd></dl>
<p>При стирании используются текущие атрибуты (цвета текста и фона) консоли.</p>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#gaa148d2040d20ed74cf46ab186c35f9ed" title="Запрещает или разрешает рисование мигающего курсора в окне.">txTextCursor()</a>, <a class="el" href="a00081.htm#ga791155510da5fc336b3dbe4deab37974" title="Устанавливает цветовые атрибуты консоли.">txSetConsoleAttr()</a>, <a class="el" href="a00081.htm#gad1fdf92b2b1e0e3d56e03fad24d735bd" title="Возвращает текущие цветовые атрибуты консоли.">txGetConsoleAttr()</a>, <a class="el" href="a00081.htm#ga3227242c57eef33049cdaee655f4faee" title="Возвращает позицию мигающего курсора консоли.">txGetConsoleCursorPos()</a>, <a class="el" href="a00081.htm#gade3dc928a81efd7054c61fa6cb4ddc06" title="Возвращает размер консоли.">txGetConsoleExtent()</a>, <a class="el" href="a00081.htm#ga250455abeab8c99a51153ef8f4ec0396" title="Возвращает размеры шрифта консоли.">txGetConsoleFontSize()</a>, <a class="el" href="a00081.htm#ga2cb63c12d9206e9ed2b2c83c9a08f68e" title="Стирает текст консоли.">txClearConsole()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00081.htm#ga2cb63c12d9206e9ed2b2c83c9a08f68e" title="Стирает текст консоли.">txClearConsole</a>();  <span class="comment">// Ну вот и все, дружок</span>
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gaee548f7b5672cbcbb99246e0291d7336"></a><!-- doxytag: member="TXLib.h::txSetConsoleCursorPos" ref="gaee548f7b5672cbcbb99246e0291d7336" args="(double x, double y)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">POINT txSetConsoleCursorPos </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Устанавливает позицию мигающего курсора консоли. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>X-координата курсора в пикселях. </td></tr>
    <tr><td class="paramname">y</td><td>Y-координата курсора в пикселях.</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Предыдущее положение мигающего курсора в пикселях, в <a href="http://www.google.com/search?q=POINT+structure+MSDN">структуре POINT.</a></dd></dl>
<dl class="note"><dt><b>Заметки:</b></dt><dd>Нельзя установить совсем любую позицию. Текст в консоли расположен по прямоугольной сетке, размер которой зависит от размеров шрифта консоли. Устанавливаемая позиция округляется, чтобы курсор попал в ячейку сетки. См. пример к функции <a class="el" href="a00081.htm#ga250455abeab8c99a51153ef8f4ec0396" title="Возвращает размеры шрифта консоли.">txGetConsoleFontSize()</a>.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#gaa148d2040d20ed74cf46ab186c35f9ed" title="Запрещает или разрешает рисование мигающего курсора в окне.">txTextCursor()</a>, <a class="el" href="a00081.htm#ga791155510da5fc336b3dbe4deab37974" title="Устанавливает цветовые атрибуты консоли.">txSetConsoleAttr()</a>, <a class="el" href="a00081.htm#gad1fdf92b2b1e0e3d56e03fad24d735bd" title="Возвращает текущие цветовые атрибуты консоли.">txGetConsoleAttr()</a>, <a class="el" href="a00081.htm#ga3227242c57eef33049cdaee655f4faee" title="Возвращает позицию мигающего курсора консоли.">txGetConsoleCursorPos()</a>, <a class="el" href="a00081.htm#gade3dc928a81efd7054c61fa6cb4ddc06" title="Возвращает размер консоли.">txGetConsoleExtent()</a>, <a class="el" href="a00081.htm#ga2cb63c12d9206e9ed2b2c83c9a08f68e" title="Стирает текст консоли.">txClearConsole()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00081.htm#gaee548f7b5672cbcbb99246e0291d7336" title="Устанавливает позицию мигающего курсора консоли.">txSetConsoleCursorPos</a> (<a class="code" href="a00081.htm#gab79782d80f6c61587d02f0633aa2f198" title="Возвращает ширину окна или холста.">txGetExtentX</a>(), <a class="code" href="a00081.htm#gaa9bb7fd84e0b9f59c96be89d70c74321" title="Возвращает высоту окна или холста.">txGetExtentY</a>());  <span class="comment">// Центр Вселенной</span>
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga3227242c57eef33049cdaee655f4faee"></a><!-- doxytag: member="TXLib.h::txGetConsoleCursorPos" ref="ga3227242c57eef33049cdaee655f4faee" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">POINT txGetConsoleCursorPos </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Возвращает позицию мигающего курсора консоли. </p>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Положение мигающего курсора в пикселях, в <a href="http://www.google.com/search?q=POINT+structure+MSDN">структуре POINT.</a></dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#gaa148d2040d20ed74cf46ab186c35f9ed" title="Запрещает или разрешает рисование мигающего курсора в окне.">txTextCursor()</a>, <a class="el" href="a00081.htm#ga791155510da5fc336b3dbe4deab37974" title="Устанавливает цветовые атрибуты консоли.">txSetConsoleAttr()</a>, <a class="el" href="a00081.htm#gad1fdf92b2b1e0e3d56e03fad24d735bd" title="Возвращает текущие цветовые атрибуты консоли.">txGetConsoleAttr()</a>, <a class="el" href="a00081.htm#gaee548f7b5672cbcbb99246e0291d7336" title="Устанавливает позицию мигающего курсора консоли.">txSetConsoleCursorPos()</a>, <a class="el" href="a00081.htm#gade3dc928a81efd7054c61fa6cb4ddc06" title="Возвращает размер консоли.">txGetConsoleExtent()</a>, <a class="el" href="a00081.htm#ga2cb63c12d9206e9ed2b2c83c9a08f68e" title="Стирает текст консоли.">txClearConsole()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          POINT pos = <a class="code" href="a00081.htm#ga3227242c57eef33049cdaee655f4faee" title="Возвращает позицию мигающего курсора консоли.">txGetConsoleCursorPos</a>();
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gade3dc928a81efd7054c61fa6cb4ddc06"></a><!-- doxytag: member="TXLib.h::txGetConsoleExtent" ref="gade3dc928a81efd7054c61fa6cb4ddc06" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">POINT txGetConsoleExtent </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Возвращает размер консоли. </p>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Положение мигающего курсора в <b>символах</b>, в <a href="http://www.google.com/search?q=POINT+structure+MSDN">структуре POINT.</a></dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#gaa148d2040d20ed74cf46ab186c35f9ed" title="Запрещает или разрешает рисование мигающего курсора в окне.">txTextCursor()</a>, <a class="el" href="a00081.htm#ga791155510da5fc336b3dbe4deab37974" title="Устанавливает цветовые атрибуты консоли.">txSetConsoleAttr()</a>, <a class="el" href="a00081.htm#gad1fdf92b2b1e0e3d56e03fad24d735bd" title="Возвращает текущие цветовые атрибуты консоли.">txGetConsoleAttr()</a>, <a class="el" href="a00081.htm#gaee548f7b5672cbcbb99246e0291d7336" title="Устанавливает позицию мигающего курсора консоли.">txSetConsoleCursorPos()</a>, <a class="el" href="a00081.htm#gade3dc928a81efd7054c61fa6cb4ddc06" title="Возвращает размер консоли.">txGetConsoleExtent()</a>, <a class="el" href="a00081.htm#ga2cb63c12d9206e9ed2b2c83c9a08f68e" title="Стирает текст консоли.">txClearConsole()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          POINT size = <a class="code" href="a00081.htm#gade3dc928a81efd7054c61fa6cb4ddc06" title="Возвращает размер консоли.">txGetConsoleExtent</a>();
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga250455abeab8c99a51153ef8f4ec0396"></a><!-- doxytag: member="TXLib.h::txGetConsoleFontSize" ref="ga250455abeab8c99a51153ef8f4ec0396" args="() tx_nodiscard" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">POINT txGetConsoleFontSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Возвращает размеры шрифта консоли. </p>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Размеры шрифта консоли в пикселях, в <a href="http://www.google.com/search?q=POINT+structure+MSDN">структуре POINT.</a></dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#gaa148d2040d20ed74cf46ab186c35f9ed" title="Запрещает или разрешает рисование мигающего курсора в окне.">txTextCursor()</a>, <a class="el" href="a00081.htm#ga791155510da5fc336b3dbe4deab37974" title="Устанавливает цветовые атрибуты консоли.">txSetConsoleAttr()</a>, <a class="el" href="a00081.htm#gad1fdf92b2b1e0e3d56e03fad24d735bd" title="Возвращает текущие цветовые атрибуты консоли.">txGetConsoleAttr()</a>, <a class="el" href="a00081.htm#gaee548f7b5672cbcbb99246e0291d7336" title="Устанавливает позицию мигающего курсора консоли.">txSetConsoleCursorPos()</a>, <a class="el" href="a00081.htm#gade3dc928a81efd7054c61fa6cb4ddc06" title="Возвращает размер консоли.">txGetConsoleExtent()</a>, <a class="el" href="a00081.htm#ga250455abeab8c99a51153ef8f4ec0396" title="Возвращает размеры шрифта консоли.">txGetConsoleFontSize()</a>, <a class="el" href="a00081.htm#ga2cb63c12d9206e9ed2b2c83c9a08f68e" title="Стирает текст консоли.">txClearConsole()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          POINT size = <a class="code" href="a00081.htm#ga250455abeab8c99a51153ef8f4ec0396" title="Возвращает размеры шрифта консоли.">txGetConsoleFontSize</a>();
          <a class="code" href="a00081.htm#gaee548f7b5672cbcbb99246e0291d7336" title="Устанавливает позицию мигающего курсора консоли.">txSetConsoleCursorPos</a> (5 * size.x, 10 * size.y);  <span class="comment">// А теперь мигай вот там</span>
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gaa148d2040d20ed74cf46ab186c35f9ed"></a><!-- doxytag: member="TXLib.h::txTextCursor" ref="gaa148d2040d20ed74cf46ab186c35f9ed" args="(bool blink=true)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txTextCursor </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>blink</em> = <code>true</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Запрещает или разрешает рисование мигающего курсора в окне. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">blink</td><td><em>false -- запретить мигающий курсор. Если не указано, то мигание разрешается.</em></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Предыдущее значение состояния курсора.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#ga791155510da5fc336b3dbe4deab37974" title="Устанавливает цветовые атрибуты консоли.">txSetConsoleAttr()</a>, <a class="el" href="a00081.htm#gad1fdf92b2b1e0e3d56e03fad24d735bd" title="Возвращает текущие цветовые атрибуты консоли.">txGetConsoleAttr()</a>, <a class="el" href="a00081.htm#gaee548f7b5672cbcbb99246e0291d7336" title="Устанавливает позицию мигающего курсора консоли.">txSetConsoleCursorPos()</a>, <a class="el" href="a00081.htm#ga3227242c57eef33049cdaee655f4faee" title="Возвращает позицию мигающего курсора консоли.">txGetConsoleCursorPos()</a>, <a class="el" href="a00081.htm#ga250455abeab8c99a51153ef8f4ec0396" title="Возвращает размеры шрифта консоли.">txGetConsoleFontSize()</a>, <a class="el" href="a00081.htm#ga2cb63c12d9206e9ed2b2c83c9a08f68e" title="Стирает текст консоли.">txClearConsole()</a>, <a class="el" href="a00081.htm#gafce21ce98474d5559f316b3d47cdbfab" title="Создание окна рисования">txCreateWindow()</a>, <a class="el" href="a00081.htm#gaff3d9c60900531f438a19216485bdd41" title="Разрешает или запрещает автоматическое обновление изображения в окне.">txUpdateWindow()</a>, <a class="el" href="a00080.htm#ga532fa8a55c4f3d4f94ff0fdceae732b2" title="Блокировка холста (контекста рисования).">txLock()</a>, <a class="el" href="a00080.htm#ga8fe4ec4c66cb69ce337747fe65dd0cc6" title="Разблокировка холста">txUnlock()</a>, <a class="el" href="a00080.htm#gafdd807831b131ba38d5856b6ee4e8287" title="Вызов функции Win32 GDI с автоматической блокировкой и разблокировкой.">txGDI()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00081.htm#gaa148d2040d20ed74cf46ab186c35f9ed" title="Запрещает или разрешает рисование мигающего курсора в окне.">txTextCursor</a> (<span class="keyword">false</span>);
          ...
          <a class="code" href="a00081.htm#gaa148d2040d20ed74cf46ab186c35f9ed" title="Запрещает или разрешает рисование мигающего курсора в окне.">txTextCursor</a>();
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gaf382eed71ecf8229882fe544035d66dc"></a><!-- doxytag: member="TXLib.h::txVersion" ref="gaf382eed71ecf8229882fe544035d66dc" args="() tx_nodiscard" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* txVersion </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Возвращает строку с информацией о текущей версии библиотеки. </p>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Строка с информацией о текущей версии библиотеки.</dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          printf (<span class="stringliteral">&quot;I personally love %s\n&quot;</span>, <a class="code" href="a00081.htm#gaf382eed71ecf8229882fe544035d66dc" title="Возвращает строку с информацией о текущей версии библиотеки.">txVersion</a>());
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gab2c5f0eff263a7297997281c3d451b91"></a><!-- doxytag: member="TXLib.h::txVersionNumber" ref="gab2c5f0eff263a7297997281c3d451b91" args="() tx_nodiscard" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned txVersionNumber </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Возвращает номер версии библиотеки. </p>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Номер версии библиотеки.</dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          printf (<span class="stringliteral">&quot;My magic number is %x\n&quot;</span>, <a class="code" href="a00081.htm#gab2c5f0eff263a7297997281c3d451b91" title="Возвращает номер версии библиотеки.">txVersionNumber</a>());
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga12ffceef73c1a081c073f4d7c2914618"></a><!-- doxytag: member="TXLib.h::txGetModuleFileName" ref="ga12ffceef73c1a081c073f4d7c2914618" args="(bool fileNameOnly=true) tx_nodiscard" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* txGetModuleFileName </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>fileNameOnly</em> = <code>true</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Возвращает имя исполняемого файла или изначальный заголовок окна TXLib. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">fileNameOnly</td><td><em>Возвратить только полное имя исполняемого файла, полученного через Win32 функцию GetFileModuleName (NULL, ...). Необязательно. Если не указано, то возвращается полное имя исполняемого файла.</em></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>fileNameOnly = true: Имя исполняемого файла. <br/>
 fileNameOnly = false: Изначальный заголовок окна TXLib.</dd></dl>
<dl class="note"><dt><b>Заметки:</b></dt><dd>Возвращается <b>статическая</b> строка.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#gafa31ebd8ed957c41713900a407497cf8" title="Возвращает дескриптор окна рисования">txWindow()</a>, <a class="el" href="a00081.htm#gaf382eed71ecf8229882fe544035d66dc" title="Возвращает строку с информацией о текущей версии библиотеки.">txVersion()</a>, <a class="el" href="a00081.htm#gab2c5f0eff263a7297997281c3d451b91" title="Возвращает номер версии библиотеки.">txVersionNumber()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          printf (<span class="stringliteral">&quot;Смотрите на заголовок окна!&quot;</span>);

          <span class="keywordflow">for</span> (<span class="keywordtype">int</span> done = 0; done &lt;= 100; done++)
              {
              <span class="keywordtype">char</span> title [1024] = <span class="stringliteral">&quot;&quot;</span>;
              sprintf (title, <span class="stringliteral">&quot;%s - [%-10.*s] %d%%&quot;</span>, <a class="code" href="a00081.htm#ga12ffceef73c1a081c073f4d7c2914618" title="Возвращает имя исполняемого файла или изначальный заголовок окна TXLib.">txGetModuleFileName</a> (<span class="keyword">false</span>), done/10, <span class="stringliteral">&quot;||||||||||&quot;</span>, done);

              SetWindowText (<a class="code" href="a00081.htm#gafa31ebd8ed957c41713900a407497cf8" title="Возвращает дескриптор окна рисования">txWindow</a>(), title);
              SetWindowText (Win32::GetConsoleWindow(), title);
              <a class="code" href="a00081.htm#ga6c293f0b0f71efebdeeb0b56a97ba50c" title="Задерживает выполнение программы на определенное время.">txSleep</a> (50);
              }

          <a class="code" href="a00080.htm#gaf9be7d98f32c0737a2d7f30039a60c0a" title="Выводит сообщение в окне с помощью функции MessageBox.">txMessageBox</a> (<span class="stringliteral">&quot;Вот такой вот progress bar&quot;</span>, <span class="stringliteral">&quot;TXLib forever)&quot;</span>);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gaff3d9c60900531f438a19216485bdd41"></a><!-- doxytag: member="TXLib.h::txUpdateWindow" ref="gaff3d9c60900531f438a19216485bdd41" args="(int update=true)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int txUpdateWindow </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>update</em> = <code>true</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Разрешает или запрещает автоматическое обновление изображения в окне. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">update</td><td><em>Режим обновления (true -- разрешить, false -- запретить). Необязателен. Если не указан, то "разрешить".</em></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Предыдущее состояние режима обновления.</dd></dl>
<p>В отличие от <a class="el" href="a00081.htm#gae92e621aaed81f90e4d142356e38762a" title="Блокирует обновление изображения окна, во избежание мигания.">txBegin()</a> и <a class="el" href="a00081.htm#ga809dc04afd5348247846ee01ce9a06e6" title="Разблокирует обновление окна, заблокированное функцией txBegin().">txEnd()</a>, которые поддерживают вложенные вызовы и работают как "скобки для
          замерзания картинки", <a class="el" href="a00081.htm#gaff3d9c60900531f438a19216485bdd41" title="Разрешает или запрещает автоматическое обновление изображения в окне.">txUpdateWindow()</a> позволяет явно установить или снять блокировку автоматического обновления экрана.</p>
<p>Более полную информацию об автоматическом обновлении см. в функции <a class="el" href="a00081.htm#gae92e621aaed81f90e4d142356e38762a" title="Блокирует обновление изображения окна, во избежание мигания.">txBegin()</a>. См. также <a class="el" href="a00081.htm#ga809dc04afd5348247846ee01ce9a06e6" title="Разблокирует обновление окна, заблокированное функцией txBegin().">txEnd()</a>, <a class="el" href="a00081.htm#gadc7fd9cdc8c007693db7b6d7de794709" title="Обновляет изображение в окне TXLib вручную.">txRedrawWindow()</a>, <a class="el" href="a00081.htm#ga6c293f0b0f71efebdeeb0b56a97ba50c" title="Задерживает выполнение программы на определенное время.">txSleep()</a>.</p>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#gae92e621aaed81f90e4d142356e38762a" title="Блокирует обновление изображения окна, во избежание мигания.">txBegin()</a>, <a class="el" href="a00081.htm#ga809dc04afd5348247846ee01ce9a06e6" title="Разблокирует обновление окна, заблокированное функцией txBegin().">txEnd()</a>, <a class="el" href="a00081.htm#ga6c293f0b0f71efebdeeb0b56a97ba50c" title="Задерживает выполнение программы на определенное время.">txSleep()</a>, <a class="el" href="a00081.htm#gaff3d9c60900531f438a19216485bdd41" title="Разрешает или запрещает автоматическое обновление изображения в окне.">txUpdateWindow()</a>, <a class="el" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC()</a>, <a class="el" href="a00081.htm#ga3a8ec79acc0dcbcc04bff3aecc235b4e" title="Возвращает буфер памяти, связанный с холстом (HDC) TXLib.">txVideoMemory()</a>, <a class="el" href="a00081.htm#gaa148d2040d20ed74cf46ab186c35f9ed" title="Запрещает или разрешает рисование мигающего курсора в окне.">txTextCursor()</a>, <a class="el" href="a00080.htm#ga532fa8a55c4f3d4f94ff0fdceae732b2" title="Блокировка холста (контекста рисования).">txLock()</a>, <a class="el" href="a00080.htm#ga8fe4ec4c66cb69ce337747fe65dd0cc6" title="Разблокировка холста">txUnlock()</a>, <a class="el" href="a00080.htm#gafdd807831b131ba38d5856b6ee4e8287" title="Вызов функции Win32 GDI с автоматической блокировкой и разблокировкой.">txGDI()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00081.htm#gaff3d9c60900531f438a19216485bdd41" title="Разрешает или запрещает автоматическое обновление изображения в окне.">txUpdateWindow</a> (<span class="keyword">false</span>);
          ...
          <a class="code" href="a00081.htm#gaff3d9c60900531f438a19216485bdd41" title="Разрешает или запрещает автоматическое обновление изображения в окне.">txUpdateWindow</a>();
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gabc64e03f4ca966e76bc714bbe8173761"></a><!-- doxytag: member="TXLib.h::txSelectObject" ref="gabc64e03f4ca966e76bc714bbe8173761" args="(HGDIOBJ obj, HDC dc=txDC())" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txSelectObject </td>
          <td>(</td>
          <td class="paramtype">HGDIOBJ&#160;</td>
          <td class="paramname"><em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HDC&#160;</td>
          <td class="paramname"><em>dc</em> = <code>txDC()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Устанавливает текущий активный объект GDI. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">obj</td><td>Дескриптор объекта GDI. </td></tr>
    <tr><td class="paramname">dc</td><td><em>Холст (контекст рисования), в котором устанавливается текущий активный объект GDI. Необязателен.</em></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна -- true, иначе -- false.</dd></dl>
<dl class="note"><dt><b>Заметки:</b></dt><dd>Предыдущий выбранный объект того же типа (PEN/BRUSH/BITMAP и т.п.), как и <code>obj</code>, <b>уничтожается</b>.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor()</a>, <a class="el" href="a00081.htm#gab6462db4dbcca4915d460036c6c8896d" title="Возвращает текущий цвет линий и текста.">txGetColor()</a>, <a class="el" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor()</a>, <a class="el" href="a00081.htm#ga4d83b7e2d67f422cf703e15f2d7c4dfa" title="Возвращает текущий цвет заполнения фигур.">txGetFillColor()</a>, <a class="el" href="a00081.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов.">txColors</a>, <a class="el" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB()</a>, <a class="el" href="a00081.htm#ga6689b9a89add9c5eb5cf54a8c86539a4" title="Выбирает текущий шрифт, его размер и другие атрибуты.">txSelectFont()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          HPEN pen = CreatePen (PS_DASH, 1, <a class="code" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (255, 128, 0));
          <a class="code" href="a00081.htm#gabc64e03f4ca966e76bc714bbe8173761" title="Устанавливает текущий активный объект GDI.">txSelectObject</a> (pen);
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga93cecf6b117fc403c0488f388b78a6d1"></a><!-- doxytag: member="TXLib.h::txIDontWantToHaveAPauseAfterMyProgramBeforeTheWindowWillClose_AndIWillNotBeAskingWhereIsMyPicture" ref="ga93cecf6b117fc403c0488f388b78a6d1" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txIDontWantToHaveAPauseAfterMyProgramBeforeTheWindowWillClose_AndIWillNotBeAskingWhereIsMyPicture </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Делает нечто иногда удобное. См. название функции. </p>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если операция была успешна -- true, иначе -- false.</dd></dl>
<p>У этой функции есть синоним с простым понятным названием, поищите его в файле библиотеки, около <em>определения</em> этой функции. Или можно <small>&#160;</small><span class="s"> скопировать </span><small>&#160;</small> набрать это километровое имя и посмотреть, что получится.</p>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00081.htm#gafce21ce98474d5559f316b3d47cdbfab" title="Создание окна рисования">txCreateWindow()</a>, <a class="el" href="a00081.htm#ga6c293f0b0f71efebdeeb0b56a97ba50c" title="Задерживает выполнение программы на определенное время.">txSleep()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <span class="keywordtype">int</span> main()
              {
              <a class="code" href="a00081.htm#gafce21ce98474d5559f316b3d47cdbfab" title="Создание окна рисования">txCreateWindow</a> (800, 600);

              <a class="code" href="a00081.htm#ga09938df8859ae8b62638a3af76ee6735" title="Устанавливает текущее выравнивание текста (влево/вправо/по центру).">txSetTextAlign</a> (TA_CENTER);
              <a class="code" href="a00081.htm#ga52e119361961d9eee33c176a3084e55d" title="Рисует текст.">txTextOut</a> (<a class="code" href="a00081.htm#gab79782d80f6c61587d02f0633aa2f198" title="Возвращает ширину окна или холста.">txGetExtentX</a>()/2, <a class="code" href="a00081.htm#gaa9bb7fd84e0b9f59c96be89d70c74321" title="Возвращает высоту окна или холста.">txGetExtentY</a>()/2, <span class="stringliteral">&quot;Press any key to exit!&quot;</span>);
</pre></div> <div class="fragment"><pre class="fragment"> <a class="code" href="a00081.htm#ga93cecf6b117fc403c0488f388b78a6d1" title="Делает нечто иногда удобное. См. название функции.">txIDontWantToHaveAPauseAfterMyProgramBeforeTheWindowWillClose_AndIWillNotBeAskingWhereIsMyPicture</a>();
              <span class="keywordflow">return</span> 0;
              }
</pre></div> </dd>
</dl>

</div>
</div>
</div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
<!-- --------------------------------------------------------------------------
  Doxygen_HTM.htm
  $Version: 00173a, Revision: 165 $
  $Copyright: (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru> $
  $Date: 2020-03-26 02:25:56 +0400 $
 -------------------------------------------------------------------------- -->

<table class="" width="100%"><tr valign="top">

  <td align="left">
    <small><a href="http://orphus.ru">Нашли ошибку? Выделите ее мышкой и нажмите Ctrl+ENTER. &copy;&#160;Orphus.ru.</a></small><br>
    <a href="http://orphus.ru" id="orphus" target="_blank"><img class = "footer" alt="Orphus" src="http://storage.ded32.net.ru/orphus.gif" border="0"></a>
    </td>

  <td align="right">
    Документация по TX Library. Дата: Thu Aug 13 2020 00:46:50. Создано&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.3
    <img src="http://storage.ded32.net.ru/stat/TXLib-Help.chm" width=1px height=1px border="0">
    </td>
  </tr></table>

</ul>
</div>

<script type="text/javascript">var gaJsHost = (("https:" == document.location.protocol)? "https://ssl." : "http://www."); document.write (unescape ("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); try { var pageTracker = _gat._getTracker ("UA-7927138-1"); pageTracker._trackPageview(); } catch (err) {}</script>
<script type="text/javascript" src="http://storage.ded32.net.ru/orphus.js"></script>

</body>
</html>
