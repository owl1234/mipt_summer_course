<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>TX Library: Файл TXLib.h</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript">
$(document).ready(initResizable);
</script>
<link href="Doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!-- Создано системой Doxygen 1.7.3 -->
<div id="top">
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="TXLib.png"></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">TX Library&#160;<span id="projectnumber">Help &ndash; Version: 00173a, Revision: 165</span></div>
   <div id="projectbrief"><s>&nbsp;ALL&nbsp;</s> Windows graphics in a sandbox</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('a00058.htm','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#nested-classes">Классы</a> &#124;
<a href="#define-members">Макросы</a> &#124;
<a href="#func-members">Функции</a> &#124;
<a href="#var-members">Переменные</a>  </div>
  <div class="headertitle">
<h1>Файл TXLib.h</h1>  </div>
</div>
<div class="contents">

<p>Библиотека Тупого Художника (The Dumb Artist Library, TX Library, TXLib).  
<a href="#_details">Подробнее...</a></p>

<p><a href="a00058_source.htm">См. исходные тексты.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="nested-classes"></a>
Классы</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00016.htm">txAutoLock</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Класс для автоматической блокировки и разблокировки критической секции.  <a href="a00016.htm#_details">Подробнее...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00017.htm">txDialog</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Базовый класс для диалоговых окон.  <a href="a00017.htm#_details">Подробнее...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00014.htm">txDialog::Layout</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Класс для описания элемента диалогового окна (контрола)  <a href="a00014.htm#_details">Подробнее...</a><br/></td></tr>
<tr><td colspan="2"><h2><a name="define-members"></a>
Макросы</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00084.htm#ga6b76c63cd895c2be63ac8e690028623b">_TX_VER</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Текущая версия библиотеки.  <a href="a00084.htm#ga6b76c63cd895c2be63ac8e690028623b"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00084.htm#ga43d277b4418068ebef1fd2bdbaf550f6">_TX_MODULE</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Имя модуля TXLib. Входит в диагностические сообщения.  <a href="a00084.htm#ga43d277b4418068ebef1fd2bdbaf550f6"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gadd1c9ccd036228402b807abaea14f7ee"></a><!-- doxytag: member="TXLib.h::__TX_COMPILER__" ref="gadd1c9ccd036228402b807abaea14f7ee" args="" -->
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00084.htm#gadd1c9ccd036228402b807abaea14f7ee">__TX_COMPILER__</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Имя и версия текущего компилятора <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga3e287c38947fea870d01588fbd2a5fc9"></a><!-- doxytag: member="TXLib.h::_TX_BUILDMODE" ref="ga3e287c38947fea870d01588fbd2a5fc9" args="" -->
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00084.htm#ga3e287c38947fea870d01588fbd2a5fc9">_TX_BUILDMODE</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Имя режима сборки <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga973d717438fe468dd5a5d8d45ede5312"></a><!-- doxytag: member="TXLib.h::__TX_FILELINE__" ref="ga973d717438fe468dd5a5d8d45ede5312" args="" -->
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00080.htm#ga973d717438fe468dd5a5d8d45ede5312">__TX_FILELINE__</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Макрос, раскрывающийся в имя файла и номер строки файла, где он встретился. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00080.htm#gab170f39ac0e379c324c73495f14a1309">__TX_FUNCTION__</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Имя текущей функции  <a href="a00080.htm#gab170f39ac0e379c324c73495f14a1309"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00080.htm#gafa99ec4acc4ecb2dc3c2d05da15d0e3f">MAX</a>(a, b)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает максимальное из двух чисел  <a href="a00080.htm#gafa99ec4acc4ecb2dc3c2d05da15d0e3f"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00080.htm#ga3acffbd305ee72dcd4593c0d8af64a4f">MIN</a>(a, b)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает минимальное из двух чисел  <a href="a00080.htm#ga3acffbd305ee72dcd4593c0d8af64a4f"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00080.htm#gacd66e8cacf954c3bc3bba81d09425a12">ROUND</a>(x)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Округляет число до целого  <a href="a00080.htm#gacd66e8cacf954c3bc3bba81d09425a12"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00080.htm#gad2296e7bc6bc51ec0739aad2e8ee0a9c">_TX_DESTROY_3D</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight"><em>Ну просто <b>очень</b> удобный</em> макрос.  <a href="a00080.htm#gad2296e7bc6bc51ec0739aad2e8ee0a9c"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00080.htm#gade9b60c36576ef735b3e1d1f628ad9c6">ZERO</a>(type)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Обнулитель типов, не имеющих конструкторов  <a href="a00080.htm#gade9b60c36576ef735b3e1d1f628ad9c6"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00080.htm#gaf6d32e17de45766eea363ad72824ecad">TX_ASSERT</a>(cond)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Замена стандартного макроса assert(), с выдачей сообщения через <a class="el" href="a00080.htm#gaf9be7d98f32c0737a2d7f30039a60c0a" title="Выводит сообщение в окне с помощью функции MessageBox.">txMessageBox()</a>, консоль и OutputDebugString().  <a href="a00080.htm#gaf6d32e17de45766eea363ad72824ecad"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00080.htm#ga889b74443b3e918adee3e31fad4653f7">asserted</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Выводит диагностическое сообщение в случае нулевого или ложного результата.  <a href="a00080.htm#ga889b74443b3e918adee3e31fad4653f7"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a66cb8e8fe20d9d05d02e73373bda7f8a"></a><!-- doxytag: member="TXLib.h::verified" ref="a66cb8e8fe20d9d05d02e73373bda7f8a" args="" -->
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00058.htm#a66cb8e8fe20d9d05d02e73373bda7f8a">verified</a>&#160;&#160;&#160;asserted</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">For compatibility with assert macro. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00080.htm#ga14fecb1c008314444a74c1fe7d9a113b">verify</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Выполняет команду (вычисляет выражение) и проверяет результат.  <a href="a00080.htm#ga14fecb1c008314444a74c1fe7d9a113b"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00080.htm#ga2e7d012000ed9e784d32859d10c103f6">TX_ERROR</a>(msg)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Выводит развернутое диагностическое сообщение.  <a href="a00080.htm#ga2e7d012000ed9e784d32859d10c103f6"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00080.htm#gabe7d5b7083c7588b457f73c1e0461044">TX_DEBUG_ERROR</a>(...)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Выводит развернутое диагностическое сообщение в отладочном режиме.  <a href="a00080.htm#gabe7d5b7083c7588b457f73c1e0461044"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00080.htm#gae1f5bb8bcc99e21ed8dc46493027b267">txStackBackTrace</a>()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Распечатывает текущий стек вызовов функций в консоли.  <a href="a00080.htm#gae1f5bb8bcc99e21ed8dc46493027b267"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00080.htm#gafdd807831b131ba38d5856b6ee4e8287">txGDI</a>(command, dc)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Вызов функции Win32 GDI с автоматической блокировкой и разблокировкой.  <a href="a00080.htm#gafdd807831b131ba38d5856b6ee4e8287"></a><br/></td></tr>
<tr><td colspan="2"><div class="groupHeader">Адаптация к компиляторам и платформам</div></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a561e49978345c76005041eb90c1ef637"></a><!-- doxytag: member="TXLib.h::strncpy_s" ref="a561e49978345c76005041eb90c1ef637" args="(dest, sizeof_dest, src, count)" -->
#define&#160;</td><td class="memItemRight" valign="bottom"><b>strncpy_s</b>(dest, sizeof_dest, src, count)&#160;&#160;&#160;( strncpy ((dest), (src), MIN ((count), (sizeof_dest))) )</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="abf2914ccf27cf7f9de82121d213e8660"></a><!-- doxytag: member="TXLib.h::wcsncpy_s" ref="abf2914ccf27cf7f9de82121d213e8660" args="(dest, sizeof_dest, src, count)" -->
#define&#160;</td><td class="memItemRight" valign="bottom"><b>wcsncpy_s</b>(dest, sizeof_dest, src, count)&#160;&#160;&#160;( wcsncpy ((dest), (src), MIN ((count), (sizeof_dest))) )</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab6fd8af903dd852fda0a82519cf245b6"></a><!-- doxytag: member="TXLib.h::strncat_s" ref="ab6fd8af903dd852fda0a82519cf245b6" args="(dest, sizeof_dest, src, count)" -->
#define&#160;</td><td class="memItemRight" valign="bottom"><b>strncat_s</b>(dest, sizeof_dest, src, count)&#160;&#160;&#160;( strncat ((dest), (src), MIN ((count), (sizeof_dest))) )</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="afd2aaf3c60ea4daf6671ae8130eb1f3c"></a><!-- doxytag: member="TXLib.h::strerror_s" ref="afd2aaf3c60ea4daf6671ae8130eb1f3c" args="(buf, sizeof_buf, code)" -->
#define&#160;</td><td class="memItemRight" valign="bottom"><b>strerror_s</b>(buf, sizeof_buf, code)&#160;&#160;&#160;( strncpy ((buf), strerror ((int)(code)), (sizeof_buf)-1) )</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4fd4b5f70c81be81ee631475c59369a6"></a><!-- doxytag: member="TXLib.h::strtok_s" ref="a4fd4b5f70c81be81ee631475c59369a6" args="(buf, delim, ctx)" -->
#define&#160;</td><td class="memItemRight" valign="bottom"><b>strtok_s</b>(buf, delim, ctx)&#160;&#160;&#160;( (void)(ctx), strtok ((buf), (delim)) )</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="abc47ba8aabc72d4c2439e9bbdd26d99b"></a><!-- doxytag: member="TXLib.h::fopen_s" ref="abc47ba8aabc72d4c2439e9bbdd26d99b" args="(file, name, mode)" -->
#define&#160;</td><td class="memItemRight" valign="bottom"><b>fopen_s</b>(file, name, mode)&#160;&#160;&#160;( *(file) = fopen ((name), (mode)) )</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad38fc9c511ea831bf1e5945f8647bd6a"></a><!-- doxytag: member="TXLib.h::_strlwr_s" ref="ad38fc9c511ea831bf1e5945f8647bd6a" args="(str, sizeof_str)" -->
#define&#160;</td><td class="memItemRight" valign="bottom"><b>_strlwr_s</b>(str, sizeof_str)&#160;&#160;&#160;( _strlwr (str) )</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a94373a5bdb217343574c9851bb84cd2d"></a><!-- doxytag: member="TXLib.h::ctime_s" ref="a94373a5bdb217343574c9851bb84cd2d" args="(buf, sizeof_buf, time)" -->
#define&#160;</td><td class="memItemRight" valign="bottom"><b>ctime_s</b>(buf, sizeof_buf, time)&#160;&#160;&#160;( strncpy ((buf), ctime (time), (sizeof_buf)-1) )</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a97c87934df1aa33820485bb1c89ac598"></a><!-- doxytag: member="TXLib.h::_controlfp_s" ref="a97c87934df1aa33820485bb1c89ac598" args="(oldCtl, newCtl, mask)" -->
#define&#160;</td><td class="memItemRight" valign="bottom"><b>_controlfp_s</b>(oldCtl, newCtl, mask)&#160;&#160;&#160;( assert (oldCtl), *(oldCtl) = _controlfp (newCtl, mask), 0 )</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae994dd392bda6a00605b25091938078f"></a><!-- doxytag: member="TXLib.h::_snprintf_s" ref="ae994dd392bda6a00605b25091938078f" args="" -->
#define&#160;</td><td class="memItemRight" valign="bottom"><b>_snprintf_s</b>&#160;&#160;&#160;snprintf</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa1e3bd110cd0e3cfb4abb83c315ba5b5"></a><!-- doxytag: member="TXLib.h::_vsnprintf_s" ref="aa1e3bd110cd0e3cfb4abb83c315ba5b5" args="(str, sz, trunc, format, arg)" -->
#define&#160;</td><td class="memItemRight" valign="bottom"><b>_vsnprintf_s</b>(str, sz, trunc, format, arg)&#160;&#160;&#160;_vsnprintf (str, sz, format, arg)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a1e5c70dbf1cdd61a60dbea116d7e3696"></a><!-- doxytag: member="TXLib.h::getenv_s" ref="a1e5c70dbf1cdd61a60dbea116d7e3696" args="(sz, buf, sizeof_buf, name)" -->
#define&#160;</td><td class="memItemRight" valign="bottom"><b>getenv_s</b>(sz, buf, sizeof_buf, name)&#160;&#160;&#160;( (void)(sz), strncpy ((buf), getenv (name), (sizeof_buf)-1) )</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae372e90b62c1e8b51dc5d95bf7f5ba48"></a><!-- doxytag: member="TXLib.h::PRId64" ref="ae372e90b62c1e8b51dc5d95bf7f5ba48" args="" -->
#define&#160;</td><td class="memItemRight" valign="bottom"><b>PRId64</b>&#160;&#160;&#160;&quot;I64d&quot;</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ab8d0c29be4a0623c3de58011991e86e9"></a><!-- doxytag: member="TXLib.h::PRIi64" ref="ab8d0c29be4a0623c3de58011991e86e9" args="" -->
#define&#160;</td><td class="memItemRight" valign="bottom"><b>PRIi64</b>&#160;&#160;&#160;&quot;I64i&quot;</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a792491e417d837fc693122428460bcba"></a><!-- doxytag: member="TXLib.h::PRIo64" ref="a792491e417d837fc693122428460bcba" args="" -->
#define&#160;</td><td class="memItemRight" valign="bottom"><b>PRIo64</b>&#160;&#160;&#160;&quot;I64o&quot;</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac582131d7a7c8ee57e73180d1714f9d5"></a><!-- doxytag: member="TXLib.h::PRIu64" ref="ac582131d7a7c8ee57e73180d1714f9d5" args="" -->
#define&#160;</td><td class="memItemRight" valign="bottom"><b>PRIu64</b>&#160;&#160;&#160;&quot;I64u&quot;</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aba38357387a474f439428dee1984fc5a"></a><!-- doxytag: member="TXLib.h::PRIx64" ref="aba38357387a474f439428dee1984fc5a" args="" -->
#define&#160;</td><td class="memItemRight" valign="bottom"><b>PRIx64</b>&#160;&#160;&#160;&quot;I64x&quot;</td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="af56fc48030ace2ec83125c0f5f42816c"></a><!-- doxytag: member="TXLib.h::PRIX64" ref="af56fc48030ace2ec83125c0f5f42816c" args="" -->
#define&#160;</td><td class="memItemRight" valign="bottom"><b>PRIX64</b>&#160;&#160;&#160;&quot;I64X&quot;</td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00080.htm#ga0b75271f60823b3c49a42cdd3c196ce5">please</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight"><em>Еще парочка макросов.</em>  <a href="a00080.htm#ga0b75271f60823b3c49a42cdd3c196ce5"></a><br/></td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00080.htm#gae4dfd7b0d66121016d6466d2ff10e8ba">_</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Макрос, позволяющий передать переменное число параметров в какой-либо другой макрос.  <a href="a00080.htm#gae4dfd7b0d66121016d6466d2ff10e8ba"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gaaff3c8e496327bec13a821061787878f"></a><!-- doxytag: member="TXLib.h::TX_COMMA" ref="gaaff3c8e496327bec13a821061787878f" args="" -->
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00080.htm#gaaff3c8e496327bec13a821061787878f">TX_COMMA</a>&#160;&#160;&#160;,</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Синоним макроса _ (<a class="el" href="a00080.htm#gae4dfd7b0d66121016d6466d2ff10e8ba">символ подчеркивания</a>) <br/></td></tr>
<tr><td colspan="2"><div class="groupHeader">Внутренняя диагностика</div></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00084.htm#ga1c7c387b21adad57d0dda2f8bd84ad1c">_TX_ALLOW_TRACE</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Включает/отключает внутреннюю трассировку исполнения кода библиотеки.  <a href="a00084.htm#ga1c7c387b21adad57d0dda2f8bd84ad1c"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00084.htm#ga2aa2550a5302deb4d46b3759b26f4b41">TX_TRACE</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Трассирует исполнение кода через OutputDebugString().  <a href="a00084.htm#ga2aa2550a5302deb4d46b3759b26f4b41"></a><br/></td></tr>
<tr><td colspan="2"><div class="groupHeader">Макросы для построения статической карты сообщений (Message Map)</div></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00080.htm#gaf6ea524e3c76ba5c8a0d1fa6b81d55b8">TX_BEGIN_MESSAGE_MAP</a>()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Заголовок карты сообщений (Message Map).  <a href="a00080.htm#gaf6ea524e3c76ba5c8a0d1fa6b81d55b8"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00080.htm#gadbe2f17002d8d41056e9770066ef558b">TX_HANDLE</a>(id)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Заголовок обработчика сообщения (Message handler) карты сообщений.  <a href="a00080.htm#gadbe2f17002d8d41056e9770066ef558b"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00080.htm#ga3637c3398b6ebfa337171beec0770fe4">TX_COMMAND_MAP</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Начало карты команд (Command map) в карте сообщений.  <a href="a00080.htm#ga3637c3398b6ebfa337171beec0770fe4"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00080.htm#ga3f4a70a0e5076cb4f4addcab0ca760cd">TX_END_MESSAGE_MAP</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Завершитель карты сообщений.  <a href="a00080.htm#ga3f4a70a0e5076cb4f4addcab0ca760cd"></a><br/></td></tr>
<tr><td colspan="2"><div class="groupHeader">Экспериментальные отладочные макросы</div></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00080.htm#gaaa5d2cd4ba134312dcaca4e8316bbe9e">__TX_DEBUG_MACROS</a>&#160;&#160;&#160;(&quot;Группа отладочных $-макросов&quot;)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Отладочная печать переменной во время вычисления выражения или участка кода во время его выполнения.  <a href="a00080.htm#gaaa5d2cd4ba134312dcaca4e8316bbe9e"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="func-members"></a>
Функции</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00080.htm#gaa81c1c7c499d76619d5d9d3369560881">random</a> (int range) tx_deprecated</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Генератор случайных чисел  <a href="a00080.htm#gaa81c1c7c499d76619d5d9d3369560881"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00080.htm#ga33933dc1baf2a181b7f9fabd61a4163e">random</a> (double left, double right) tx_nodiscard tx_deprecated</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Генератор случайных чисел  <a href="a00080.htm#ga33933dc1baf2a181b7f9fabd61a4163e"></a><br/></td></tr>
<tr><td class="memTemplParams" colspan="2">template&lt;typename Tx , typename Ta , typename Tb &gt; </td></tr>
<tr><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="a00080.htm#gab7d5f6591f73008dd7c4034ed94d7528">In</a> (Tx x, Ta a, Tb b) tx_nodiscard tx_deprecated</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Проверка, находится ли параметр х внутри замкнутого интервала [a; b].  <a href="a00080.htm#gab7d5f6591f73008dd7c4034ed94d7528"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00080.htm#ga5de732de72c46b992ac2feeac2de7e42">tx_fpreset</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Переинициализирует математический сопроцессор  <a href="a00080.htm#ga5de732de72c46b992ac2feeac2de7e42"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00080.htm#ga74ff1048e0d6bc458c9904fbbe0a6026">txSqr</a> (double x)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight"><em>Очень удобное</em> возведение числа в квадрат.  <a href="a00080.htm#ga74ff1048e0d6bc458c9904fbbe0a6026"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00080.htm#gae0375f060fa35e25a4f5f4cc45573e5f">txDump</a> (const void *address, const char name[]=&quot;_txDump()&quot;, bool pause=true)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Распечатывает дамп области памяти в консоли.  <a href="a00080.htm#gae0375f060fa35e25a4f5f4cc45573e5f"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00080.htm#gad942f797bce07af74cd11c88d50ddd3e">txRegQuery</a> (const char *keyName, const char *valueName, void *value, size_t szValue)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Читает информацию из реестра Windows.  <a href="a00080.htm#gad942f797bce07af74cd11c88d50ddd3e"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00080.htm#ga6122d52806d23ff6bd480a0f07b75f2b">txSetLocale</a> (int codepage=_TX_CODEPAGE, const char locale[]=_TX_LOCALE, const wchar_t wLocale[]=_TX_WLOCALE)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Смена кодовой страницы консоли и локали стандартной библиотеки С++.  <a href="a00080.htm#ga6122d52806d23ff6bd480a0f07b75f2b"></a><br/></td></tr>
<tr><td colspan="2"><div class="groupHeader">Инициализация библиотеки</div></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">HWND&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gafce21ce98474d5559f316b3d47cdbfab">txCreateWindow</a> (double sizeX, double sizeY, bool centered=true)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Создание окна рисования  <a href="a00081.htm#gafce21ce98474d5559f316b3d47cdbfab"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">HDC &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56">txDC</a> () tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.  <a href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">RGBQUAD *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga3a8ec79acc0dcbcc04bff3aecc235b4e">txVideoMemory</a> () tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает буфер памяти, связанный с холстом (HDC) TXLib.  <a href="a00081.htm#ga3a8ec79acc0dcbcc04bff3aecc235b4e"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gaa72c4849ac0c9bf6f95893f4265b9843">txSetDefaults</a> (HDC dc=txDC())</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Установка параметров рисования по умолчанию.  <a href="a00081.htm#gaa72c4849ac0c9bf6f95893f4265b9843"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga3291ffa23a348c25985d780ab8f7088b">txOK</a> () tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Проверка правильности работы библиотеки  <a href="a00081.htm#ga3291ffa23a348c25985d780ab8f7088b"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">POINT&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga11074386e81c0c8677f36c0a16ac0aa1">txGetExtent</a> (HDC dc=txDC()) tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает размер окна, картинки или холста в виде структуры POINT.  <a href="a00081.htm#ga11074386e81c0c8677f36c0a16ac0aa1"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gab79782d80f6c61587d02f0633aa2f198">txGetExtentX</a> (HDC dc=txDC()) tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает ширину окна или холста.  <a href="a00081.htm#gab79782d80f6c61587d02f0633aa2f198"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gaa9bb7fd84e0b9f59c96be89d70c74321">txGetExtentY</a> (HDC dc=txDC()) tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает высоту окна или холста.  <a href="a00081.htm#gaa9bb7fd84e0b9f59c96be89d70c74321"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">HWND&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gafa31ebd8ed957c41713900a407497cf8">txWindow</a> () tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает дескриптор окна рисования  <a href="a00081.htm#gafa31ebd8ed957c41713900a407497cf8"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gaf382eed71ecf8229882fe544035d66dc">txVersion</a> () tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает строку с информацией о текущей версии библиотеки.  <a href="a00081.htm#gaf382eed71ecf8229882fe544035d66dc"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gab2c5f0eff263a7297997281c3d451b91">txVersionNumber</a> () tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает номер версии библиотеки.  <a href="a00081.htm#gab2c5f0eff263a7297997281c3d451b91"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga12ffceef73c1a081c073f4d7c2914618">txGetModuleFileName</a> (bool fileNameOnly=true) tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает имя исполняемого файла или изначальный заголовок окна TXLib.  <a href="a00081.htm#ga12ffceef73c1a081c073f4d7c2914618"></a><br/></td></tr>
<tr><td colspan="2"><div class="groupHeader">Рисование фигур</div></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga78e83baeb6a02d5fa33dd8b062e513d9">txClear</a> (HDC dc=txDC())</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Стирает холст текущим цветом заполнения.  <a href="a00081.htm#ga78e83baeb6a02d5fa33dd8b062e513d9"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gafafd861ab7dc599b2e68b258b6727c85">txSetPixel</a> (double x, double y, COLORREF color, HDC dc=txDC())</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Рисует пиксель (точку на экране).  <a href="a00081.htm#gafafd861ab7dc599b2e68b258b6727c85"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">COLORREF&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga90daedc95ac28938003edb5b50479542">txGetPixel</a> (double x, double y, HDC dc=txDC()) tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает текущий цвет точки (пикселя) на экране.  <a href="a00081.htm#ga90daedc95ac28938003edb5b50479542"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gaaee38df6f38b6f1729b9db1c4ac23e65">txLine</a> (double x0, double y0, double x1, double y1, HDC dc=txDC())</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Рисует линию.  <a href="a00081.htm#gaaee38df6f38b6f1729b9db1c4ac23e65"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga18a0418f3c06463e958077cddf2a4864">txRectangle</a> (double x0, double y0, double x1, double y1, HDC dc=txDC())</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Рисует прямоугольник.  <a href="a00081.htm#ga18a0418f3c06463e958077cddf2a4864"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gacbbb638439ad7ba88804178516019fb1">txPolygon</a> (const POINT points[], int numPoints, HDC dc=txDC())</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Рисует ломаную линию или многоугольник.  <a href="a00081.htm#gacbbb638439ad7ba88804178516019fb1"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gaaf82e7c5a0fd06548f42c757f73d3dae">txEllipse</a> (double x0, double y0, double x1, double y1, HDC dc=txDC())</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Рисует эллипс.  <a href="a00081.htm#gaaf82e7c5a0fd06548f42c757f73d3dae"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gaa14e9c2a46cf713efaa1f850074d8adc">txCircle</a> (double x, double y, double r)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Рисует окружность или круг.  <a href="a00081.htm#gaa14e9c2a46cf713efaa1f850074d8adc"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga5e1e4cc39cc18962bb480c4adfa1344d">txArc</a> (double x0, double y0, double x1, double y1, double startAngle, double totalAngle, HDC dc=txDC())</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Рисует дугу эллипса.  <a href="a00081.htm#ga5e1e4cc39cc18962bb480c4adfa1344d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga8e06e3abcb6b3724d332feb8aa83a8df">txPie</a> (double x0, double y0, double x1, double y1, double startAngle, double totalAngle, HDC dc=txDC())</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Рисует сектор эллипса.  <a href="a00081.htm#ga8e06e3abcb6b3724d332feb8aa83a8df"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga59468ca0fd4c182ac0a03573267eb3e9">txChord</a> (double x0, double y0, double x1, double y1, double startAngle, double totalAngle, HDC dc=txDC())</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Рисует хорду эллипса.  <a href="a00081.htm#ga59468ca0fd4c182ac0a03573267eb3e9"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga8adde0a20efa7597d8653653817353b2">txFloodFill</a> (double x, double y, COLORREF color=TX_TRANSPARENT, DWORD mode=FLOODFILLSURFACE, HDC dc=txDC())</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Заливает произвольный контур текущим цветом заполнения.  <a href="a00081.htm#ga8adde0a20efa7597d8653653817353b2"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gaf5f3dec18e058830a6eb85ca127472df">txTriangle</a> (double x1, double y1, double x2, double y2, double x3, double y3)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Функция, которая <em>должна бы</em> рисовать треугольник.  <a href="a00081.htm#gaf5f3dec18e058830a6eb85ca127472df"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gac76227ff55076802ea267be18b4d7a8d">txDrawMan</a> (int x, int y, int sizeX, int sizeY, COLORREF color, double handL, double handR, double twist, double head, double eyes, double wink, double crazy, double smile, double hair, double wind)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Рисует человечка.  <a href="a00081.htm#gac76227ff55076802ea267be18b4d7a8d"></a><br/></td></tr>
<tr><td colspan="2"><div class="groupHeader">Работа с текстом</div></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga52e119361961d9eee33c176a3084e55d">txTextOut</a> (double x, double y, const char text[], HDC dc=txDC())</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Рисует текст.  <a href="a00081.htm#ga52e119361961d9eee33c176a3084e55d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gaf6a9b31e58b6a0523ce1636a97053606">txDrawText</a> (double x0, double y0, double x1, double y1, const char text[], unsigned format=DT_CENTER|DT_VCENTER|DT_WORDBREAK|DT_WORD_ELLIPSIS, HDC dc=txDC())</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Рисует текст, размещенный в прямоугольной области.  <a href="a00081.htm#gaf6a9b31e58b6a0523ce1636a97053606"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">HFONT&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga6689b9a89add9c5eb5cf54a8c86539a4">txSelectFont</a> (const char name[], double sizeY, double sizeX=-1, int bold=FW_DONTCARE, bool italic=false, bool underline=false, bool strikeout=false, double angle=0, HDC dc=txDC())</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Выбирает текущий шрифт, его размер и другие атрибуты.  <a href="a00081.htm#ga6689b9a89add9c5eb5cf54a8c86539a4"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">SIZE&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga64af5f87cd652548278ff98d26f58148">txGetTextExtent</a> (const char text[], HDC dc=txDC()) tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Вычисляет размеры текстовой надписи.  <a href="a00081.htm#ga64af5f87cd652548278ff98d26f58148"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gad5483eacac697420a84f66733e45ed02">txGetTextExtentX</a> (const char text[], HDC dc=txDC()) tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Вычисляет ширину текстовой надписи.  <a href="a00081.htm#gad5483eacac697420a84f66733e45ed02"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gac021e9984ef217a7a8c14094e3d684c9">txGetTextExtentY</a> (const char text[], HDC dc=txDC()) tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Вычисляет высоту текстовой надписи.  <a href="a00081.htm#gac021e9984ef217a7a8c14094e3d684c9"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga09938df8859ae8b62638a3af76ee6735">txSetTextAlign</a> (unsigned align=TA_CENTER|TA_BASELINE, HDC dc=txDC())</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Устанавливает текущее выравнивание текста (влево/вправо/по центру).  <a href="a00081.htm#ga09938df8859ae8b62638a3af76ee6735"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">LOGFONT *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga794901725b6c4a96f585742b70c0ea05">txFontExist</a> (const char name[]) tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Ищет шрифт по его названию.  <a href="a00081.htm#ga794901725b6c4a96f585742b70c0ea05"></a><br/></td></tr>
<tr><td colspan="2"><div class="groupHeader">Рисование в памяти (на "виртуальном холсте") и загрузка изображений</div></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">HDC&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga1008da052f2fbe9ec0f70c2f6b4f0700">txCreateCompatibleDC</a> (double sizeX, double sizeY, HBITMAP bitmap=NULL) tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Создает дополнительный холст (контекст рисования, Device Context, DC) в памяти.  <a href="a00081.htm#ga1008da052f2fbe9ec0f70c2f6b4f0700"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">HDC&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga7535f88c0fd15b4b49195060d38f2603">txCreateDIBSection</a> (double sizeX, double sizeY, RGBQUAD **pixels=NULL) tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Создает аппаратно-независимый дополнительный холст (контекст рисования, Device Context, DC) в памяти с возможностью прямого доступа к нему как к массиву.  <a href="a00081.htm#ga7535f88c0fd15b4b49195060d38f2603"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">HDC&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gaec4970aac125bcf0d8a0b10a118222f7">txLoadImage</a> (const char filename[], unsigned imageFlags=IMAGE_BITMAP, unsigned loadFlags=LR_LOADFROMFILE) tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Загружает из файла изображение в формате BMP. Делает это довольно медленно.  <a href="a00081.htm#gaec4970aac125bcf0d8a0b10a118222f7"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga505f212582bf9b2bf95a4ef15f84af42">txDeleteDC</a> (HDC dc)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Уничтожает холст (контекст рисования, DC) в памяти.  <a href="a00081.htm#ga505f212582bf9b2bf95a4ef15f84af42"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga6dfb121b4a1116f987baeb515713cbbf">txBitBlt</a> (HDC destImage, double xDest, double yDest, double width, double height, HDC sourceImage, double xSource=0, double ySource=0, unsigned operation=SRCCOPY)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Копирует изображение с одного холста (контекста рисования, DC) на другой.  <a href="a00081.htm#ga6dfb121b4a1116f987baeb515713cbbf"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga3cb3f1af2aed93b9df7b7e9730e2cb89">txBitBlt</a> (double xDest, double yDest, HDC sourceImage, double xSource=0, double ySource=0)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Копирует изображение на экран.  <a href="a00081.htm#ga3cb3f1af2aed93b9df7b7e9730e2cb89"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga54f48f0bcb9453add294e0a9f8b1fb1d">txTransparentBlt</a> (HDC destImage, double xDest, double yDest, double width, double height, HDC sourceImage, double xSource=0, double ySource=0, COLORREF transColor=TX_BLACK)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом прозрачности.  <a href="a00081.htm#ga54f48f0bcb9453add294e0a9f8b1fb1d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga6e5105284a1d93aff19fc29d14a8a532">txTransparentBlt</a> (double xDest, double yDest, HDC sourceImage, COLORREF transColor=TX_BLACK, double xSource=0, double ySource=0)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Копирует изображение на экран с учетом прозрачности.  <a href="a00081.htm#ga6e5105284a1d93aff19fc29d14a8a532"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga4d6f780cdef622df0fda71d0b3cfee52">txAlphaBlend</a> (HDC destImage, double xDest, double yDest, double width, double height, HDC sourceImage, double xSource=0, double ySource=0, double alpha=1.0)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом полупрозрачности.  <a href="a00081.htm#ga4d6f780cdef622df0fda71d0b3cfee52"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gaa0af478a9b959bb096a8a686d2e685b5">txAlphaBlend</a> (double xDest, double yDest, HDC sourceImage, double xSource=0, double ySource=0, double alpha=1.0)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Копирует изображение на экран с учетом полупрозрачности.  <a href="a00081.htm#gaa0af478a9b959bb096a8a686d2e685b5"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">HDC&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga6280d640bb3b08dc82c8dd29caf5ff47">txUseAlpha</a> (HDC image)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Пересчитывает цвета пикселей с учетом прозрачности (переводит цвета в формат Premultiplied Alpha).  <a href="a00081.htm#ga6280d640bb3b08dc82c8dd29caf5ff47"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga45389db909311454bbdfed3898d760d1">txSaveImage</a> (const char filename[], HDC dc=txDC())</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Сохраняет в файл изображение в формате BMP.  <a href="a00081.htm#ga45389db909311454bbdfed3898d760d1"></a><br/></td></tr>
<tr><td colspan="2"><div class="groupHeader">Вспомогательные функции</div></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga6c293f0b0f71efebdeeb0b56a97ba50c">txSleep</a> (double time=0)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Задерживает выполнение программы на определенное время.  <a href="a00081.htm#ga6c293f0b0f71efebdeeb0b56a97ba50c"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gae92e621aaed81f90e4d142356e38762a">txBegin</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Блокирует обновление изображения окна, во избежание мигания.  <a href="a00081.htm#gae92e621aaed81f90e4d142356e38762a"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga809dc04afd5348247846ee01ce9a06e6">txEnd</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Разблокирует обновление окна, заблокированное функцией <a class="el" href="a00081.htm#gae92e621aaed81f90e4d142356e38762a" title="Блокирует обновление изображения окна, во избежание мигания.">txBegin()</a>.  <a href="a00081.htm#ga809dc04afd5348247846ee01ce9a06e6"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gadc7fd9cdc8c007693db7b6d7de794709">txRedrawWindow</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Обновляет изображение в окне TXLib вручную.  <a href="a00081.htm#gadc7fd9cdc8c007693db7b6d7de794709"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gaff3d9c60900531f438a19216485bdd41">txUpdateWindow</a> (int update=true)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Разрешает или запрещает автоматическое обновление изображения в окне.  <a href="a00081.htm#gaff3d9c60900531f438a19216485bdd41"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gabc64e03f4ca966e76bc714bbe8173761">txSelectObject</a> (HGDIOBJ obj, HDC dc=txDC())</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Устанавливает текущий активный объект GDI.  <a href="a00081.htm#gabc64e03f4ca966e76bc714bbe8173761"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga93cecf6b117fc403c0488f388b78a6d1">txIDontWantToHaveAPauseAfterMyProgramBeforeTheWindowWillClose_AndIWillNotBeAskingWhereIsMyPicture</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Делает нечто иногда удобное. См. название функции.  <a href="a00081.htm#ga93cecf6b117fc403c0488f388b78a6d1"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga0a3cf3a018cea9d5889d2626e9a37136">txDestroyWindow</a> (HWND wnd=txWindow())</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Уничтожает окно.  <a href="a00081.htm#ga0a3cf3a018cea9d5889d2626e9a37136"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga49983bddca35d531c521cf04c6c2449f">txQueryPerformance</a> () tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Оценивает скорость работы компьютера.  <a href="a00081.htm#ga49983bddca35d531c521cf04c6c2449f"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga1aca71127c9986f995b2372903d65964">txGetFPS</a> (int minFrames=txFramesToAverage) tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Выдает количество кадров (вызовов этой функции) в секунду.  <a href="a00081.htm#ga1aca71127c9986f995b2372903d65964"></a><br/></td></tr>
<tr><td colspan="2"><div class="groupHeader">Работа с Мышью!</div></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">POINT&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00082.htm#ga44606f3b7f5f345d15bb20d46fcf78b6">txMousePos</a> () tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает позицию Мыши!  <a href="a00082.htm#ga44606f3b7f5f345d15bb20d46fcf78b6"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00082.htm#gae56f541d32ff7324dd6dd340411c1130">txMouseX</a> () tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает X-Координату Мыши!  <a href="a00082.htm#gae56f541d32ff7324dd6dd340411c1130"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00082.htm#ga481847278ec77647082072325be5c226">txMouseY</a> () tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает Y-Координату Мыши!  <a href="a00082.htm#ga481847278ec77647082072325be5c226"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00082.htm#ga3317e38b22d8e6f116c29503144c2cc2">txMouseButtons</a> () tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает состояние Кнопок Мыши!  <a href="a00082.htm#ga3317e38b22d8e6f116c29503144c2cc2"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">Mouse &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00082.htm#ga86effc891e88ce038ddacfe398412291">txCatchMouse</a> (bool shouldEat=true)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Ловит Мышь!  <a href="a00082.htm#ga86effc891e88ce038ddacfe398412291"></a><br/></td></tr>
<tr><td colspan="2"><div class="groupHeader">Функции консоли</div></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga791155510da5fc336b3dbe4deab37974">txSetConsoleAttr</a> (unsigned colors=0x07)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Устанавливает цветовые атрибуты консоли.  <a href="a00081.htm#ga791155510da5fc336b3dbe4deab37974"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gad1fdf92b2b1e0e3d56e03fad24d735bd">txGetConsoleAttr</a> () tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает текущие цветовые атрибуты консоли.  <a href="a00081.htm#gad1fdf92b2b1e0e3d56e03fad24d735bd"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga2cb63c12d9206e9ed2b2c83c9a08f68e">txClearConsole</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Стирает текст консоли.  <a href="a00081.htm#ga2cb63c12d9206e9ed2b2c83c9a08f68e"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">POINT&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gaee548f7b5672cbcbb99246e0291d7336">txSetConsoleCursorPos</a> (double x, double y)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Устанавливает позицию мигающего курсора консоли.  <a href="a00081.htm#gaee548f7b5672cbcbb99246e0291d7336"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">POINT&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga3227242c57eef33049cdaee655f4faee">txGetConsoleCursorPos</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает позицию мигающего курсора консоли.  <a href="a00081.htm#ga3227242c57eef33049cdaee655f4faee"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">POINT&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gade3dc928a81efd7054c61fa6cb4ddc06">txGetConsoleExtent</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает размер консоли.  <a href="a00081.htm#gade3dc928a81efd7054c61fa6cb4ddc06"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">POINT&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga250455abeab8c99a51153ef8f4ec0396">txGetConsoleFontSize</a> () tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает размеры шрифта консоли.  <a href="a00081.htm#ga250455abeab8c99a51153ef8f4ec0396"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gaa148d2040d20ed74cf46ab186c35f9ed">txTextCursor</a> (bool blink=true)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Запрещает или разрешает рисование мигающего курсора в окне.  <a href="a00081.htm#gaa148d2040d20ed74cf46ab186c35f9ed"></a><br/></td></tr>
<tr><td colspan="2"><div class="groupHeader"></div></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00080.htm#gadfae620e55d8798711d4a0c72f6af99e">In</a> (const POINT &amp;pt, const RECT &amp;rect) tx_nodiscard tx_deprecated</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Проверка, находится ли точка pt внутри прямоугольника rect.  <a href="a00080.htm#gadfae620e55d8798711d4a0c72f6af99e"></a><br/></td></tr>
<tr><td colspan="2"><div class="groupHeader">Очень служебные функции</div></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">WNDPROC&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00080.htm#ga30fb1a6913174dfcea5079391f655be2">txSetWindowsHook</a> (WNDPROC wndProc=NULL)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Устанавливает альтернативную функцию обработки оконных сообщений Windows (оконную функцию) для окна TXLib.  <a href="a00080.htm#ga30fb1a6913174dfcea5079391f655be2"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00080.htm#ga532fa8a55c4f3d4f94ff0fdceae732b2">txLock</a> (bool wait=true)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Блокировка холста (контекста рисования).  <a href="a00080.htm#ga532fa8a55c4f3d4f94ff0fdceae732b2"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00080.htm#ga8fe4ec4c66cb69ce337747fe65dd0cc6">txUnlock</a> ()</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Разблокировка холста  <a href="a00080.htm#ga8fe4ec4c66cb69ce337747fe65dd0cc6"></a><br/></td></tr>
<tr><td colspan="2"><div class="groupHeader">Пример использования класса диалога: функция txInputBox()</div></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00083.htm#gaab464722960a885cce94b655c87590fc">txInputBox</a> (const char *text=NULL, const char *caption=NULL, const char *input=NULL) tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Ввод строки в отдельном окне.  <a href="a00083.htm#gaab464722960a885cce94b655c87590fc"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="var-members"></a>
Переменные</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00080.htm#gaf59817ad656dcbb3f9baebeb4d7f82f7">txPI</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Число Пи  <a href="a00080.htm#gaf59817ad656dcbb3f9baebeb4d7f82f7"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="member-group"></a>
Установка цветов и режимов рисования</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga3e94cfad3d9080241f84129d6e5c09b5">txColors</a> { <br/>
&#160;&#160;<a class="el" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a9f0adfcb24eeb418fc39fe950db65ec8">TX_BLACK</a> =  RGB ( 0, 0, 0), 
<br/>
&#160;&#160;<a class="el" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aac23422a0b96bfc917484ba1fb0990de">TX_BLUE</a> =  RGB ( 0, 0, 128), 
<br/>
&#160;&#160;<a class="el" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aa13a0e0eb4587540bd06cb5d55083032">TX_GREEN</a> =  RGB ( 0, 128, 0), 
<br/>
&#160;&#160;<a class="el" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a3f59cd6ad2f1c2cea3f1b4f93baae64d">TX_CYAN</a> =  RGB ( 0, 128, 128), 
<br/>
&#160;&#160;<a class="el" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a342ad901a39ab4b40f091f6699b64927">TX_RED</a> =  RGB (128, 0, 0), 
<br/>
&#160;&#160;<a class="el" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aec305e1fce8a99fca3c442364389e22b">TX_MAGENTA</a> =  RGB (128, 0, 128), 
<br/>
&#160;&#160;<a class="el" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5ad71bcc76691c708c653567bc70129e4b">TX_BROWN</a> =  RGB (128, 128, 0), 
<br/>
&#160;&#160;<a class="el" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5ab192f19b013a2563740be0da4e7252d9">TX_ORANGE</a> =  RGB (255, 128, 0), 
<br/>
&#160;&#160;<a class="el" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aaefd282232c1503377c5a5e3545c579a">TX_GRAY</a> =  RGB (160, 160, 160), 
<br/>
&#160;&#160;<a class="el" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a5308a5fc6c34169a8af67630a5a750d5">TX_DARKGRAY</a> =  RGB (128, 128, 128), 
<br/>
&#160;&#160;<a class="el" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5abec0ab16c8a1ed55e137c20f80cdd25e">TX_LIGHTGRAY</a> =  RGB (192, 192, 192), 
<br/>
&#160;&#160;<a class="el" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a00514ed69e9dd0fafeb324c0258f9030">TX_LIGHTBLUE</a> =  RGB ( 0, 0, 255), 
<br/>
&#160;&#160;<a class="el" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5ae45f1e493cce7ef326f8bd9e8c684c6b">TX_LIGHTGREEN</a> =  RGB ( 0, 255, 128), 
<br/>
&#160;&#160;<a class="el" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a05b6100527e0b7a96dcda198a1439382">TX_LIGHTCYAN</a> =  RGB ( 0, 255, 255), 
<br/>
&#160;&#160;<a class="el" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a1c1e8dec8618fe54eee9e569a828a504">TX_LIGHTRED</a> =  RGB (255, 0, 128), 
<br/>
&#160;&#160;<a class="el" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5af3ef6cac77e7ca01e271a3562ceeb52f">TX_LIGHTMAGENTA</a> =  RGB (255, 0, 255), 
<br/>
&#160;&#160;<a class="el" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5ae197423002e969d08646554e8b647454">TX_PINK</a> =  RGB (255, 128, 255), 
<br/>
&#160;&#160;<a class="el" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a2331cdb79541487869e7c2445a2eb5f0">TX_YELLOW</a> =  RGB (255, 255, 128), 
<br/>
&#160;&#160;<a class="el" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025">TX_WHITE</a> =  RGB (255, 255, 255), 
<br/>
&#160;&#160;<a class="el" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a01fe8cb0f589868456167ee3a4652df8">TX_TRANSPARENT</a> =  0xFFFFFFFF, 
<br/>
&#160;&#160;<a class="el" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a081ac86689e98e0c036e960e9cb159ac">TX_NULL</a> =  TX_TRANSPARENT, 
<br/>
&#160;&#160;<a class="el" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5aba144158f057694f9f08189c0b6a7d65">TX_HUE</a> =  0x04000000, 
<br/>
&#160;&#160;<a class="el" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a18419bb9192c947fb25d517765dd04cc">TX_SATURATION</a> =  0x05000000, 
<br/>
&#160;&#160;<a class="el" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5acc91e717a52d475213f0201bfae5341e">TX_LIGHTNESS</a> =  0x06000000
<br/>
 }</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight"><p>Названия предопределенных цветов. </p>
 <a href="a00081.htm#ga3e94cfad3d9080241f84129d6e5c09b5">Подробнее...</a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">COLORREF&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341">RGB</a> (int red, int green, int blue)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Создает (смешивает) цвет из трех базовых цветов (компонент).  <a href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">HPEN&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23">txSetColor</a> (COLORREF color, double thickness=1, HDC dc=txDC())</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Устанавливает текущий цвет и толщину линий, цвет текста.  <a href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">COLORREF&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gab6462db4dbcca4915d460036c6c8896d">txGetColor</a> (HDC dc=txDC()) tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает текущий цвет линий и текста.  <a href="a00081.htm#gab6462db4dbcca4915d460036c6c8896d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">HBRUSH&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2">txSetFillColor</a> (COLORREF color, HDC dc=txDC())</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Устанавливает текущий цвет заполнения фигур.  <a href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">COLORREF&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga4d83b7e2d67f422cf703e15f2d7c4dfa">txGetFillColor</a> (HDC dc=txDC()) tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает текущий цвет заполнения фигур.  <a href="a00081.htm#ga4d83b7e2d67f422cf703e15f2d7c4dfa"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#gac2b196b6826392229fa209e01817f941">txExtractColor</a> (COLORREF color, COLORREF component) tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Извлекает цветовую компоненту (цветовой канал) из смешанного цвета.  <a href="a00081.htm#gac2b196b6826392229fa209e01817f941"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">COLORREF&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga1350174ec2a2c83182437f04c88c2d95">txRGB2HSL</a> (COLORREF rgbColor) tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Преобразует цвет из формата RGB в формат HSL.  <a href="a00081.htm#ga1350174ec2a2c83182437f04c88c2d95"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">COLORREF&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00081.htm#ga6d5e95c1f234d32b8859826859127244">txHSL2RGB</a> (COLORREF hslColor) tx_nodiscard</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Преобразует цвет из формата HSL в формат RGB.  <a href="a00081.htm#ga6d5e95c1f234d32b8859826859127244"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="member-group"></a>
Другие полезные функции, не связанные с рисованием</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ada57b6ccf9158714dcd571e939b4004d"></a><!-- doxytag: member="TXLib.h::TX_PRINTF" ref="ada57b6ccf9158714dcd571e939b4004d" args="(...)" -->
#define&#160;</td><td class="memItemRight" valign="bottom"><b>TX_PRINTF</b>(...)&#160;&#160;&#160;( _txPrintfCheck (__VA_ARGS__), txPrintf (__VA_ARGS__) )</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00080.htm#ga799c47c1a2a151647cd765e1fa4b27b5">sizearr</a>(arr)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Вычисление размера массива в элементах  <a href="a00080.htm#ga799c47c1a2a151647cd765e1fa4b27b5"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3379d227f91f891ac97d068ab90ee871"></a><!-- doxytag: member="TXLib.h::SIZEARR" ref="a3379d227f91f891ac97d068ab90ee871" args="(arr)" -->
#define&#160;</td><td class="memItemRight" valign="bottom"><b>SIZEARR</b>(arr)&#160;&#160;&#160;( sizeof (arr) / sizeof ((arr)[0]) )</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00080.htm#ga177f8bcb7544821ea4b5bd0571fe7196">txPlaySound</a> (const char filename[]=NULL, DWORD mode=SND_ASYNC)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Воспроизводит звуковой файл.  <a href="a00080.htm#ga177f8bcb7544821ea4b5bd0571fe7196"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">intptr_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00080.htm#ga3d4731dd56b60635c80bc662c295c821">txPlayVideo</a> (int x, int y, int width, int height, const char fileName[], double zoom=0, double gain=1, HWND wnd=txWindow())</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Проигрывает видео.  <a href="a00080.htm#ga3d4731dd56b60635c80bc662c295c821"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">intptr_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00080.htm#gaf5a6626fa2606a7f374fcc077fc92363">txPlayVideo</a> (const char fileName[], double zoom=0, double gain=1, HWND wnd=txWindow())</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Проигрывает видео.  <a href="a00080.htm#gaf5a6626fa2606a7f374fcc077fc92363"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00080.htm#gad6db0ee1b36288c7eb3f2196077971f9">txSpeak</a> (const char *text,...) tx_printfy(1)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Читает <small>&#160;</small><span class="s"> мысли </span><small>&#160;</small> текст вслух.  <a href="a00080.htm#gad6db0ee1b36288c7eb3f2196077971f9"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00080.htm#gaf9be7d98f32c0737a2d7f30039a60c0a">txMessageBox</a> (const char text[]=&quot;Муаххаха! :)&quot;, const char header[]=&quot;TXLib сообщает&quot;, unsigned flags=MB_ICONINFORMATION|MB_OKCANCEL)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Выводит сообщение в окне с помощью функции MessageBox.  <a href="a00080.htm#gaf9be7d98f32c0737a2d7f30039a60c0a"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00080.htm#ga782025393f08a0efb645b9d2e30f2586">txGetAsyncKeyState</a> (int key)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Проверяет, нажата ли указанная клавиша.  <a href="a00080.htm#ga782025393f08a0efb645b9d2e30f2586"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00080.htm#ga03a5e3473a7e7e22764939ebb13f4e63">txNotifyIcon</a> (unsigned flags, const char title[], const char format[],...) tx_printfy(3)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Выводит всплывающее сообщение в системном трее.  <a href="a00080.htm#ga03a5e3473a7e7e22764939ebb13f4e63"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00080.htm#ga372c7e43cc383da3f8e8e00fc60be91f">txOutputDebugPrintf</a> (const char format[],...) tx_printfy(1)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Выводит сообщение в отладчике.  <a href="a00080.htm#ga372c7e43cc383da3f8e8e00fc60be91f"></a><br/></td></tr>
<tr><td class="memTemplParams" colspan="2">template&lt;typename T , typename... ArgsT&gt; </td></tr>
<tr><td class="memTemplItemLeft" align="right" valign="top">int&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="a00080.htm#ga9b529d93a8ebfa5ec2d02fa80819331a">txPrintf</a> (const char *format, ArgsT...args)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Добрый дядюшка Принтф. Теперь шаболонный.  <a href="a00080.htm#ga9b529d93a8ebfa5ec2d02fa80819331a"></a><br/></td></tr>
<tr><td class="memTemplParams" colspan="2">template&lt;typename T , typename... ArgsT&gt; </td></tr>
<tr><td class="memTemplItemLeft" align="right" valign="top">int&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="a00080.htm#ga4a3e395b81ff91d95fd23dafb3562e7c">txPrintf</a> (std::ostringstream &amp;stream, const char *format, ArgsT...args)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Печатает в строковый поток вывода, как sprintf().  <a href="a00080.htm#ga4a3e395b81ff91d95fd23dafb3562e7c"></a><br/></td></tr>
<tr><td class="memTemplParams" colspan="2">template&lt;typename T , typename... ArgsT&gt; </td></tr>
<tr><td class="memTemplItemLeft" align="right" valign="top">int&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="a00080.htm#ga18959fb3fc2657b0019c0052bbb3e060">txPrintf</a> (char buffer[], size_t size, const char *format, ArgsT...args)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Печатает в строковый буфер, как sprintf().  <a href="a00080.htm#ga18959fb3fc2657b0019c0052bbb3e060"></a><br/></td></tr>
<tr><td class="memTemplParams" colspan="2">template&lt;typename... ArgsT&gt; </td></tr>
<tr><td class="memTemplItemLeft" align="right" valign="top">std::string&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="a00080.htm#ga06beb201bdba586f44f029ffc5083bcf">txFormat</a> (const char *format, ArgsT...args)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Форматирует строку, как sprintf().  <a href="a00080.htm#ga06beb201bdba586f44f029ffc5083bcf"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="member-group"></a>
</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00080.htm#ga6a20c009067e724a95695c674c2d3124">tx_auto_func</a>(func)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Автоматический вызов функции при завершении другой функции (аналог <code>__finally</code>)  <a href="a00080.htm#ga6a20c009067e724a95695c674c2d3124"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="member-group"></a>
</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00080.htm#gafbd4278ff893fc1c1e28b086197adebe">txDemangle</a> (const char *mangledName)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Преобразует декорированное имя С++ в название типа.  <a href="a00080.htm#gafbd4278ff893fc1c1e28b086197adebe"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="member-group"></a>
Настроечные константы и переменные</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00084.htm#gaab281ee20ea6be5eae34d0e15bf03dcf">_TX_NOINIT</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Запрет ранней инициализации TXLib.  <a href="a00084.htm#gaab281ee20ea6be5eae34d0e15bf03dcf"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00084.htm#ga1d957b3bb047b26b94045966803bc505">TX_USE_SFML</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Макрос, разрешающий использовать TXLib вместе с графической библиотекой <a href="http://sfml-dev.org">SFML</a>  <a href="a00084.htm#ga1d957b3bb047b26b94045966803bc505"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga15dc1a04b8701e2db400b005b7a17ced"></a><!-- doxytag: member="TXLib.h::_TX_EXCEPTIONS_LIMIT" ref="ga15dc1a04b8701e2db400b005b7a17ced" args="" -->
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00084.htm#ga15dc1a04b8701e2db400b005b7a17ced">_TX_EXCEPTIONS_LIMIT</a>&#160;&#160;&#160;16</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Максимальное количество исключений в программе. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gaf274c058737ec7e680437d2a1cdcd7b6"></a><!-- doxytag: member="TXLib.h::_TX_FATAL_EXCEPTIONS_LIMIT" ref="gaf274c058737ec7e680437d2a1cdcd7b6" args="" -->
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00084.htm#gaf274c058737ec7e680437d2a1cdcd7b6">_TX_FATAL_EXCEPTIONS_LIMIT</a>&#160;&#160;&#160;16</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Максимальное количество фатальных исключений. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gac924d92a0229125521f51c14000aa36d"></a><!-- doxytag: member="TXLib.h::_TX_FULL_STACKTRACE" ref="gac924d92a0229125521f51c14000aa36d" args="" -->
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00084.htm#gac924d92a0229125521f51c14000aa36d">_TX_FULL_STACKTRACE</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Если определено, не исключать адреса без отладочной информации из трассировок стека. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00084.htm#ga2c0a4fe0612f109c5c88d6d55a061db5">_TX_WAITABLE_PARENTS</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Список запускающих программ, которые ждут нажатия клавиши после завершения процесса TXLib.  <a href="a00084.htm#ga2c0a4fe0612f109c5c88d6d55a061db5"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00084.htm#ga9a495d013c6f08cd50220aca99ca56c2">_TX_ALLOW_KILL_PARENT</a>&#160;&#160;&#160;true</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Разрешать принудительное завершение вызывающих программ, ждущих нажатия клавиш после завершения TXLib.  <a href="a00084.htm#ga9a495d013c6f08cd50220aca99ca56c2"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00084.htm#ga664ae50e3ec3c7cf59cdd4b7eeef6a7f">TX_COMPILED</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Макросы для поддержки прекомпиляции TX Library.  <a href="a00084.htm#ga664ae50e3ec3c7cf59cdd4b7eeef6a7f"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00084.htm#ga69d3e86db3b7c7458bbcb7c505a3b884">_txLogName</a> [MAX_PATH] = &quot;&quot;</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Имя лог-файла TXLib.  <a href="a00084.htm#ga69d3e86db3b7c7458bbcb7c505a3b884"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00084.htm#ga8a148ac2f04e1f9c7414af69362e0668">_txConsoleMode</a> = SW_HIDE</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Режим отображения консольного окна. Допустимы любые флаги функции ShowWindow.  <a href="a00084.htm#ga8a148ac2f04e1f9c7414af69362e0668"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00084.htm#ga4ddb32d7a8a676537014da7aea7bf273">_txWindowStyle</a> = WS_POPUP | WS_BORDER | WS_CAPTION | WS_SYSMENU</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Стиль графического окна библиотеки.  <a href="a00084.htm#ga4ddb32d7a8a676537014da7aea7bf273"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00084.htm#gad8e573bf6e0fb87f5d0313b5108a6166">_txConsoleFont</a> = &quot;Lucida Console&quot;</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Шрифт консоли  <a href="a00084.htm#gad8e573bf6e0fb87f5d0313b5108a6166"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gacc95bfbcf7a0f9124e8cd5e80d0b3cd3"></a><!-- doxytag: member="TXLib.h::_txCursorBlinkInterval" ref="gacc95bfbcf7a0f9124e8cd5e80d0b3cd3" args="" -->
unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00084.htm#gacc95bfbcf7a0f9124e8cd5e80d0b3cd3">_txCursorBlinkInterval</a> = 500</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Интервал мигания курсора консоли (мс) <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00084.htm#gaf2070fcdbd473d328f17f130623db80a">_txWindowUpdateInterval</a> = 25</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Интервал обновления холста (мс)  <a href="a00084.htm#gaf2070fcdbd473d328f17f130623db80a"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga7859e95fc4faec435abe372989f4f8ac"></a><!-- doxytag: member="TXLib.h::_TX_TIMEOUT" ref="ga7859e95fc4faec435abe372989f4f8ac" args="" -->
const int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00084.htm#ga7859e95fc4faec435abe372989f4f8ac">_TX_TIMEOUT</a> = 1000</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Таймаут операций ожидания событий (мс) <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool(*&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00084.htm#gad85278fd5caaf0ce42e307d6ce8d79c5">_txSwapBuffers</a> )(HDC dest, int xDest, int yDest, int wDest, int hDest, HDC src, int xSrc, int ySrc, int wSrc, int hSrc, DWORD rOp) = NULL</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Указатель на функцию, выводящую изображение непосредственно в окно TXLib во время обработки WM_PAINT.  <a href="a00084.htm#gad85278fd5caaf0ce42e307d6ce8d79c5"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga352331b32407c4e95bc4f7a5e39fad25"></a><!-- doxytag: member="TXLib.h::_TX_BUFSIZE" ref="ga352331b32407c4e95bc4f7a5e39fad25" args="" -->
const unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00084.htm#ga352331b32407c4e95bc4f7a5e39fad25">_TX_BUFSIZE</a> = 1024</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Размеры внутренних статических строковых буферов TXLib. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gaa7273b2f613970c283053c5d9136addd"></a><!-- doxytag: member="TXLib.h::_TX_BIGBUFSIZE" ref="gaa7273b2f613970c283053c5d9136addd" args="" -->
const unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00084.htm#gaa7273b2f613970c283053c5d9136addd">_TX_BIGBUFSIZE</a> = <a class="el" href="a00084.htm#ga352331b32407c4e95bc4f7a5e39fad25">_TX_BUFSIZE</a> * 2</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Размеры больших статических буферов. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga9982623aefbe28deab03b1252777ec2a"></a><!-- doxytag: member="TXLib.h::_TX_HUGEBUFSIZE" ref="ga9982623aefbe28deab03b1252777ec2a" args="" -->
const unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00084.htm#ga9982623aefbe28deab03b1252777ec2a">_TX_HUGEBUFSIZE</a> = <a class="el" href="a00084.htm#ga352331b32407c4e95bc4f7a5e39fad25">_TX_BUFSIZE</a> * 20</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Размеры очень больших статических буферов. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga7b8b43782557dd87528da77b083364ec"></a><!-- doxytag: member="TXLib.h::_TX_STACKSIZE" ref="ga7b8b43782557dd87528da77b083364ec" args="" -->
const unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00084.htm#ga7b8b43782557dd87528da77b083364ec">_TX_STACKSIZE</a> = 64 * 1024</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Минимальный размер стека для потоков программы. <br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00084.htm#ga181143543b3883cf8570f80da3ad7fcc">_txWatchdogTimeout</a> = 10*<a class="el" href="a00084.htm#ga7859e95fc4faec435abe372989f4f8ac">_TX_TIMEOUT</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Лимит времени на завершение программы, начиная от завершения функции main() или от вызова exit(), в мс.  <a href="a00084.htm#ga181143543b3883cf8570f80da3ad7fcc"></a><br/></td></tr>
</table>
<hr/><a name="_details"></a><h2>Подробное описание</h2>
<div class="textblock"><p>Библиотека Тупого Художника (The Dumb Artist Library, TX Library, TXLib). </p>
<dl class="rcs"><dt><b>Version:</b></dt><dd>00173a, Revision: 168 </dd></dl>
<dl class="rcs"><dt><b>Copyright:</b></dt><dd>(C) Ded (Ilya Dedinsky, <a href="http://txlib.ru">http://txlib.ru</a>) &lt;<a href="mailto:mail@txlib.ru">mail@txlib.ru</a>&gt; </dd></dl>
<dl class="rcs"><dt><b>Date:</b></dt><dd>2020-08-13 00:46:05 +0400 </dd></dl>
<p>TX Library -- компактная библиотека двумерной графики для MS Windows на С++. Это небольшая "песочница" для начинающих реализована с целью помочь им в изучении простейших принципов программирования. Документация на русском языке. Философия TX Library -- облегчить первые шаги в программировании и подтолкнуть к творчеству и самостоятельности.</p>
<p>TX Library is a tiny 2D graphics library for MS Windows written in C++. This is a small sandbox for the very beginners to help them to learn basic programming principles. The documentation is in Russian.</p>
<p><b>Официальный сайт библиотеки:</b> <a href="http://txlib.ru"><b>txlib.ru.</b></a></p>
<p>См. также <a href="http://sourceforge.net/p/txlib">страницу проекта на SourceForge.</a> <b>Короткая ссылка на онлайн-документацию:</b> <a href="http://gg.gg/TXLib"><b>gg.gg/TXLib.</b></a></p>
<dl class="user"><dt><b>Установка библиотеки</b></dt><dd></dd></dl>
<p><b>Скачать библиотеку:</b> <a href="http://sourceforge.net/project/platformdownload.php?group_id=213688"><b>на сайте sourceforge.net.</b></a> См. также раздел <a class="el" href="main.htm#TXLibSetup">Установка библиотеки</a>.</p>
<dl class="note"><dt><b>Заметки:</b></dt><dd>Библиотека TXLib состоит из единственного файла и не требует никаких настроек в среде программирования, чтобы облегчить ее установку и работу для начинающих.</dd>
<dd>
Файл библиотеки большой и может компилироваться долго, поэтому обратите внимание на возможность использования прекомпилированной версии в проектак с раздельной компиляцией. См. макрос <a class="el" href="a00084.htm#ga664ae50e3ec3c7cf59cdd4b7eeef6a7f">TX_COMPILED</a>. Также можно определить макрос <code>WIN32_LEAN_AND_MEAN</code> до включения <code><a class="el" href="a00058.htm" title="Библиотека Тупого Художника (The Dumb Artist Library, TX Library, TXLib).">TXLib.h</a></code> в программу.</dd></dl>
<ol type="1">
<li><a href="https://sourceforge.net/projects/txlib/files/latest/download">Скачайте</a> программу установки, загрузка по ссылке начнется автоматически. Ее имя имеет вид <code>TXLib-v0173a.rar.exe.</code> Цифры могут отличаться (это номер версии), расширение <code></code>.exe может не отображаться, в зависимости от настроек Windows.</li>
<li>Запустите скачанную программу установки. Программа установки -- это саморазархивирующийся архив, она не требует особых прав для запуска.</li>
<li>На рабочем столе появится "Ярлык для TX". Откройте его и запустите систему помощи <code>TXLib Help,</code> изучите ее. Простейший пример см. &lt;<a href="http://storage.ded32.net.ru/Lib/TX/TXUpdate/Doc/HTML.ru/a00001.htm">http://storage.ded32.net.ru/Lib/TX/TXUpdate/Doc/HTML.ru/a00001.htm</a>&gt; здесь. Другие примеры см. <a href="http://storage.ded32.net.ru/Lib/TX/TXUpdate/Doc/HTML.ru/dirs.htm">в папке Examples,</a> в папке Examples/Demo.</li>
</ol>
<ul>
<li>Если при установке происходят ошибки или запуск программы установки невозможен, откройте файл библиотеки <code><a class="el" href="a00058.htm" title="Библиотека Тупого Художника (The Dumb Artist Library, TX Library, TXLib).">TXLib.h</a></code> <a href="http://storage.ded32.net.ru/Lib/TX/TXUpdate/TXLib.h">отсюда</a>, сохраните (Ctrl+S) его в свою рабочую папку, где вы сохраняете свои программы. Пользуйтесь <a href="http://storage.ded32.net.ru/Lib/TX/TXUpdate/Doc/HTML.ru/index.htm">системой помощи онлайн.</a></li>
</ul>
<ol type="1">
<li>Для полной обработки ошибок библиотеке требуются модули, которые желательно установить (скопировать) в папку Windows. Устанавливать эти библиотеки не обязательно. Программы, использующие TXLib, запускаются и без них.</li>
</ol>
<ol type="1">
<li>Модули библиотеки Microsoft DBGHELP для доступа к отладочным символам Microsoft:</li>
</ol>
<ul>
<li><code>dbghelp32.dll</code> или dbghe32.dll - для 32-разрядных программ (либо <code>dbghelp.dll</code>, 32-разрядная версия),</li>
<li><code>dbghelp64.dll</code> или dbghe64.dll - для 64-разрядных программ (либо <code>dbghelp.dll</code>, 64-разрядная версия),</li>
</ul>
<ol type="1">
<li>Модули библиотеки <a href="https://github.com/jrfonseca/drmingw/releases">DrMinGW</a> для доступа к отладочным символам MinGW компилятора GCC <code>g++</code>:</li>
</ol>
<ul>
<li><code>mgwhelp32.dll</code> или mgwhe32.dll - для 32-разрядных программ (либо <code>mgwhelp.dll</code>, 32-разрядная версия),</li>
<li><code>mgwhelp64.dll</code> или mgwhe64.dll - для 64-разрядных программ (либо <code>mgwhelp.dll</code>, 64-разрядная версия).</li>
</ul>
<p>Суффиксы <code>32</code> и <code>64</code> помогают отличить 32-разрядную и 64-разрядную версии DLL-файлов библиотек. Например, <code>dbghelp32.dll</code> -- это просто переименованная 32-разрядная версия файла <code>dbghelp.dll</code>.</p>
<p><b>Cамораспаковывающийся архив с этими библиотеками можно скачать <a href="http://storage.ded32.net.ru/Lib/TX/TXLib-SupportDLLs.rar.exe">здесь.</a></b></p>
<p>Для наиболее полной диагностики ошибок полностью отключайте оптимизацию при компиляции. Например, для компилятора GCC <code>g++</code> -- с помощью ключа командной строки <code>-O0</code>. Разные среды программирования позволяют задать эти ключи по-разному, например, в CodeBlocks через Главное меню -- Settings -- Compiler -- (Global Compiler Settings) -- (Compiler Settings) -- Other Options.</p>
<dl class="note"><dt><b>Заметки:</b></dt><dd>Кодовая страница в редакторе среды разработки должна быть установлена как Windows CP1251, проверьте это. В разных средах разработки она устанавливается по-разному, например, в CodeBlocks через Главное меню -- Settings -- Editor -- (General Settings) -- Other Settings -- Encoding. Иначе русские буквы в сообщениях TXLib будут отображаться неправильно.</dd></dl>
<dl class="warning"><dt><b>Предупреждения:</b></dt><dd><b>Это альфа-версия. Для использования библиотеки требуется согласование с ее автором.</b> <br/>
<br/>
 <a href="http://www.ded32.ru/index/0-6">Правила использования материалов библиотеки и сайта</a> см. на <a href="http://txlib.ru">официальном сайте TXLib.</a></dd></dl>
<dl class="user"><dt><b>Баг-трекер на GitHub:</b></dt><dd><ul>
<li><a href="https://github.com/ded32/TXLib/issues/new"><b>Сообщить об ошибке</b></a> </li>
</ul>
</dd></dl>

<p>См. определение в файле <a class="el" href="a00058_source.htm">TXLib.h</a></p>
</div></div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="a00058.htm">TXLib.h</a>      </li>
<!-- --------------------------------------------------------------------------
  Doxygen_HTM.htm
  $Version: 00173a, Revision: 165 $
  $Copyright: (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru> $
  $Date: 2020-03-26 02:25:56 +0400 $
 -------------------------------------------------------------------------- -->

<table class="" width="100%"><tr valign="top">

  <td align="left">
    <small><a href="http://orphus.ru">Нашли ошибку? Выделите ее мышкой и нажмите Ctrl+ENTER. &copy;&#160;Orphus.ru.</a></small><br>
    <a href="http://orphus.ru" id="orphus" target="_blank"><img class = "footer" alt="Orphus" src="http://storage.ded32.net.ru/orphus.gif" border="0"></a>
    </td>

  <td align="right">
    Документация по TX Library. Дата: Thu Aug 13 2020 00:46:50. Создано&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.3
    <img src="http://storage.ded32.net.ru/stat/TXLib-Help.chm" width=1px height=1px border="0">
    </td>
  </tr></table>

</ul>
</div>

<script type="text/javascript">var gaJsHost = (("https:" == document.location.protocol)? "https://ssl." : "http://www."); document.write (unescape ("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); try { var pageTracker = _gat._getTracker ("UA-7927138-1"); pageTracker._trackPageview(); } catch (err) {}</script>
<script type="text/javascript" src="http://storage.ded32.net.ru/orphus.js"></script>

</body>
</html>
