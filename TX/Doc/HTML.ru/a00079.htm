<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>TX Library: [TXWave] Работа со звуком</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript">
$(document).ready(initResizable);
</script>
<link href="Doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!-- Создано системой Doxygen 1.7.3 -->
<div id="top">
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="TXLib.png"></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">TX Library&#160;<span id="projectnumber">Help &ndash; Version: 00173a, Revision: 165</span></div>
   <div id="projectbrief"><s>&nbsp;ALL&nbsp;</s> Windows graphics in a sandbox</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('a00079.htm','');
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#nested-classes">Классы</a> &#124;
<a href="#typedef-members">Определения типов</a> &#124;
<a href="#func-members">Функции</a> &#124;
<a href="#var-members">Переменные</a>  </div>
  <div class="headertitle">
<h1>[TXWave] Работа со звуком</h1>  </div>
</div>
<div class="contents">
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="nested-classes"></a>
Классы</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">union &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00018.htm">txWaveSample_t</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Тип данных, использующийся для внутреннего представления звуков согласно формату <a class="el" href="a00079.htm#gad34a43dcef175ddac1373a052ae579ea">txWaveFormat</a>.  <a href="a00018.htm#_details">Подробнее...</a><br/></td></tr>
<tr><td colspan="2"><h2><a name="typedef-members"></a>
Определения типов</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef std::vector<br class="typebreak"/>
&lt; <a class="el" href="a00018.htm">txWaveSample_t</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00079.htm#ga8b47e6b9634139311cc6e9ccc42350fe">txWaveData_t</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Тип, использующийся для буферов данных.  <a href="#ga8b47e6b9634139311cc6e9ccc42350fe"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">typedef bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00079.htm#ga0f44cb31e6fab55ba409a510c7346793">MonitorProc_t</a> (HWAVEIN waveIn, <a class="el" href="a00079.htm#ga8b47e6b9634139311cc6e9ccc42350fe">txWaveData_t</a> &amp;data, void *userData)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Тип функции-монитора для функции <a class="el" href="a00079.htm#ga650c6862cf9d0d2e8ab6c8c43e59be18">txWaveIn()</a>.  <a href="#ga0f44cb31e6fab55ba409a510c7346793"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="func-members"></a>
Функции</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">HWAVEOUT&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00079.htm#ga5381d120d82c043349dc9775f18a5299">txWaveOut</a> (int timeMs=-INT_MAX, double freqL=0, double volL=50, double freqR=-1, double volR=-1, int loops=1, const <a class="el" href="a00079.htm#ga8b47e6b9634139311cc6e9ccc42350fe">txWaveData_t</a> &amp;data=<a class="el" href="a00079.htm#ga8b47e6b9634139311cc6e9ccc42350fe">txWaveData_t</a>())</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Проигрывает звук через звуковую карту.  <a href="#ga5381d120d82c043349dc9775f18a5299"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">HWAVEOUT&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00079.htm#gaa677fdf2c2b515ad6faafc740a4ccf7e">txWaveOut</a> (const <a class="el" href="a00079.htm#ga8b47e6b9634139311cc6e9ccc42350fe">txWaveData_t</a> &amp;data, int loops=1)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Проигрывает подготовленный или загруженный буфер через звуковую карту.  <a href="#gaa677fdf2c2b515ad6faafc740a4ccf7e"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00079.htm#ga034e9fc739e3a23cc7ff49fbe7ab8205">MonitorProc</a> (HWAVEIN waveIn, <a class="el" href="a00079.htm#ga8b47e6b9634139311cc6e9ccc42350fe">txWaveData_t</a> &amp;data, void *userData)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Функция-монитор, регулярно вызывающаяся при записи звука.  <a href="#ga034e9fc739e3a23cc7ff49fbe7ab8205"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00079.htm#ga8b47e6b9634139311cc6e9ccc42350fe">txWaveData_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00079.htm#ga650c6862cf9d0d2e8ab6c8c43e59be18">txWaveIn</a> (int timeMs, <a class="el" href="a00079.htm#ga0f44cb31e6fab55ba409a510c7346793">MonitorProc_t</a> *monitorProc=NULL, void *monitorData=NULL, unsigned frameTime=0)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Записывает звук со звуковой карты.  <a href="#ga650c6862cf9d0d2e8ab6c8c43e59be18"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">unsigned long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00079.htm#gab571deca09d5854eff03adb4a906e378">txWaveGetPosition</a> (void *wave)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает текущую позицию воспроизведения или записи.  <a href="#gab571deca09d5854eff03adb4a906e378"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"><a class="el" href="a00079.htm#ga8b47e6b9634139311cc6e9ccc42350fe">txWaveData_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00079.htm#ga74e32845b5d8f9a538b2c9c1d5c27e35">txWaveLoadWav</a> (const char filename[])</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Загружает звуковые данные из WAV-файла.  <a href="#ga74e32845b5d8f9a538b2c9c1d5c27e35"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00079.htm#gaf4acf7c838bf10514034eaebffe914bc">txWaveSaveWav</a> (const <a class="el" href="a00079.htm#ga8b47e6b9634139311cc6e9ccc42350fe">txWaveData_t</a> &amp;data, const char filename[])</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Сохраняет звуковые данные в WAV-файле.  <a href="#gaf4acf7c838bf10514034eaebffe914bc"></a><br/></td></tr>
<tr><td colspan="2"><h2><a name="var-members"></a>
Переменные</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00079.htm#ga7314dc16e153be14dc298cb9cac8fbc0">txWaveSampleRate</a> = 44.100</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Скорость аудиопотока для TXWave в семплах <b>на 1 миллисекунду.</b>  <a href="#ga7314dc16e153be14dc298cb9cac8fbc0"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const WAVEFORMATEX&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00079.htm#gad34a43dcef175ddac1373a052ae579ea">txWaveFormat</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Формат аудиоданных для TXWave.  <a href="#gad34a43dcef175ddac1373a052ae579ea"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">const double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00079.htm#ga5673b664b39beb2afdac5a68ea9dcf32">txWaveVolMax</a></td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Максимальная громкость в <a class="el" href="a00018.htm">txWaveSample_t</a>, согласно формату <a class="el" href="a00079.htm#gad34a43dcef175ddac1373a052ae579ea">txWaveFormat</a>.  <a href="#ga5673b664b39beb2afdac5a68ea9dcf32"></a><br/></td></tr>
</table>
<hr/><h2>Типы</h2>
<a class="anchor" id="ga8b47e6b9634139311cc6e9ccc42350fe"></a><!-- doxytag: member="TXWave.h::txWaveData_t" ref="ga8b47e6b9634139311cc6e9ccc42350fe" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef std::vector&lt;<a class="el" href="a00018.htm">txWaveSample_t</a>&gt; <a class="el" href="a00079.htm#ga8b47e6b9634139311cc6e9ccc42350fe">txWaveData_t</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Тип, использующийся для буферов данных. </p>
<p>Это <code>std::vector &lt;<a class="el" href="a00018.htm" title="Тип данных, использующийся для внутреннего представления звуков согласно формату txWaveFormat.">txWaveSample_t</a>&gt;</code>.</p>
<p><a class="el" href="a00018.htm">txWaveSample_t</a> эквивалентен массиву из двух элементов типа short, соответствующим левому и правому каналу.</p>
<p>Максимальная громкость в канале задается константой <a class="el" href="a00079.htm#ga5673b664b39beb2afdac5a68ea9dcf32">txWaveVolMax</a>.</p>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00079.htm#ga8b47e6b9634139311cc6e9ccc42350fe" title="Тип, использующийся для буферов данных.">txWaveData_t</a>, <a class="el" href="a00079.htm#ga7314dc16e153be14dc298cb9cac8fbc0" title="Скорость аудиопотока для TXWave в семплах на 1 миллисекунду.">txWaveSampleRate</a>, <a class="el" href="a00079.htm#ga5673b664b39beb2afdac5a68ea9dcf32" title="Максимальная громкость в txWaveSample_t, согласно формату txWaveFormat.">txWaveVolMax</a>, <a class="el" href="a00079.htm#gad34a43dcef175ddac1373a052ae579ea" title="Формат аудиоданных для TXWave.">txWaveFormat</a>, <a class="el" href="a00079.htm#ga74e32845b5d8f9a538b2c9c1d5c27e35" title="Загружает звуковые данные из WAV-файла.">txWaveLoadWav()</a>, <a class="el" href="a00079.htm#ga5381d120d82c043349dc9775f18a5299" title="Проигрывает звук через звуковую карту.">txWaveOut()</a>, <a class="el" href="a00079.htm#ga650c6862cf9d0d2e8ab6c8c43e59be18" title="Записывает звук со звуковой карты.">txWaveIn()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <span class="keywordtype">int</span> time = 2000;
          <a class="code" href="a00079.htm#ga8b47e6b9634139311cc6e9ccc42350fe" title="Тип, использующийся для буферов данных.">txWaveData_t</a> wav (<a class="code" href="a00080.htm#gacd66e8cacf954c3bc3bba81d09425a12" title="Округляет число до целого">ROUND</a> (time * <a class="code" href="a00079.htm#ga7314dc16e153be14dc298cb9cac8fbc0" title="Скорость аудиопотока для TXWave в семплах на 1 миллисекунду.">txWaveSampleRate</a>));

          printf (<span class="stringliteral">&quot;Generating the waveform ~880 Hz...\n&quot;</span>);

          <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> i = 0; i &lt; wav.size(); i++)
              wav[i][0] = wav[i][1] = (<span class="keywordtype">short</span>) (sin (i*0.125) * <a class="code" href="a00079.htm#ga5673b664b39beb2afdac5a68ea9dcf32" title="Максимальная громкость в txWaveSample_t, согласно формату txWaveFormat.">txWaveVolMax</a>);  <span class="comment">// * 2*M_PI/44100 * 880</span>

          printf (<span class="stringliteral">&quot;Playing %d sec...\n\n&quot;</span>, time/1000);

          <a class="code" href="a00079.htm#ga5381d120d82c043349dc9775f18a5299" title="Проигрывает звук через звуковую карту.">txWaveOut</a> (buf);  <span class="comment">// Проигрываем звук</span>
          <a class="code" href="a00079.htm#ga5381d120d82c043349dc9775f18a5299" title="Проигрывает звук через звуковую карту.">txWaveOut</a>();      <span class="comment">// Ожидаем конца проигрывания</span>
</pre></div> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00061_source.htm">TXWave.h</a> строка <a class="el" href="a00061_source.htm#l00147">147</a></p>

</div>
</div>
<a class="anchor" id="ga0f44cb31e6fab55ba409a510c7346793"></a><!-- doxytag: member="TXWave.h::MonitorProc_t" ref="ga0f44cb31e6fab55ba409a510c7346793" args="(HWAVEIN waveIn, txWaveData_t &amp;data, void *userData)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef bool <a class="el" href="a00079.htm#ga0f44cb31e6fab55ba409a510c7346793">MonitorProc_t</a>(HWAVEIN waveIn, <a class="el" href="a00079.htm#ga8b47e6b9634139311cc6e9ccc42350fe">txWaveData_t</a> &amp;data, void *userData)</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Тип функции-монитора для функции <a class="el" href="a00079.htm#ga650c6862cf9d0d2e8ab6c8c43e59be18">txWaveIn()</a>. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">waveIn</td><td>Дескриптор устройства записи </td></tr>
    <tr><td class="paramname">data</td><td>Ссылка на буфер, где находятся записанные данные </td></tr>
    <tr><td class="paramname">userData</td><td>Указатель на пользовательские данные <code>monitorData</code>, переданные из функции <a class="el" href="a00079.htm#ga650c6862cf9d0d2e8ab6c8c43e59be18" title="Записывает звук со звуковой карты.">txWaveIn()</a></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если надо продолжать запись, то <code>true</code>. Если надо закончить запись - <code>false</code>.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00079.htm#ga650c6862cf9d0d2e8ab6c8c43e59be18" title="Записывает звук со звуковой карты.">txWaveIn()</a>, <a class="el" href="a00079.htm#ga034e9fc739e3a23cc7ff49fbe7ab8205" title="Функция-монитор, регулярно вызывающаяся при записи звука.">MonitorProc()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd>См. <a class="el" href="a00079.htm#ga034e9fc739e3a23cc7ff49fbe7ab8205">MonitorProc()</a> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00061_source.htm">TXWave.h</a> строка <a class="el" href="a00061_source.htm#l00282">282</a></p>

</div>
</div>
<hr/><h2>Функции</h2>
<a class="anchor" id="ga5381d120d82c043349dc9775f18a5299"></a><!-- doxytag: member="TXWave.h::txWaveOut" ref="ga5381d120d82c043349dc9775f18a5299" args="(int timeMs=&#45;INT_MAX, double freqL=0, double volL=50, double freqR=&#45;1, double volR=&#45;1, int loops=1, const txWaveData_t &amp;data=txWaveData_t())" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">HWAVEOUT txWaveOut </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>timeMs</em> = <code>-INT_MAX</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>freqL</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>volL</em> = <code>50</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>freqR</em> = <code>-1</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>volR</em> = <code>-1</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>loops</em> = <code>1</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="a00079.htm#ga8b47e6b9634139311cc6e9ccc42350fe">txWaveData_t</a> &amp;&#160;</td>
          <td class="paramname"><em>data</em> = <code><a class="el" href="a00079.htm#ga8b47e6b9634139311cc6e9ccc42350fe">txWaveData_t</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Проигрывает звук через звуковую карту. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">timeMs</td><td>Время звучания в миллисекундах </td></tr>
    <tr><td class="paramname">freqL</td><td>Частота звука в левом канале в Герцах </td></tr>
    <tr><td class="paramname">volL</td><td>Громкость звука в левом канале в процентах от максимума </td></tr>
    <tr><td class="paramname">freqR</td><td>Частота звука в правом канале в Герцах </td></tr>
    <tr><td class="paramname">volR</td><td>Громкость звука в правом канале в процентах от максимума </td></tr>
    <tr><td class="paramname">loops</td><td>Сколько раз повторять звук </td></tr>
    <tr><td class="paramname">data</td><td>Подготовленные данные для воспроизведения (например, загруженные из WAV-файла)</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Дескриптор аудиоустройства воспроизведения</dd></dl>
<dl class="user"><dt><b>Замечание:</b></dt><dd>Если во время вызова еще воспроизводится предыдущий звук, то функция подождет его завершения, а затем запустит воспроизведение нового.</dd></dl>
<dl class="user"><dt><b>Параметр <code>time</code>:</b></dt><dd><ul>
<li>Если время звучания <code>time</code> положительно, то функция начинает воспроизведение и возвращается, а звук продолжает звучать в фоновом режиме.</li>
<li>Если отрицательно, то функция будет ожидать завершения воспроизведения звуков в течение <code>|time|</code> миллисекунд.</li>
<li>Вызов функции без параметров будет ожидать окончания воспроизведения всех звуков.</li>
<li>Если <code>time</code> равно нулю, то воспроизведение сразу прекращается.</li>
</ul>
</dd></dl>
<dl class="user"><dt><b>Гармонические параметры - частоты (<code>freqL</code>, <code>freqR</code>) и громкости (<code>volL</code>, <code>volR</code>) каналов:</b></dt><dd><ul>
<li>Если частота левого канала <code>freqL</code> не указана или равна 0, то будут учитываться только данные из буфера левого канала.</li>
<li>Если громкость левого канала <code>volL</code> не указана, то она полагается равной 50%.</li>
<li>Если частота правого канала <code>freqR</code> не указана, то она полагается равной частоте левого канала.</li>
<li>Если громкость правого канала <code>volR</code> не указана, то она полагается равной громкости левого канала.</li>
<li>Частоты можно сочетать с подготовленными данными буфера <code>data</code>.</li>
<li>Если гармонических данных нет как в левом канале (<code>freqL</code> == 0 или <code>volL</code> == 0), так и в правом (<code>freqR</code> == 0 или <code>volR</code> == 0), то фактическая длительность звучания определяется не параметром <code>time</code>, а размером буфера <code>data</code>.</li>
</ul>
</dd></dl>
<dl class="user"><dt><b>Подготовленные данные <code>data</code>:</b></dt><dd><ul>
<li>Данные в векторе <code>data</code> напрямую влияют на мембраны колонок или наушников.</li>
<li>На данные в этом векторе не влияют параметры громкости <code>volL</code> и <code>volR</code>.</li>
<li>Если вектор <code>data</code> не указан, то он не учитывается.</li>
<li>Подготовленные данные <code>data</code> можно сочетать с частотами <code>freqL</code> и <code>freqR</code>.</li>
<li>Вектор <code>data</code> должен быть размером не менее, чем <code>time * <a class="el" href="a00079.htm#ga7314dc16e153be14dc298cb9cac8fbc0">txWaveSampleRate</a>.</code></li>
<li>Если размера вектора не хватает для времени воспроизведения в течении времени <code>time</code>, то при исчерпании данных вектора они будут игнорироваться.</li>
</ul>
</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00079.htm#ga650c6862cf9d0d2e8ab6c8c43e59be18" title="Записывает звук со звуковой карты.">txWaveIn()</a>, <a class="el" href="a00079.htm#gab571deca09d5854eff03adb4a906e378" title="Возвращает текущую позицию воспроизведения или записи.">txWaveGetPosition()</a>, <a class="el" href="a00079.htm#ga74e32845b5d8f9a538b2c9c1d5c27e35" title="Загружает звуковые данные из WAV-файла.">txWaveLoadWav()</a>, <a class="el" href="a00079.htm#ga7314dc16e153be14dc298cb9cac8fbc0" title="Скорость аудиопотока для TXWave в семплах на 1 миллисекунду.">txWaveSampleRate</a>, <a class="el" href="a00079.htm#ga5673b664b39beb2afdac5a68ea9dcf32" title="Максимальная громкость в txWaveSample_t, согласно формату txWaveFormat.">txWaveVolMax</a>, <a class="el" href="a00079.htm#gad34a43dcef175ddac1373a052ae579ea" title="Формат аудиоданных для TXWave.">txWaveFormat</a>, <a class="el" href="a00079.htm#ga8b47e6b9634139311cc6e9ccc42350fe" title="Тип, использующийся для буферов данных.">txWaveData_t</a>, <a class="el" href="a00018.htm" title="Тип данных, использующийся для внутреннего представления звуков согласно формату txWaveFormat.">txWaveSample_t</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <span class="comment">// Звук 1 сек, 880 Гц, моно, 50% громкости</span>

          <a class="code" href="a00079.htm#ga5381d120d82c043349dc9775f18a5299" title="Проигрывает звук через звуковую карту.">txWaveOut</a> (1000, 880);  <span class="comment">// Запустить проигрывание, далее оно идет в фоновом режиме</span>

          <span class="comment">// Сирена 880 +/- 88 Гц, моно, 50% громкости</span>

          <span class="keywordflow">for</span> (<span class="keywordtype">double</span> t = -0.1; !_kbhit(); t += 0.1)
              <a class="code" href="a00079.htm#ga5381d120d82c043349dc9775f18a5299" title="Проигрывает звук через звуковую карту.">txWaveOut</a> (100, 880 + 88 * cos (t));

          <span class="comment">// Сирена 880 +/- 88 Гц, стерео</span>

          <span class="keywordflow">for</span> (<span class="keywordtype">double</span> t = -0.1; !_kbhit(); t += 0.1)
              <a class="code" href="a00079.htm#ga5381d120d82c043349dc9775f18a5299" title="Проигрывает звук через звуковую карту.">txWaveOut</a> (100, 880 + 88 * cos (t), 100, 880 + 88 * sin (t), 100);
</pre></div> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00061_source.htm">TXWave.h</a> строка <a class="el" href="a00061_source.htm#l00559">559</a></p>

</div>
</div>
<a class="anchor" id="gaa677fdf2c2b515ad6faafc740a4ccf7e"></a><!-- doxytag: member="TXWave.h::txWaveOut" ref="gaa677fdf2c2b515ad6faafc740a4ccf7e" args="(const txWaveData_t &amp;data, int loops=1)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">HWAVEOUT txWaveOut </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00079.htm#ga8b47e6b9634139311cc6e9ccc42350fe">txWaveData_t</a> &amp;&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>loops</em> = <code>1</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Проигрывает подготовленный или загруженный буфер через звуковую карту. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">data</td><td>Подготовленные данные для воспроизведения (например, загруженные из WAV-файла) </td></tr>
    <tr><td class="paramname">loops</td><td>Сколько раз повторять звук</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Дескриптор аудиоустройства воспроизведения</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00079.htm#ga650c6862cf9d0d2e8ab6c8c43e59be18" title="Записывает звук со звуковой карты.">txWaveIn()</a>, <a class="el" href="a00079.htm#gab571deca09d5854eff03adb4a906e378" title="Возвращает текущую позицию воспроизведения или записи.">txWaveGetPosition()</a>, <a class="el" href="a00079.htm#ga74e32845b5d8f9a538b2c9c1d5c27e35" title="Загружает звуковые данные из WAV-файла.">txWaveLoadWav()</a>, <a class="el" href="a00079.htm#ga7314dc16e153be14dc298cb9cac8fbc0" title="Скорость аудиопотока для TXWave в семплах на 1 миллисекунду.">txWaveSampleRate</a>, <a class="el" href="a00079.htm#ga5673b664b39beb2afdac5a68ea9dcf32" title="Максимальная громкость в txWaveSample_t, согласно формату txWaveFormat.">txWaveVolMax</a>, <a class="el" href="a00079.htm#gad34a43dcef175ddac1373a052ae579ea" title="Формат аудиоданных для TXWave.">txWaveFormat</a>, <a class="el" href="a00079.htm#ga8b47e6b9634139311cc6e9ccc42350fe" title="Тип, использующийся для буферов данных.">txWaveData_t</a>, <a class="el" href="a00018.htm" title="Тип данных, использующийся для внутреннего представления звуков согласно формату txWaveFormat.">txWaveSample_t</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <span class="comment">// Музыка, загруженная из файла</span>

          <a class="code" href="a00079.htm#ga5381d120d82c043349dc9775f18a5299" title="Проигрывает звук через звуковую карту.">txWaveOut</a> (<a class="code" href="a00079.htm#ga74e32845b5d8f9a538b2c9c1d5c27e35" title="Загружает звуковые данные из WAV-файла.">txWaveLoadWav</a> (<span class="stringliteral">&quot;Purr.wav&quot;</span>));  <span class="comment">// Начинаем проигрываем звук, он воспроизводится асинхронно</span>
          ...
          <a class="code" href="a00081.htm#ga6c293f0b0f71efebdeeb0b56a97ba50c" title="Задерживает выполнение программы на определенное время.">txSleep</a>();                               <span class="comment">// Ожидаем конца проигрывания</span>

          <span class="comment">// Музыка, формируемая в буфере</span>
          <span class="comment">// See http://countercomplex.blogspot.ru/2011/10/algorithmic-symphonies-from-one-line-of.html</span>

          <span class="keywordtype">int</span> time = 90000;
          <a class="code" href="a00079.htm#ga8b47e6b9634139311cc6e9ccc42350fe" title="Тип, использующийся для буферов данных.">txWaveData_t</a> buf (<a class="code" href="a00080.htm#gacd66e8cacf954c3bc3bba81d09425a12" title="Округляет число до целого">ROUND</a> (time * <a class="code" href="a00079.htm#ga7314dc16e153be14dc298cb9cac8fbc0" title="Скорость аудиопотока для TXWave в семплах на 1 миллисекунду.">txWaveSampleRate</a>));
          <span class="keywordtype">unsigned</span> size = (unsigned) buf.size();

          <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> i = 0; i &lt; size; i++)
              {
              <span class="keywordtype">int</span> t   = i/5;
              <span class="keywordtype">int</span> val = (((t &gt;&gt; 7) | t | (t &gt;&gt; 6)) * 10 + 4 * ((t &amp; (t &gt;&gt; 13)) | (t &gt;&gt; 6))) &amp; 0xFF;

              buf[i][0] = buf[i][1] = (short) ((val/127.0 - 1) / (1 + pow (15, 17.0*i/size - 15)) * <a class="code" href="a00079.htm#ga5673b664b39beb2afdac5a68ea9dcf32" title="Максимальная громкость в txWaveSample_t, согласно формату txWaveFormat.">txWaveVolMax</a>);
              }

          HWAVEOUT waveOut = <a class="code" href="a00079.htm#ga5381d120d82c043349dc9775f18a5299" title="Проигрывает звук через звуковую карту.">txWaveOut</a> (buf); assert (waveOut);  <span class="comment">// Запускаем звук</span>

          <span class="keywordflow">while</span> (<a class="code" href="a00079.htm#gab571deca09d5854eff03adb4a906e378" title="Возвращает текущую позицию воспроизведения или записи.">txWaveGetPosition</a> (waveOut) &lt; size)  <span class="comment">// Проигран ли звук до конца?</span>
              {
              <span class="keywordflow">if</span> (_kbhit())) <a class="code" href="a00079.htm#ga5381d120d82c043349dc9775f18a5299" title="Проигрывает звук через звуковую карту.">txWaveOut</a> (0);           <span class="comment">// Закончить звук, если нажали клавишу</span>
              Sleep (100);
              }
</pre></div> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00061_source.htm">TXWave.h</a> строка <a class="el" href="a00061_source.htm#l00727">727</a></p>

</div>
</div>
<a class="anchor" id="ga034e9fc739e3a23cc7ff49fbe7ab8205"></a><!-- doxytag: member="TXWave.h::MonitorProc" ref="ga034e9fc739e3a23cc7ff49fbe7ab8205" args="(HWAVEIN waveIn, txWaveData_t &amp;data, void *userData)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool MonitorProc </td>
          <td>(</td>
          <td class="paramtype">HWAVEIN&#160;</td>
          <td class="paramname"><em>waveIn</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00079.htm#ga8b47e6b9634139311cc6e9ccc42350fe">txWaveData_t</a> &amp;&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>userData</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Функция-монитор, регулярно вызывающаяся при записи звука. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">waveIn</td><td>Дескриптор устройства записи </td></tr>
    <tr><td class="paramname">data</td><td>Ссылка на буфер, где находятся записанные данные </td></tr>
    <tr><td class="paramname">userData</td><td>Указатель на пользовательские данные <code>monitorData</code>, переданные из функции <a class="el" href="a00079.htm#ga650c6862cf9d0d2e8ab6c8c43e59be18" title="Записывает звук со звуковой карты.">txWaveIn()</a></td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Если надо продолжать запись, то <code>true</code>. Если надо закончить запись - <code>false</code>.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00079.htm#ga650c6862cf9d0d2e8ab6c8c43e59be18" title="Записывает звук со звуковой карты.">txWaveIn()</a>, <a class="el" href="a00079.htm#gab571deca09d5854eff03adb4a906e378" title="Возвращает текущую позицию воспроизведения или записи.">txWaveGetPosition()</a>, <a class="el" href="a00079.htm#ga5673b664b39beb2afdac5a68ea9dcf32" title="Максимальная громкость в txWaveSample_t, согласно формату txWaveFormat.">txWaveVolMax</a>, <a class="el" href="a00079.htm#gad34a43dcef175ddac1373a052ae579ea" title="Формат аудиоданных для TXWave.">txWaveFormat</a>, <a class="el" href="a00079.htm#ga8b47e6b9634139311cc6e9ccc42350fe" title="Тип, использующийся для буферов данных.">txWaveData_t</a>, <a class="el" href="a00018.htm" title="Тип данных, использующийся для внутреннего представления звуков согласно формату txWaveFormat.">txWaveSample_t</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <span class="keywordtype">bool</span> <a class="code" href="a00079.htm#ga034e9fc739e3a23cc7ff49fbe7ab8205" title="Функция-монитор, регулярно вызывающаяся при записи звука.">MonitorProc</a> (HWAVEIN, <a class="code" href="a00079.htm#ga8b47e6b9634139311cc6e9ccc42350fe" title="Тип, использующийся для буферов данных.">txWaveData_t</a>&amp; data, <span class="keywordtype">void</span>*)
              {
              <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span> line1[] = <span class="stringliteral">&quot;-------------------------&quot;</span>;
              <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span> line2[] = <span class="stringliteral">&quot;|||||||||||||||||||||||||&quot;</span>;
              <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">int</span>  lineSz  = <span class="keyword">sizeof</span> (line1) - 1;

              <span class="keywordtype">unsigned</span> pos  = (unsigned) data.size();
              <span class="keywordtype">unsigned</span> size = (unsigned) data.capacity();
              <span class="keywordtype">unsigned</span> done = (unsigned) (100 * pos/size);

              <span class="keywordtype">double</span> avr = 0;
              <span class="keywordflow">if</span> (pos &gt;= 100) <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> i = pos - 100; i &lt; pos; i++) avr += (abs (data[i][0]) + abs (data[i][1])) / <a class="code" href="a00079.htm#ga5673b664b39beb2afdac5a68ea9dcf32" title="Максимальная громкость в txWaveSample_t, согласно формату txWaveFormat.">txWaveVolMax</a>;
              <span class="keywordtype">int</span> vol = (avr &lt;= 100)? (<span class="keywordtype">int</span>) avr : 100;

              printf (<span class="stringliteral">&quot;Done %6u/%6u samples   [%.*s|%.*s] %3u%%  [%.*s%.*s%s %3d%%  \r&quot;</span>,
                       pos, size,
                       (<span class="keywordtype">int</span>) (lineSz*done/100), line1, (<span class="keywordtype">int</span>) (lineSz - lineSz*done/100), line1,                         done,
                       (<span class="keywordtype">int</span>) (lineSz*vol /100), line2, (<span class="keywordtype">int</span>) (lineSz - lineSz*vol /100), line1, (vol &lt; 100? <span class="stringliteral">&quot;]&quot;</span> : <span class="stringliteral">&quot;X&quot;</span>), vol);

              <span class="keywordflow">return</span> (_kbhit()? (_getch(), <span class="keyword">false</span>) : <span class="keyword">true</span>);
              }
</pre></div> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00062_source.htm">TXWaveExample.cpp</a> строка <a class="el" href="a00062_source.htm#l00239">239</a></p>

</div>
</div>
<a class="anchor" id="ga650c6862cf9d0d2e8ab6c8c43e59be18"></a><!-- doxytag: member="TXWave.h::txWaveIn" ref="ga650c6862cf9d0d2e8ab6c8c43e59be18" args="(int timeMs, MonitorProc_t *monitorProc=NULL, void *monitorData=NULL, unsigned frameTime=0)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00079.htm#ga8b47e6b9634139311cc6e9ccc42350fe">txWaveData_t</a> txWaveIn </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>timeMs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="a00079.htm#ga0f44cb31e6fab55ba409a510c7346793">MonitorProc_t</a> *&#160;</td>
          <td class="paramname"><em>monitorProc</em> = <code>NULL</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>monitorData</em> = <code>NULL</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>frameTime</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Записывает звук со звуковой карты. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">timeMs</td><td>Время записи в миллисекундах </td></tr>
    <tr><td class="paramname">monitorProc</td><td>Функция, которая вызывается после каждого записанного кадра длиной <code>frameTime</code> мсек </td></tr>
    <tr><td class="paramname">monitorData</td><td>Указатель на пользовательские данные, которые будут переданы функции <code>monitorProc</code> </td></tr>
    <tr><td class="paramname">frameTime</td><td>Интервал времени записи, через который будет вызываться функция <code>monitorProc</code>, мсек</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Количество записанных данных</dd></dl>
<dl class="user"><dt><b>Замечания:</b></dt><dd><ul>
<li>Если функция <a class="el" href="a00079.htm#ga034e9fc739e3a23cc7ff49fbe7ab8205">MonitorProc</a> не указана, то в процессе записи она не будет вызываться.</li>
<li>Если интервал времени <code>frameTime</code> не указан или равен 0, он устанавливается равным 100 миллисекунд.</li>
</ul>
</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd>monitorProc(), <a class="el" href="a00079.htm#ga5381d120d82c043349dc9775f18a5299" title="Проигрывает звук через звуковую карту.">txWaveOut()</a>, <a class="el" href="a00079.htm#gab571deca09d5854eff03adb4a906e378" title="Возвращает текущую позицию воспроизведения или записи.">txWaveGetPosition()</a>, <a class="el" href="a00079.htm#gaf4acf7c838bf10514034eaebffe914bc" title="Сохраняет звуковые данные в WAV-файле.">txWaveSaveWav()</a>, <a class="el" href="a00079.htm#ga7314dc16e153be14dc298cb9cac8fbc0" title="Скорость аудиопотока для TXWave в семплах на 1 миллисекунду.">txWaveSampleRate</a>, <a class="el" href="a00079.htm#ga5673b664b39beb2afdac5a68ea9dcf32" title="Максимальная громкость в txWaveSample_t, согласно формату txWaveFormat.">txWaveVolMax</a>, <a class="el" href="a00079.htm#gad34a43dcef175ddac1373a052ae579ea" title="Формат аудиоданных для TXWave.">txWaveFormat</a>, <a class="el" href="a00079.htm#ga8b47e6b9634139311cc6e9ccc42350fe" title="Тип, использующийся для буферов данных.">txWaveData_t</a>, <a class="el" href="a00018.htm" title="Тип данных, использующийся для внутреннего представления звуков согласно формату txWaveFormat.">txWaveSample_t</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00079.htm#ga8b47e6b9634139311cc6e9ccc42350fe" title="Тип, использующийся для буферов данных.">txWaveData_t</a> wav = <a class="code" href="a00079.htm#ga650c6862cf9d0d2e8ab6c8c43e59be18" title="Записывает звук со звуковой карты.">txWaveIn</a> (20000);  <span class="comment">// Записываем звук 20 секунд</span>

          <a class="code" href="a00079.htm#ga5381d120d82c043349dc9775f18a5299" title="Проигрывает звук через звуковую карту.">txWaveOut</a> (wav);  <span class="comment">// Проигрываем звук</span>
          <a class="code" href="a00079.htm#ga5381d120d82c043349dc9775f18a5299" title="Проигрывает звук через звуковую карту.">txWaveOut</a>();      <span class="comment">// Ожидаем конца проигрывания</span>

          <span class="comment">// Пример с функцией-монитором см. в файле TXWaveExample.cpp.</span>
</pre></div> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gab571deca09d5854eff03adb4a906e378"></a><!-- doxytag: member="TXWave.h::txWaveGetPosition" ref="gab571deca09d5854eff03adb4a906e378" args="(void *wave)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned long txWaveGetPosition </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>wave</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Возвращает текущую позицию воспроизведения или записи. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">wave</td><td>Устройство воспроизведения или записи</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>Количество уже воспроизведенных или уже записанных элементов буферов</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00079.htm#ga5381d120d82c043349dc9775f18a5299" title="Проигрывает звук через звуковую карту.">txWaveOut()</a>, <a class="el" href="a00079.htm#ga650c6862cf9d0d2e8ab6c8c43e59be18" title="Записывает звук со звуковой карты.">txWaveIn()</a>, <a class="el" href="a00079.htm#ga7314dc16e153be14dc298cb9cac8fbc0" title="Скорость аудиопотока для TXWave в семплах на 1 миллисекунду.">txWaveSampleRate</a>, <a class="el" href="a00079.htm#gad34a43dcef175ddac1373a052ae579ea" title="Формат аудиоданных для TXWave.">txWaveFormat</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          HWAVEOUT waveOut = <a class="code" href="a00079.htm#ga5381d120d82c043349dc9775f18a5299" title="Проигрывает звук через звуковую карту.">txWaveOut</a> (time, 440); assert (waveOut);  <span class="comment">// Запускаем звук</span>

          <span class="keywordflow">while</span> (<a class="code" href="a00079.htm#gab571deca09d5854eff03adb4a906e378" title="Возвращает текущую позицию воспроизведения или записи.">txWaveGetPosition</a> (waveOut) &lt; size)  <span class="comment">// Проигран ли звук до конца?</span>
              {
              <span class="keywordflow">if</span> (_kbhit())) <a class="code" href="a00079.htm#ga5381d120d82c043349dc9775f18a5299" title="Проигрывает звук через звуковую карту.">txWaveOut</a> (0);           <span class="comment">// Закончить звук, если нажали клавишу</span>

              printf (<span class="stringliteral">&quot;.&quot;</span>);
              Sleep (100);
              }
</pre></div> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00061_source.htm">TXWave.h</a> строка <a class="el" href="a00061_source.htm#l00832">832</a></p>

</div>
</div>
<a class="anchor" id="ga74e32845b5d8f9a538b2c9c1d5c27e35"></a><!-- doxytag: member="TXWave.h::txWaveLoadWav" ref="ga74e32845b5d8f9a538b2c9c1d5c27e35" args="(const char filename[])" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="a00079.htm#ga8b47e6b9634139311cc6e9ccc42350fe">txWaveData_t</a> txWaveLoadWav </td>
          <td>(</td>
          <td class="paramtype">const char&#160;</td>
          <td class="paramname"><em>filename</em>[]</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Загружает звуковые данные из WAV-файла. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">filename</td><td>Имя файла в формате WAV</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd><a class="el" href="a00079.htm#ga8b47e6b9634139311cc6e9ccc42350fe">txWaveData_t</a>, т.е. <code>std::vector &lt;<a class="el" href="a00079.htm#ga8b47e6b9634139311cc6e9ccc42350fe">txWaveData_t</a>&gt;,</code> с загруженными данными</dd></dl>
<dl class="note"><dt><b>Заметки:</b></dt><dd>Файл должен быть в формате WAV, Microsoft PCM, Стерео (2 канала), скорость семплирования 44.100 кГц (<a class="el" href="a00079.htm#ga7314dc16e153be14dc298cb9cac8fbc0">txWaveSampleRate</a>), 16 бит на канал. Если файл другого формата, его надо преобразовать в нужный формат.</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00079.htm#ga5381d120d82c043349dc9775f18a5299" title="Проигрывает звук через звуковую карту.">txWaveOut()</a>, <a class="el" href="a00079.htm#ga650c6862cf9d0d2e8ab6c8c43e59be18" title="Записывает звук со звуковой карты.">txWaveIn()</a>, <a class="el" href="a00079.htm#gaf4acf7c838bf10514034eaebffe914bc" title="Сохраняет звуковые данные в WAV-файле.">txWaveSaveWav()</a>, <a class="el" href="a00079.htm#ga7314dc16e153be14dc298cb9cac8fbc0" title="Скорость аудиопотока для TXWave в семплах на 1 миллисекунду.">txWaveSampleRate</a>, <a class="el" href="a00079.htm#ga5673b664b39beb2afdac5a68ea9dcf32" title="Максимальная громкость в txWaveSample_t, согласно формату txWaveFormat.">txWaveVolMax</a>, <a class="el" href="a00079.htm#gad34a43dcef175ddac1373a052ae579ea" title="Формат аудиоданных для TXWave.">txWaveFormat</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00079.htm#ga8b47e6b9634139311cc6e9ccc42350fe" title="Тип, использующийся для буферов данных.">txWaveData_t</a> purr = <a class="code" href="a00079.htm#ga74e32845b5d8f9a538b2c9c1d5c27e35" title="Загружает звуковые данные из WAV-файла.">txWaveLoadWav</a> (<span class="stringliteral">&quot;Purr.wav&quot;</span>);

          <a class="code" href="a00079.htm#ga5381d120d82c043349dc9775f18a5299" title="Проигрывает звук через звуковую карту.">txWaveOut</a> (purr);  <span class="comment">// Проигрываем звук</span>
          <a class="code" href="a00079.htm#ga5381d120d82c043349dc9775f18a5299" title="Проигрывает звук через звуковую карту.">txWaveOut</a>();       <span class="comment">// Ожидаем конца проигрывания</span>
</pre></div> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00061_source.htm">TXWave.h</a> строка <a class="el" href="a00061_source.htm#l00881">881</a></p>

</div>
</div>
<a class="anchor" id="gaf4acf7c838bf10514034eaebffe914bc"></a><!-- doxytag: member="TXWave.h::txWaveSaveWav" ref="gaf4acf7c838bf10514034eaebffe914bc" args="(const txWaveData_t &amp;data, const char filename[])" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txWaveSaveWav </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="a00079.htm#ga8b47e6b9634139311cc6e9ccc42350fe">txWaveData_t</a> &amp;&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char&#160;</td>
          <td class="paramname"><em>filename</em>[]&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Сохраняет звуковые данные в WAV-файле. </p>
<dl><dt><b>Аргументы:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">data</td><td>Данные для записи (например, записанные с помощью <a class="el" href="a00079.htm#ga650c6862cf9d0d2e8ab6c8c43e59be18">txWaveIn()</a>, или вычисленные по формуле) </td></tr>
    <tr><td class="paramname">filename</td><td>Имя файла с расширением WAV</td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Возвращает:</b></dt><dd>true, если файл открылся на запись, иначе false</dd></dl>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00079.htm#ga650c6862cf9d0d2e8ab6c8c43e59be18" title="Записывает звук со звуковой карты.">txWaveIn()</a>, <a class="el" href="a00079.htm#ga7314dc16e153be14dc298cb9cac8fbc0" title="Скорость аудиопотока для TXWave в семплах на 1 миллисекунду.">txWaveSampleRate</a>, <a class="el" href="a00079.htm#ga5673b664b39beb2afdac5a68ea9dcf32" title="Максимальная громкость в txWaveSample_t, согласно формату txWaveFormat.">txWaveVolMax</a>, <a class="el" href="a00079.htm#gad34a43dcef175ddac1373a052ae579ea" title="Формат аудиоданных для TXWave.">txWaveFormat</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><pre class="fragment">          <a class="code" href="a00079.htm#ga8b47e6b9634139311cc6e9ccc42350fe" title="Тип, использующийся для буферов данных.">txWaveData_t</a> wav = <a class="code" href="a00079.htm#ga650c6862cf9d0d2e8ab6c8c43e59be18" title="Записывает звук со звуковой карты.">txWaveIn</a> (20000);   <span class="comment">// Записываем звук</span>
          <a class="code" href="a00079.htm#gaf4acf7c838bf10514034eaebffe914bc" title="Сохраняет звуковые данные в WAV-файле.">txWaveSaveWav</a> (wav, <span class="stringliteral">&quot;Recording.wav&quot;</span>);  <span class="comment">// Сохраняем звук в файл</span>
</pre></div> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00061_source.htm">TXWave.h</a> строка <a class="el" href="a00061_source.htm#l00953">953</a></p>

</div>
</div>
<hr/><h2>Переменные</h2>
<a class="anchor" id="ga7314dc16e153be14dc298cb9cac8fbc0"></a><!-- doxytag: member="TXWave.h::txWaveSampleRate" ref="ga7314dc16e153be14dc298cb9cac8fbc0" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const double <a class="el" href="a00079.htm#ga7314dc16e153be14dc298cb9cac8fbc0">txWaveSampleRate</a> = 44.100</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Скорость аудиопотока для TXWave в семплах <b>на 1 миллисекунду.</b> </p>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00079.htm#gad34a43dcef175ddac1373a052ae579ea" title="Формат аудиоданных для TXWave.">txWaveFormat</a>, <a class="el" href="a00079.htm#ga5381d120d82c043349dc9775f18a5299" title="Проигрывает звук через звуковую карту.">txWaveOut()</a>, <a class="el" href="a00079.htm#ga650c6862cf9d0d2e8ab6c8c43e59be18" title="Записывает звук со звуковой карты.">txWaveIn()</a>, <a class="el" href="a00079.htm#gab571deca09d5854eff03adb4a906e378" title="Возвращает текущую позицию воспроизведения или записи.">txWaveGetPosition()</a>, <a class="el" href="a00079.htm#ga74e32845b5d8f9a538b2c9c1d5c27e35" title="Загружает звуковые данные из WAV-файла.">txWaveLoadWav()</a>, <a class="el" href="a00079.htm#gad34a43dcef175ddac1373a052ae579ea" title="Формат аудиоданных для TXWave.">txWaveFormat</a>, <a class="el" href="a00018.htm" title="Тип данных, использующийся для внутреннего представления звуков согласно формату txWaveFormat.">txWaveSample_t</a> </dd></dl>

<p>См. определение в файле <a class="el" href="a00061_source.htm">TXWave.h</a> строка <a class="el" href="a00061_source.htm#l00060">60</a></p>

</div>
</div>
<a class="anchor" id="gad34a43dcef175ddac1373a052ae579ea"></a><!-- doxytag: member="TXWave.h::txWaveFormat" ref="gad34a43dcef175ddac1373a052ae579ea" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const WAVEFORMATEX <a class="el" href="a00079.htm#gad34a43dcef175ddac1373a052ae579ea">txWaveFormat</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Формат аудиоданных для TXWave. </p>
<p>Амплитудная модуляция без сжатия, 2 канала, 16 бит на канал, 44.100 кГц (<a class="el" href="a00079.htm#ga7314dc16e153be14dc298cb9cac8fbc0">txWaveSampleRate</a>).</p>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00079.htm#ga5381d120d82c043349dc9775f18a5299" title="Проигрывает звук через звуковую карту.">txWaveOut()</a>, <a class="el" href="a00079.htm#ga650c6862cf9d0d2e8ab6c8c43e59be18" title="Записывает звук со звуковой карты.">txWaveIn()</a>, <a class="el" href="a00079.htm#gab571deca09d5854eff03adb4a906e378" title="Возвращает текущую позицию воспроизведения или записи.">txWaveGetPosition()</a>, <a class="el" href="a00079.htm#ga74e32845b5d8f9a538b2c9c1d5c27e35" title="Загружает звуковые данные из WAV-файла.">txWaveLoadWav()</a>, <a class="el" href="a00079.htm#ga7314dc16e153be14dc298cb9cac8fbc0" title="Скорость аудиопотока для TXWave в семплах на 1 миллисекунду.">txWaveSampleRate</a>, <a class="el" href="a00018.htm" title="Тип данных, использующийся для внутреннего представления звуков согласно формату txWaveFormat.">txWaveSample_t</a>, <a class="el" href="a00079.htm#ga8b47e6b9634139311cc6e9ccc42350fe" title="Тип, использующийся для буферов данных.">txWaveData_t</a> </dd></dl>

<p>См. определение в файле <a class="el" href="a00061_source.htm">TXWave.h</a> строка <a class="el" href="a00061_source.htm#l00073">73</a></p>

</div>
</div>
<a class="anchor" id="ga5673b664b39beb2afdac5a68ea9dcf32"></a><!-- doxytag: member="TXWave.h::txWaveVolMax" ref="ga5673b664b39beb2afdac5a68ea9dcf32" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const double <a class="el" href="a00079.htm#ga5673b664b39beb2afdac5a68ea9dcf32">txWaveVolMax</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Максимальная громкость в <a class="el" href="a00018.htm">txWaveSample_t</a>, согласно формату <a class="el" href="a00079.htm#gad34a43dcef175ddac1373a052ae579ea">txWaveFormat</a>. </p>
<dl class="see"><dt><b>См. также:</b></dt><dd><a class="el" href="a00079.htm#ga7314dc16e153be14dc298cb9cac8fbc0" title="Скорость аудиопотока для TXWave в семплах на 1 миллисекунду.">txWaveSampleRate</a>, <a class="el" href="a00079.htm#gad34a43dcef175ddac1373a052ae579ea" title="Формат аудиоданных для TXWave.">txWaveFormat</a>, <a class="el" href="a00079.htm#ga8b47e6b9634139311cc6e9ccc42350fe" title="Тип, использующийся для буферов данных.">txWaveData_t</a>, <a class="el" href="a00079.htm#ga74e32845b5d8f9a538b2c9c1d5c27e35" title="Загружает звуковые данные из WAV-файла.">txWaveLoadWav()</a>, <a class="el" href="a00079.htm#ga5381d120d82c043349dc9775f18a5299" title="Проигрывает звук через звуковую карту.">txWaveOut()</a>, <a class="el" href="a00079.htm#ga650c6862cf9d0d2e8ab6c8c43e59be18" title="Записывает звук со звуковой карты.">txWaveIn()</a> </dd></dl>

<p>См. определение в файле <a class="el" href="a00061_source.htm">TXWave.h</a> строка <a class="el" href="a00061_source.htm#l00084">84</a></p>

</div>
</div>
</div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
<!-- --------------------------------------------------------------------------
  Doxygen_HTM.htm
  $Version: 00173a, Revision: 165 $
  $Copyright: (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru> $
  $Date: 2020-03-26 02:25:56 +0400 $
 -------------------------------------------------------------------------- -->

<table class="" width="100%"><tr valign="top">

  <td align="left">
    <small><a href="http://orphus.ru">Нашли ошибку? Выделите ее мышкой и нажмите Ctrl+ENTER. &copy;&#160;Orphus.ru.</a></small><br>
    <a href="http://orphus.ru" id="orphus" target="_blank"><img class = "footer" alt="Orphus" src="http://storage.ded32.net.ru/orphus.gif" border="0"></a>
    </td>

  <td align="right">
    Документация по TX Library. Дата: Thu Aug 13 2020 00:46:50. Создано&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.3
    <img src="http://storage.ded32.net.ru/stat/TXLib-Help.chm" width=1px height=1px border="0">
    </td>
  </tr></table>

</ul>
</div>

<script type="text/javascript">var gaJsHost = (("https:" == document.location.protocol)? "https://ssl." : "http://www."); document.write (unescape ("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); try { var pageTracker = _gat._getTracker ("UA-7927138-1"); pageTracker._trackPageview(); } catch (err) {}</script>
<script type="text/javascript" src="http://storage.ded32.net.ru/orphus.js"></script>

</body>
</html>
