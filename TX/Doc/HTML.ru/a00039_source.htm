<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>TX Library: Исходный файл MathBeauty.cpp</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript">
$(document).ready(initResizable);
</script>
<link href="Doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!-- Создано системой Doxygen 1.7.3 -->
<div id="top">
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="TXLib.png"></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">TX Library&#160;<span id="projectnumber">Help &ndash; Version: 00173a, Revision: 165</span></div>
   <div id="projectbrief"><s>&nbsp;ALL&nbsp;</s> Windows graphics in a sandbox</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('a00039.htm','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<h1>MathBeauty.cpp</h1>  </div>
</div>
<div class="contents">
<a href="a00039.htm">См. документацию.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">//{===========================================================================</span>
<a name="l00010"></a>00010 <span class="comment"></span><span class="comment">//          (C) Филипп Куликов, 7 класс, 2006</span>
<a name="l00011"></a>00011 <span class="comment">//}===========================================================================</span>
<a name="l00012"></a>00012 
<a name="l00013"></a>00013 <span class="preprocessor">#include &quot;<a class="code" href="a00037.htm" title="Построитель графиков, вспомогательная библиотека">FilippLib.h</a>&quot;</span>
<a name="l00014"></a>00014 
<a name="l00015"></a>00015 <span class="comment">//----------------------------------------------------------------------------------------------------------------------</span>
<a name="l00016"></a>00016 
<a name="l00017"></a>00017 <span class="keyword">struct </span>Button
<a name="l00018"></a>00018     {
<a name="l00019"></a>00019     <span class="keywordtype">int</span> x, y;
<a name="l00020"></a>00020     <span class="keywordtype">int</span> lengh, hight;
<a name="l00021"></a>00021 
<a name="l00022"></a>00022     COLORREF setColor, fillColor;
<a name="l00023"></a>00023 
<a name="l00024"></a>00024     <span class="keyword">const</span> <span class="keywordtype">char</span>* text;
<a name="l00025"></a>00025     COLORREF setTextColor;
<a name="l00026"></a>00026 
<a name="l00027"></a>00027     <span class="keywordtype">int</span> number;
<a name="l00028"></a>00028     <span class="keywordtype">int</span> hotKey;
<a name="l00029"></a>00029     double (*grafic) (<span class="keywordtype">double</span> x, <span class="keyword">const</span> <span class="keywordtype">double</span> kF[]);
<a name="l00030"></a>00030     <span class="keywordtype">char</span> yFormula [125];
<a name="l00031"></a>00031 
<a name="l00032"></a>00032     <span class="keywordtype">void</span> drawButton();
<a name="l00033"></a>00033     };
<a name="l00034"></a>00034 
<a name="l00035"></a>00035 <span class="comment">//----------------------------------------------------------------------------------------------------------------------</span>
<a name="l00036"></a>00036 
<a name="l00037"></a>00037 <span class="keywordtype">void</span> buildGrafics      (HDC desk, HDC book, HDC voprosImage);
<a name="l00038"></a>00038 <span class="keywordtype">int</span>  controlGrafics    (<span class="keywordtype">double</span> kF[]);
<a name="l00039"></a>00039 <span class="keywordtype">void</span> deskKF            (<span class="keyword">const</span> <span class="keywordtype">double</span> kF[], <span class="keywordtype">int</span> n);
<a name="l00040"></a>00040 <span class="keywordtype">void</span> DrawButtons       (Button <span class="keywordtype">object</span>[], <span class="keywordtype">int</span> size);
<a name="l00041"></a>00041 <span class="keywordtype">int</span>  CheckButtons      (Button <span class="keywordtype">object</span>[], <span class="keywordtype">int</span> size);
<a name="l00042"></a>00042 <span class="keywordtype">int</span>  CheckMouseButtons (Button <span class="keywordtype">object</span>[], <span class="keywordtype">int</span> size);
<a name="l00043"></a>00043 
<a name="l00044"></a>00044 <span class="keywordtype">int</span> fIn (<span class="keywordtype">double</span> xMin, <span class="keywordtype">double</span> x, <span class="keywordtype">double</span> xMax, <span class="keywordtype">double</span> yMin, <span class="keywordtype">double</span> y, <span class="keywordtype">double</span> yMax);
<a name="l00045"></a>00045 <span class="keywordtype">void</span> formula (<span class="keywordtype">double</span> kF[], <span class="keywordtype">char</span> yFormula[]);
<a name="l00046"></a>00046 <span class="keywordtype">void</span> Lines (<span class="keywordtype">bool</span> grid);
<a name="l00047"></a>00047 <span class="keywordtype">void</span> signingOfTheAxes();
<a name="l00048"></a>00048 <span class="keywordtype">void</span> InformationDesk();
<a name="l00049"></a>00049 <span class="keywordtype">void</span> ShadowRect (<span class="keywordtype">int</span> x1, <span class="keywordtype">int</span> y1, <span class="keywordtype">int</span> x2, <span class="keywordtype">int</span> y2, COLORREF fillColor, COLORREF countourColor);
<a name="l00050"></a>00050 <span class="keywordtype">void</span> ShadowText (<span class="keywordtype">int</span> x1, <span class="keywordtype">int</span> y1, <span class="keywordtype">int</span> x2, <span class="keywordtype">int</span> y2, COLORREF color, <span class="keyword">const</span> <span class="keywordtype">char</span> text[]);
<a name="l00051"></a>00051 
<a name="l00052"></a>00052 <span class="comment">//----------------------------------------------------------------------------------------------------------------------</span>
<a name="l00053"></a>00053 
<a name="l00054"></a>00054 <span class="keywordtype">int</span> main()
<a name="l00055"></a>00055     {
<a name="l00056"></a>00056     HDC desk        = <a class="code" href="a00081.htm#gaec4970aac125bcf0d8a0b10a118222f7" title="Загружает из файла изображение в формате BMP. Делает это довольно медленно.">txLoadImage</a> (<span class="stringliteral">&quot;Desk.bmp&quot;</span>);
<a name="l00057"></a>00057     HDC book        = <a class="code" href="a00081.htm#gaec4970aac125bcf0d8a0b10a118222f7" title="Загружает из файла изображение в формате BMP. Делает это довольно медленно.">txLoadImage</a> (<span class="stringliteral">&quot;Book.bmp&quot;</span>);
<a name="l00058"></a>00058     HDC voprosImage = <a class="code" href="a00081.htm#gaec4970aac125bcf0d8a0b10a118222f7" title="Загружает из файла изображение в формате BMP. Делает это довольно медленно.">txLoadImage</a> (<span class="stringliteral">&quot;Vopros.bmp&quot;</span>);
<a name="l00059"></a>00059 
<a name="l00060"></a>00060     <a class="code" href="a00081.htm#gafce21ce98474d5559f316b3d47cdbfab" title="Создание окна рисования">txCreateWindow</a> (1300, 700);
<a name="l00061"></a>00061     <a class="code" href="a00081.htm#gaa148d2040d20ed74cf46ab186c35f9ed" title="Запрещает или разрешает рисование мигающего курсора в окне.">txTextCursor</a> (<span class="keyword">false</span>);
<a name="l00062"></a>00062     txDisableAutoPause();
<a name="l00063"></a>00063 
<a name="l00064"></a>00064     buildGrafics (desk, book, voprosImage);
<a name="l00065"></a>00065 
<a name="l00066"></a>00066     <a class="code" href="a00081.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC</a> (desk);
<a name="l00067"></a>00067     <a class="code" href="a00081.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC</a> (book);
<a name="l00068"></a>00068     <a class="code" href="a00081.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC</a> (voprosImage);
<a name="l00069"></a>00069 
<a name="l00070"></a>00070     <span class="keywordflow">while</span> (_kbhit()) _getch();
<a name="l00071"></a>00071 
<a name="l00072"></a>00072     <span class="keywordflow">return</span> 0;
<a name="l00073"></a>00073     }
<a name="l00074"></a>00074 
<a name="l00075"></a>00075 <span class="comment">//----------------------------------------------------------------------------------------------------------------------</span>
<a name="l00076"></a>00076 
<a name="l00077"></a>00077 <span class="keywordtype">void</span> buildGrafics (HDC desk, HDC book, HDC voprosImage)
<a name="l00078"></a>00078     {
<a name="l00079"></a>00079     <span class="comment">//                   x    y    lengh hight setColor       fillColor    name text           setTextColor  number  function     formula text</span>
<a name="l00080"></a>00080     Button <span class="keywordtype">object</span>[] = { {975, 110, 300,  60,   CountourColor, ButtonColor, <span class="stringliteral">&quot;Линейная функция&quot;</span>, TextColor,    0, <span class="charliteral">&#39;1&#39;</span>, liner,       <span class="stringliteral">&quot;y = %.1f + x * %.1f&quot;</span>              },
<a name="l00081"></a>00081                         {975, 210, 300,  60,   CountourColor, ButtonColor, <span class="stringliteral">&quot;Парабола&quot;</span>,         TextColor,    1, <span class="charliteral">&#39;2&#39;</span>, parabola,    <span class="stringliteral">&quot;y = %.1f + %.1f * x + %.1f * x^2&quot;</span> },
<a name="l00082"></a>00082                         {975, 310, 300,  60,   CountourColor, ButtonColor, <span class="stringliteral">&quot;Радиоволны&quot;</span>,       TextColor,    2, <span class="charliteral">&#39;3&#39;</span>, radio_waves, <span class="stringliteral">&quot;y = %.1f + %.1f*x + %.1f * sin (x) / tan (x) * x^3 / 10&quot;</span> },
<a name="l00083"></a>00083                         {975, 410, 300,  60,   CountourColor, ButtonColor, <span class="stringliteral">&quot;Большая Арка!!&quot;</span>,   TextColor,    3, <span class="charliteral">&#39;4&#39;</span>, big_arc,     <span class="stringliteral">&quot;y = %.1f + x*x/100 / %.1f * %.1f&quot;</span> },
<a name="l00084"></a>00084                         {975, 510, 300,  60,   CountourColor, ButtonColor, <span class="stringliteral">&quot;Синус&quot;</span>,            TextColor,    4, <span class="charliteral">&#39;5&#39;</span>, sinus,       <span class="stringliteral">&quot;y = %.1f + sin (x * %.1f) * %.1f&quot;</span> } };
<a name="l00085"></a>00085 
<a name="l00086"></a>00086     <span class="keywordtype">int</span> size = <span class="keyword">sizeof</span> (object) / <span class="keyword">sizeof</span> (<span class="keywordtype">object</span> [0]);
<a name="l00087"></a>00087 
<a name="l00088"></a>00088     <span class="keywordtype">int</span> oldMousePressed  = 0;
<a name="l00089"></a>00089     <span class="keywordtype">int</span> mousePressed = 0;
<a name="l00090"></a>00090 
<a name="l00091"></a>00091     <span class="keywordtype">int</span> drawButtons = 0;
<a name="l00092"></a>00092     <span class="keywordtype">int</span> vopros = 0;
<a name="l00093"></a>00093 
<a name="l00094"></a>00094     <span class="keyword">const</span> <span class="keywordtype">int</span> n = 3; <span class="comment">// c  b  k</span>
<a name="l00095"></a>00095     <span class="keywordtype">double</span> kF [n] =  {  0, 1, 0.5 };
<a name="l00096"></a>00096 
<a name="l00097"></a>00097     <a class="code" href="a00081.htm#gae92e621aaed81f90e4d142356e38762a" title="Блокирует обновление изображения окна, во избежание мигания.">txBegin</a>();
<a name="l00098"></a>00098 
<a name="l00099"></a>00099     <span class="keywordtype">int</span> numberOfGrafic = 0;
<a name="l00100"></a>00100 
<a name="l00101"></a>00101     <span class="keywordflow">while</span> (!GetAsyncKeyState (VK_ESCAPE))
<a name="l00102"></a>00102         {
<a name="l00103"></a>00103         <span class="keywordtype">int</span> button = CheckButtons (<span class="keywordtype">object</span>, size);
<a name="l00104"></a>00104         <span class="keywordflow">if</span> (button != -1) numberOfGrafic = button;
<a name="l00105"></a>00105 
<a name="l00106"></a>00106         controlGrafics (kF);
<a name="l00107"></a>00107 
<a name="l00108"></a>00108         <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a9f0adfcb24eeb418fc39fe950db65ec8" title="Черный цвет.">TX_BLACK</a>);
<a name="l00109"></a>00109         <a class="code" href="a00081.htm#ga78e83baeb6a02d5fa33dd8b062e513d9" title="Стирает холст текущим цветом заполнения.">txClear</a>();
<a name="l00110"></a>00110 
<a name="l00111"></a>00111         alphaBlend (0, 0, LenghDesk, HightDesk, desk, 0, 0, (<a class="code" href="a00081.htm#gab79782d80f6c61587d02f0633aa2f198" title="Возвращает ширину окна или холста.">txGetExtentX</a> (desk)), (<a class="code" href="a00081.htm#gaa9bb7fd84e0b9f59c96be89d70c74321" title="Возвращает высоту окна или холста.">txGetExtentY</a> (desk)), 1, 2);
<a name="l00112"></a>00112 
<a name="l00113"></a>00113         Lines (<span class="keyword">true</span>);
<a name="l00114"></a>00114 
<a name="l00115"></a>00115         <span class="keyword">const</span> COLORREF veryGray = <a class="code" href="a00081.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент).">RGB</a> (15, 15, 15);
<a name="l00116"></a>00116         <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a>     (veryGray);
<a name="l00117"></a>00117         <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (veryGray);
<a name="l00118"></a>00118 
<a name="l00119"></a>00119         txdrawGrafics (-50, 50, <span class="keywordtype">object</span> [numberOfGrafic].grafic, WHITE, 0.1, 5, kF);
<a name="l00120"></a>00120 
<a name="l00121"></a>00121         signingOfTheAxes();
<a name="l00122"></a>00122 
<a name="l00123"></a>00123         formula (kF, <span class="keywordtype">object</span>[numberOfGrafic].yFormula);
<a name="l00124"></a>00124 
<a name="l00125"></a>00125         <a class="code" href="a00081.htm#ga54f48f0bcb9453add294e0a9f8b1fb1d" title="Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом прозрачности...">txTransparentBlt</a> (<a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), 1240,  45, 55, 47, book);
<a name="l00126"></a>00126         <a class="code" href="a00081.htm#ga54f48f0bcb9453add294e0a9f8b1fb1d" title="Копирует изображение с одного холста (контекста рисования, DC) на другой с учетом прозрачности...">txTransparentBlt</a> (<a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), 1170,  45, 50, 50, voprosImage);
<a name="l00127"></a>00127 
<a name="l00128"></a>00128         <span class="keywordtype">double</span> x = <a class="code" href="a00082.htm#ga44606f3b7f5f345d15bb20d46fcf78b6" title="Возвращает позицию Мыши!">txMousePos</a>().x, y = <a class="code" href="a00082.htm#ga44606f3b7f5f345d15bb20d46fcf78b6" title="Возвращает позицию Мыши!">txMousePos</a>().y;
<a name="l00129"></a>00129 
<a name="l00130"></a>00130         oldMousePressed = mousePressed;
<a name="l00131"></a>00131         mousePressed = <a class="code" href="a00082.htm#ga3317e38b22d8e6f116c29503144c2cc2" title="Возвращает состояние Кнопок Мыши!">txMouseButtons</a>() &amp; 1;
<a name="l00132"></a>00132 
<a name="l00133"></a>00133         <span class="keywordflow">if</span> (!oldMousePressed &amp;&amp; mousePressed)
<a name="l00134"></a>00134             {
<a name="l00135"></a>00135             <span class="keywordflow">if</span> (fIn (1240, x, 1295, 45, y, 92)) drawButtons = !drawButtons;
<a name="l00136"></a>00136             <span class="keywordflow">if</span> (fIn (1170, x, 1220, 45, y, 90)) vopros      = !vopros;
<a name="l00137"></a>00137             }
<a name="l00138"></a>00138 
<a name="l00139"></a>00139         <span class="keywordflow">if</span> (vopros || GetAsyncKeyState (VK_F1))
<a name="l00140"></a>00140             InformationDesk();
<a name="l00141"></a>00141 
<a name="l00142"></a>00142         <span class="keywordflow">if</span> (drawButtons || GetAsyncKeyState (VK_F2))
<a name="l00143"></a>00143             DrawButtons (<span class="keywordtype">object</span>, size);
<a name="l00144"></a>00144 
<a name="l00145"></a>00145         <a class="code" href="a00081.htm#ga6c293f0b0f71efebdeeb0b56a97ba50c" title="Задерживает выполнение программы на определенное время.">txSleep</a>();
<a name="l00146"></a>00146         }
<a name="l00147"></a>00147 
<a name="l00148"></a>00148     <a class="code" href="a00081.htm#ga809dc04afd5348247846ee01ce9a06e6" title="Разблокирует обновление окна, заблокированное функцией txBegin().">txEnd</a>();
<a name="l00149"></a>00149     }
<a name="l00150"></a>00150 
<a name="l00151"></a>00151 <span class="comment">//----------------------------------------------------------------------------------------------------------------------</span>
<a name="l00152"></a>00152 
<a name="l00153"></a>00153 <span class="keywordtype">int</span> controlGrafics (<span class="keywordtype">double</span> kF[])
<a name="l00154"></a>00154     {
<a name="l00155"></a>00155     <span class="keywordtype">int</span> difference = 0;
<a name="l00156"></a>00156 
<a name="l00157"></a>00157     <span class="keywordflow">if</span> (GetAsyncKeyState (<span class="charliteral">&#39;C&#39;</span>))
<a name="l00158"></a>00158         {
<a name="l00159"></a>00159         <span class="keywordflow">if</span> (GetAsyncKeyState (VK_UP))    kF [0] += 0.08;
<a name="l00160"></a>00160         <span class="keywordflow">if</span> (GetAsyncKeyState (VK_DOWN))  kF [0] -= 0.08;
<a name="l00161"></a>00161         <span class="keywordflow">if</span> (GetAsyncKeyState (VK_SPACE)) kF [0]  = 1;
<a name="l00162"></a>00162 
<a name="l00163"></a>00163         difference++;
<a name="l00164"></a>00164         }
<a name="l00165"></a>00165 
<a name="l00166"></a>00166     <span class="keywordflow">if</span> (GetAsyncKeyState (<span class="charliteral">&#39;B&#39;</span>))
<a name="l00167"></a>00167         {
<a name="l00168"></a>00168         <span class="keywordflow">if</span> (GetAsyncKeyState (VK_UP))    kF [1] += 0.1;
<a name="l00169"></a>00169         <span class="keywordflow">if</span> (GetAsyncKeyState (VK_DOWN))  kF [1] -= 0.1;
<a name="l00170"></a>00170         <span class="keywordflow">if</span> (GetAsyncKeyState (VK_SPACE)) kF [1]  = 1;
<a name="l00171"></a>00171 
<a name="l00172"></a>00172         difference++;
<a name="l00173"></a>00173         }
<a name="l00174"></a>00174 
<a name="l00175"></a>00175     <span class="keywordflow">if</span> (GetAsyncKeyState (<span class="charliteral">&#39;K&#39;</span>))
<a name="l00176"></a>00176         {
<a name="l00177"></a>00177         <span class="keywordflow">if</span> (GetAsyncKeyState (VK_UP))    kF [2] += 0.2;
<a name="l00178"></a>00178         <span class="keywordflow">if</span> (GetAsyncKeyState (VK_DOWN))  kF [2] -= 0.2;
<a name="l00179"></a>00179         <span class="keywordflow">if</span> (GetAsyncKeyState (VK_SPACE)) kF [2]  = 1;
<a name="l00180"></a>00180 
<a name="l00181"></a>00181         difference++;
<a name="l00182"></a>00182         }
<a name="l00183"></a>00183 
<a name="l00184"></a>00184     <span class="keywordflow">if</span> (difference == 0 &amp;&amp; GetAsyncKeyState (VK_SPACE))
<a name="l00185"></a>00185         {
<a name="l00186"></a>00186         kF [0] = 0;
<a name="l00187"></a>00187         kF [1] = 0;
<a name="l00188"></a>00188         kF [2] = 1;
<a name="l00189"></a>00189 
<a name="l00190"></a>00190         difference++;
<a name="l00191"></a>00191         }
<a name="l00192"></a>00192 
<a name="l00193"></a>00193     <span class="keywordflow">return</span> difference;
<a name="l00194"></a>00194     }
<a name="l00195"></a>00195 
<a name="l00196"></a>00196 <span class="comment">//----------------------------------------------------------------------------------------------------------------------</span>
<a name="l00197"></a>00197 
<a name="l00198"></a>00198 <span class="keywordtype">void</span> formula (<span class="keywordtype">double</span> kF[], <span class="keywordtype">char</span> yFormula[])
<a name="l00199"></a>00199     {
<a name="l00200"></a>00200     <span class="keywordtype">char</span> str [100] = <span class="stringliteral">&quot;&quot;</span>;
<a name="l00201"></a>00201     sprintf (str, yFormula, kF [0], kF [1], kF [2]);
<a name="l00202"></a>00202 
<a name="l00203"></a>00203     <a class="code" href="a00081.htm#ga6689b9a89add9c5eb5cf54a8c86539a4" title="Выбирает текущий шрифт, его размер и другие атрибуты.">txSelectFont</a> (<span class="stringliteral">&quot;Comic Sans MS&quot;</span>, 40);
<a name="l00204"></a>00204     <a class="code" href="a00081.htm#ga09938df8859ae8b62638a3af76ee6735" title="Устанавливает текущее выравнивание текста (влево/вправо/по центру).">txSetTextAlign</a> (TA_LEFT);
<a name="l00205"></a>00205 
<a name="l00206"></a>00206     ShadowRect (LeftOfTheGrafic + 3, TopOfTheGrafic + 10,
<a name="l00207"></a>00207                 LeftOfTheGrafic + 30 + <a class="code" href="a00081.htm#gad5483eacac697420a84f66733e45ed02" title="Вычисляет ширину текстовой надписи.">txGetTextExtentX</a> (str),
<a name="l00208"></a>00208                 TopOfTheGrafic  + 25 + <a class="code" href="a00081.htm#gac021e9984ef217a7a8c14094e3d684c9" title="Вычисляет высоту текстовой надписи.">txGetTextExtentY</a> (str),
<a name="l00209"></a>00209                 ButtonColor, CountourColor);
<a name="l00210"></a>00210 
<a name="l00211"></a>00211     ShadowText (LeftOfTheGrafic + 15, TopOfTheGrafic + 15, 0, 0, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a2331cdb79541487869e7c2445a2eb5f0" title="Желтый цвет.">TX_YELLOW</a>, str);
<a name="l00212"></a>00212     }
<a name="l00213"></a>00213 
<a name="l00214"></a>00214 <span class="comment">//----------------------------------------------------------------------------------------------------------------------</span>
<a name="l00215"></a>00215 
<a name="l00216"></a>00216 <span class="keywordtype">void</span> Button::drawButton()
<a name="l00217"></a>00217     {
<a name="l00218"></a>00218     <a class="code" href="a00081.htm#ga6689b9a89add9c5eb5cf54a8c86539a4" title="Выбирает текущий шрифт, его размер и другие атрибуты.">txSelectFont</a> (<span class="stringliteral">&quot;Comic Sans MS&quot;</span>, 40);
<a name="l00219"></a>00219 
<a name="l00220"></a>00220     ShadowRect (x, y, x + lengh, y + hight, fillColor, setColor);
<a name="l00221"></a>00221     ShadowText (x, y, x + lengh, y + hight, setTextColor, text);
<a name="l00222"></a>00222     }
<a name="l00223"></a>00223 
<a name="l00224"></a>00224 <span class="comment">//----------------------------------------------------------------------------------------------------------------------</span>
<a name="l00225"></a>00225 
<a name="l00226"></a>00226 <span class="keywordtype">void</span> DrawButtons (Button <span class="keywordtype">object</span>[], <span class="keywordtype">int</span> size)
<a name="l00227"></a>00227     {
<a name="l00228"></a>00228     <span class="keywordtype">int</span> i = 0;
<a name="l00229"></a>00229     <span class="keywordflow">while</span> (i &lt; size)
<a name="l00230"></a>00230         {
<a name="l00231"></a>00231         <span class="keywordtype">object</span> [i].drawButton();
<a name="l00232"></a>00232         i++;
<a name="l00233"></a>00233         }
<a name="l00234"></a>00234     }
<a name="l00235"></a>00235 
<a name="l00236"></a>00236 <span class="comment">//----------------------------------------------------------------------------------------------------------------------</span>
<a name="l00237"></a>00237 
<a name="l00238"></a>00238 <span class="keywordtype">int</span> CheckMouseButtons (Button <span class="keywordtype">object</span>[], <span class="keywordtype">int</span> size)
<a name="l00239"></a>00239     {
<a name="l00240"></a>00240     <span class="keywordflow">if</span> (!<a class="code" href="a00082.htm#ga3317e38b22d8e6f116c29503144c2cc2" title="Возвращает состояние Кнопок Мыши!">txMouseButtons</a>() &amp; 1) <span class="keywordflow">return</span> -1;
<a name="l00241"></a>00241 
<a name="l00242"></a>00242     <span class="keywordtype">int</span> i = 0;
<a name="l00243"></a>00243     <span class="keywordflow">while</span> (i &lt; size)
<a name="l00244"></a>00244         {
<a name="l00245"></a>00245         <span class="keywordtype">double</span> xMin = <span class="keywordtype">object</span> [i].x, xMax = <span class="keywordtype">object</span> [i].x + <span class="keywordtype">object</span> [i].lengh;
<a name="l00246"></a>00246         <span class="keywordtype">double</span> yMin = <span class="keywordtype">object</span> [i].y, yMax = <span class="keywordtype">object</span> [i].y + <span class="keywordtype">object</span> [i].hight;
<a name="l00247"></a>00247         <span class="keywordtype">double</span> x = <a class="code" href="a00082.htm#ga44606f3b7f5f345d15bb20d46fcf78b6" title="Возвращает позицию Мыши!">txMousePos</a>().x, y = <a class="code" href="a00082.htm#ga44606f3b7f5f345d15bb20d46fcf78b6" title="Возвращает позицию Мыши!">txMousePos</a>().y;
<a name="l00248"></a>00248 
<a name="l00249"></a>00249         <span class="keywordflow">if</span> (fIn (xMin, x, xMax, yMin, y, yMax))
<a name="l00250"></a>00250             {
<a name="l00251"></a>00251             <span class="keywordflow">return</span> i;
<a name="l00252"></a>00252             }
<a name="l00253"></a>00253 
<a name="l00254"></a>00254         i++;
<a name="l00255"></a>00255         }
<a name="l00256"></a>00256 
<a name="l00257"></a>00257     <span class="keywordflow">return</span> -1;
<a name="l00258"></a>00258     }
<a name="l00259"></a>00259 
<a name="l00260"></a>00260 <span class="comment">//----------------------------------------------------------------------------------------------------------------------</span>
<a name="l00261"></a>00261 
<a name="l00262"></a>00262 <span class="keywordtype">int</span> CheckButtons (Button <span class="keywordtype">object</span>[], <span class="keywordtype">int</span> size)
<a name="l00263"></a>00263     {
<a name="l00264"></a>00264     <span class="keywordtype">int</span> i = 0;
<a name="l00265"></a>00265     <span class="keywordflow">while</span> (i &lt; size)
<a name="l00266"></a>00266         {
<a name="l00267"></a>00267         <span class="keywordflow">if</span> (GetAsyncKeyState (<span class="keywordtype">object</span> [i].hotKey) ||
<a name="l00268"></a>00268            (fIn (<span class="keywordtype">object</span> [i].x, <a class="code" href="a00082.htm#gae56f541d32ff7324dd6dd340411c1130" title="Возвращает X-Координату Мыши!">txMouseX</a>(), <span class="keywordtype">object</span> [i].x + <span class="keywordtype">object</span> [i].lengh,
<a name="l00269"></a>00269                  <span class="keywordtype">object</span> [i].y, <a class="code" href="a00082.htm#ga481847278ec77647082072325be5c226" title="Возвращает Y-Координату Мыши!">txMouseY</a>(), <span class="keywordtype">object</span> [i].y + <span class="keywordtype">object</span> [i].hight) &amp;&amp; (<a class="code" href="a00082.htm#ga3317e38b22d8e6f116c29503144c2cc2" title="Возвращает состояние Кнопок Мыши!">txMouseButtons</a>() &amp; 1)))
<a name="l00270"></a>00270             {
<a name="l00271"></a>00271             <span class="keywordflow">return</span> i;
<a name="l00272"></a>00272             }
<a name="l00273"></a>00273 
<a name="l00274"></a>00274         i++;
<a name="l00275"></a>00275         }
<a name="l00276"></a>00276 
<a name="l00277"></a>00277     <span class="keywordflow">return</span> -1;
<a name="l00278"></a>00278     }
<a name="l00279"></a>00279 
<a name="l00280"></a>00280 <span class="comment">//----------------------------------------------------------------------------------------------------------------------</span>
<a name="l00281"></a>00281 
<a name="l00282"></a>00282 <span class="keywordtype">int</span> fIn (<span class="keywordtype">double</span> xMin, <span class="keywordtype">double</span> x, <span class="keywordtype">double</span> xMax,
<a name="l00283"></a>00283          <span class="keywordtype">double</span> yMin, <span class="keywordtype">double</span> y, <span class="keywordtype">double</span> yMax)
<a name="l00284"></a>00284     {
<a name="l00285"></a>00285     <span class="keywordflow">return</span> (xMin &lt;= x &amp;&amp; x &lt;= xMax) &amp;&amp;
<a name="l00286"></a>00286            (yMin &lt;= y &amp;&amp; y &lt;= yMax);
<a name="l00287"></a>00287     }
<a name="l00288"></a>00288 
<a name="l00289"></a>00289 <span class="comment">//----------------------------------------------------------------------------------------------------------------------</span>
<a name="l00290"></a>00290 
<a name="l00291"></a>00291 <span class="keywordtype">void</span> Lines (<span class="keywordtype">bool</span> grid)
<a name="l00292"></a>00292     {
<a name="l00293"></a>00293     <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a342ad901a39ab4b40f091f6699b64927" title="Темно-красный цвет. Слишком темный.">TX_RED</a>, 2);
<a name="l00294"></a>00294     <a class="code" href="a00081.htm#gaaee38df6f38b6f1729b9db1c4ac23e65" title="Рисует линию.">txLine</a> (Xcentre+1, TopOfTheGrafic + 7, Xcentre+1, BottomOfTheGrafic - 7);
<a name="l00295"></a>00295     <a class="code" href="a00081.htm#gaaee38df6f38b6f1729b9db1c4ac23e65" title="Рисует линию.">txLine</a> (LeftOfTheGrafic + 10, Ycentre+1, RightOfTheGrafic - 10, Ycentre+1);
<a name="l00296"></a>00296     <a class="code" href="a00081.htm#gaaee38df6f38b6f1729b9db1c4ac23e65" title="Рисует линию.">txLine</a> (Xcentre-10, TopOfTheGrafic+20, Xcentre+1, TopOfTheGrafic+7);
<a name="l00297"></a>00297     <a class="code" href="a00081.htm#gaaee38df6f38b6f1729b9db1c4ac23e65" title="Рисует линию.">txLine</a> (Xcentre+11, TopOfTheGrafic+20, Xcentre+1, TopOfTheGrafic+7);
<a name="l00298"></a>00298     <a class="code" href="a00081.htm#gaaee38df6f38b6f1729b9db1c4ac23e65" title="Рисует линию.">txLine</a> (RightOfTheGrafic-23, Ycentre+11, RightOfTheGrafic-10, Ycentre+1);
<a name="l00299"></a>00299     <a class="code" href="a00081.htm#gaaee38df6f38b6f1729b9db1c4ac23e65" title="Рисует линию.">txLine</a> (RightOfTheGrafic-23, Ycentre-11, RightOfTheGrafic-10, Ycentre+1);
<a name="l00300"></a>00300 
<a name="l00301"></a>00301     <a class="code" href="a00081.htm#ga6689b9a89add9c5eb5cf54a8c86539a4" title="Выбирает текущий шрифт, его размер и другие атрибуты.">txSelectFont</a> (<span class="stringliteral">&quot;Comic Sans MS&quot;</span>, 25);
<a name="l00302"></a>00302     <a class="code" href="a00081.htm#ga09938df8859ae8b62638a3af76ee6735" title="Устанавливает текущее выравнивание текста (влево/вправо/по центру).">txSetTextAlign</a> (TA_LEFT);
<a name="l00303"></a>00303 
<a name="l00304"></a>00304     <a class="code" href="a00081.htm#ga52e119361961d9eee33c176a3084e55d" title="Рисует текст.">txTextOut</a> (<a class="code" href="a00081.htm#gab79782d80f6c61587d02f0633aa2f198" title="Возвращает ширину окна или холста.">txGetExtentX</a>()/2 - 25, TopOfTheGrafic + 13,   <span class="stringliteral">&quot;Y&quot;</span>);
<a name="l00305"></a>00305     <a class="code" href="a00081.htm#ga52e119361961d9eee33c176a3084e55d" title="Рисует текст.">txTextOut</a> (RightOfTheGrafic - 25, <a class="code" href="a00081.htm#gaa9bb7fd84e0b9f59c96be89d70c74321" title="Возвращает высоту окна или холста.">txGetExtentY</a>()/2 + 15, <span class="stringliteral">&quot;X&quot;</span>);
<a name="l00306"></a>00306 
<a name="l00307"></a>00307     <span class="keywordflow">if</span> (grid)
<a name="l00308"></a>00308         {
<a name="l00309"></a>00309         Pen();
<a name="l00310"></a>00310 
<a name="l00311"></a>00311         <span class="keywordtype">int</span> Xnum = LeftOfTheGrafic;
<a name="l00312"></a>00312         <span class="keywordflow">while</span> (Xnum &lt; RightOfTheGrafic-20)
<a name="l00313"></a>00313             {
<a name="l00314"></a>00314             Xnum += 20;
<a name="l00315"></a>00315             <a class="code" href="a00081.htm#gaaee38df6f38b6f1729b9db1c4ac23e65" title="Рисует линию.">txLine</a> (Xnum, TopOfTheGrafic, Xnum, BottomOfTheGrafic);
<a name="l00316"></a>00316             }
<a name="l00317"></a>00317 
<a name="l00318"></a>00318         <span class="keywordtype">int</span> Ynum = TopOfTheGrafic-10;
<a name="l00319"></a>00319         <span class="keywordflow">while</span> (Ynum &lt; BottomOfTheGrafic-20)
<a name="l00320"></a>00320             {
<a name="l00321"></a>00321             Ynum += 20;
<a name="l00322"></a>00322             <a class="code" href="a00081.htm#gaaee38df6f38b6f1729b9db1c4ac23e65" title="Рисует линию.">txLine</a> (LeftOfTheGrafic, Ynum, RightOfTheGrafic, Ynum);
<a name="l00323"></a>00323             }
<a name="l00324"></a>00324         }
<a name="l00325"></a>00325     }
<a name="l00326"></a>00326 
<a name="l00327"></a>00327 <span class="comment">//----------------------------------------------------------------------------------------------------------------------</span>
<a name="l00328"></a>00328 
<a name="l00329"></a>00329 <span class="keywordtype">void</span> signingOfTheAxes()
<a name="l00330"></a>00330     {
<a name="l00331"></a>00331     <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a342ad901a39ab4b40f091f6699b64927" title="Темно-красный цвет. Слишком темный.">TX_RED</a>);
<a name="l00332"></a>00332     <a class="code" href="a00081.htm#ga6689b9a89add9c5eb5cf54a8c86539a4" title="Выбирает текущий шрифт, его размер и другие атрибуты.">txSelectFont</a> (<span class="stringliteral">&quot;Comic Sans MS&quot;</span>, 25);
<a name="l00333"></a>00333     <a class="code" href="a00081.htm#ga09938df8859ae8b62638a3af76ee6735" title="Устанавливает текущее выравнивание текста (влево/вправо/по центру).">txSetTextAlign</a> (TA_RIGHT);
<a name="l00334"></a>00334 
<a name="l00335"></a>00335     <span class="keywordtype">int</span> i = 1;
<a name="l00336"></a>00336     <span class="keywordtype">int</span> y = Ycentre-90;
<a name="l00337"></a>00337     <span class="keywordflow">while</span> (y &gt;= TopOfTheGrafic - 40)
<a name="l00338"></a>00338         {
<a name="l00339"></a>00339         <span class="keywordtype">char</span> str [20]= <span class="stringliteral">&quot;&quot;</span>;
<a name="l00340"></a>00340         sprintf (str, <span class="stringliteral">&quot;%d&quot;</span>, i);
<a name="l00341"></a>00341 
<a name="l00342"></a>00342         <a class="code" href="a00081.htm#ga52e119361961d9eee33c176a3084e55d" title="Рисует текст.">txTextOut</a> (Xcentre-10, TopOfTheGrafic  + y, str);
<a name="l00343"></a>00343 
<a name="l00344"></a>00344         i++;
<a name="l00345"></a>00345         y -= 2*Step;
<a name="l00346"></a>00346         }
<a name="l00347"></a>00347 
<a name="l00348"></a>00348     <span class="keywordtype">int</span> i2 = 1;
<a name="l00349"></a>00349     <span class="keywordtype">int</span> y2 = Ycentre-10;
<a name="l00350"></a>00350     <span class="keywordflow">while</span> (y2 &lt;= BottomOfTheGrafic - 80)
<a name="l00351"></a>00351         {
<a name="l00352"></a>00352         <span class="keywordtype">char</span> str [20]= <span class="stringliteral">&quot;&quot;</span>;
<a name="l00353"></a>00353         sprintf (str, <span class="stringliteral">&quot;-%d&quot;</span>, i2);
<a name="l00354"></a>00354 
<a name="l00355"></a>00355         <a class="code" href="a00081.htm#ga52e119361961d9eee33c176a3084e55d" title="Рисует текст.">txTextOut</a> (Xcentre-10, TopOfTheGrafic  + y2, str);
<a name="l00356"></a>00356 
<a name="l00357"></a>00357         i2++;
<a name="l00358"></a>00358         y2 += 2*Step;
<a name="l00359"></a>00359         }
<a name="l00360"></a>00360 
<a name="l00361"></a>00361     <a class="code" href="a00081.htm#ga09938df8859ae8b62638a3af76ee6735" title="Устанавливает текущее выравнивание текста (влево/вправо/по центру).">txSetTextAlign</a> (TA_CENTER);
<a name="l00362"></a>00362 
<a name="l00363"></a>00363     <span class="keywordtype">int</span> i3 = -1;
<a name="l00364"></a>00364     <span class="keywordtype">int</span> x = Xcentre-90;
<a name="l00365"></a>00365     <span class="keywordflow">while</span> (x &gt;= LeftOfTheGrafic - 60)
<a name="l00366"></a>00366         {
<a name="l00367"></a>00367         <span class="keywordtype">char</span> str [20]= <span class="stringliteral">&quot;&quot;</span>;
<a name="l00368"></a>00368         sprintf (str, <span class="stringliteral">&quot;%d&quot;</span>, i3);
<a name="l00369"></a>00369 
<a name="l00370"></a>00370         <a class="code" href="a00081.htm#ga52e119361961d9eee33c176a3084e55d" title="Рисует текст.">txTextOut</a> (LeftOfTheGrafic + x+5, Ycentre+5, str);
<a name="l00371"></a>00371 
<a name="l00372"></a>00372         i3--;
<a name="l00373"></a>00373         x -= 2*Step;
<a name="l00374"></a>00374         }
<a name="l00375"></a>00375 
<a name="l00376"></a>00376     <span class="keywordtype">int</span> i4 = 1;
<a name="l00377"></a>00377     <span class="keywordtype">int</span> x2 = Xcentre-5;
<a name="l00378"></a>00378     <span class="keywordflow">while</span> (x2 &lt;= RightOfTheGrafic - 60)
<a name="l00379"></a>00379         {
<a name="l00380"></a>00380         <span class="keywordtype">char</span> str [20]= <span class="stringliteral">&quot;&quot;</span>;
<a name="l00381"></a>00381         sprintf (str, <span class="stringliteral">&quot;%d&quot;</span>, i4);
<a name="l00382"></a>00382 
<a name="l00383"></a>00383         <a class="code" href="a00081.htm#ga52e119361961d9eee33c176a3084e55d" title="Рисует текст.">txTextOut</a> (LeftOfTheGrafic + x2+5, Ycentre+5, str);
<a name="l00384"></a>00384 
<a name="l00385"></a>00385         i4++;
<a name="l00386"></a>00386         x2 += 2*Step;
<a name="l00387"></a>00387         }
<a name="l00388"></a>00388 
<a name="l00389"></a>00389     <a class="code" href="a00081.htm#ga6689b9a89add9c5eb5cf54a8c86539a4" title="Выбирает текущий шрифт, его размер и другие атрибуты.">txSelectFont</a> (<span class="stringliteral">&quot;Comic Sans MS&quot;</span>, 25);
<a name="l00390"></a>00390     <a class="code" href="a00081.htm#ga09938df8859ae8b62638a3af76ee6735" title="Устанавливает текущее выравнивание текста (влево/вправо/по центру).">txSetTextAlign</a> (TA_TOP + TA_RIGHT);
<a name="l00391"></a>00391 
<a name="l00392"></a>00392     <a class="code" href="a00081.htm#ga52e119361961d9eee33c176a3084e55d" title="Рисует текст.">txTextOut</a> (Xcentre-7, Ycentre+4, <span class="stringliteral">&quot;0&quot;</span>);
<a name="l00393"></a>00393     }
<a name="l00394"></a>00394 
<a name="l00395"></a>00395 <span class="comment">//----------------------------------------------------------------------------------------------------------------------</span>
<a name="l00396"></a>00396 
<a name="l00397"></a>00397 <span class="keywordtype">void</span> InformationDesk()
<a name="l00398"></a>00398     {
<a name="l00399"></a>00399     ShadowRect (30, 530, 885, 680, ButtonColor, CountourColor);
<a name="l00400"></a>00400 
<a name="l00401"></a>00401     <a class="code" href="a00081.htm#ga6689b9a89add9c5eb5cf54a8c86539a4" title="Выбирает текущий шрифт, его размер и другие атрибуты.">txSelectFont</a> (<span class="stringliteral">&quot;Comic Sans MS&quot;</span>, 25);
<a name="l00402"></a>00402     <a class="code" href="a00081.htm#ga09938df8859ae8b62638a3af76ee6735" title="Устанавливает текущее выравнивание текста (влево/вправо/по центру).">txSetTextAlign</a> (TA_LEFT);
<a name="l00403"></a>00403 
<a name="l00404"></a>00404     ShadowText (50, 540, 0, 0, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025" title="Белый цвет.">TX_WHITE</a>, <span class="stringliteral">&quot;Выбор графика, включение и выключение меню - значок книги в правом верхнем углу или F2&quot;</span>);
<a name="l00405"></a>00405     ShadowText (50, 570, 0, 0, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025" title="Белый цвет.">TX_WHITE</a>, <span class="stringliteral">&quot;Увеличение k -- K + UP,  уменьшение -- K + DOWN,      k = 0 -- K + SPACE&quot;</span>);
<a name="l00406"></a>00406     ShadowText (50, 590, 0, 0, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025" title="Белый цвет.">TX_WHITE</a>, <span class="stringliteral">&quot;Увеличение b -- B + UP,  уменьшение -- B + DOWN,      b = 0 -- B + SPACE           Выход -- ESC&quot;</span>);
<a name="l00407"></a>00407     ShadowText (50, 610, 0, 0, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025" title="Белый цвет.">TX_WHITE</a>, <span class="stringliteral">&quot;Увеличение c -- C + UP,  уменьшение -- C + DOWN,      c  = 0 -- C + SPACE&quot;</span>);
<a name="l00408"></a>00408     ShadowText (50, 640, 0, 0, <a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025" title="Белый цвет.">TX_WHITE</a>, <span class="stringliteral">&quot;Copyright (C) Филипп Куликов, 2018, 7 класс                 k = b = c = 0 -- SPACE&quot;</span>);
<a name="l00409"></a>00409     }
<a name="l00410"></a>00410 
<a name="l00411"></a>00411 <span class="comment">//----------------------------------------------------------------------------------------------------------------------</span>
<a name="l00412"></a>00412 
<a name="l00413"></a>00413 <span class="keywordtype">void</span> ShadowRect (<span class="keywordtype">int</span> x1, <span class="keywordtype">int</span> y1, <span class="keywordtype">int</span> x2, <span class="keywordtype">int</span> y2, COLORREF fillColor, COLORREF countourColor)
<a name="l00414"></a>00414     {
<a name="l00415"></a>00415     <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a>       (ShadowColor);
<a name="l00416"></a>00416     <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a>   (ShadowColor);
<a name="l00417"></a>00417     Win32::RoundRect (<a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), x1+3, y1+3, x2+3, y2+3, 15, 15);
<a name="l00418"></a>00418 
<a name="l00419"></a>00419     <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a>       (countourColor);
<a name="l00420"></a>00420     <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a>   (fillColor);
<a name="l00421"></a>00421     Win32::RoundRect (<a class="code" href="a00081.htm#ga6e641bf88bafb9bc5297354adb3aeb56" title="Возвращает холст (дескриптор контекста рисования, HDC) окна рисования TXLib.">txDC</a>(), x1, y1, x2, y2, 15, 15);
<a name="l00422"></a>00422     }
<a name="l00423"></a>00423 
<a name="l00424"></a>00424 <span class="comment">//----------------------------------------------------------------------------------------------------------------------</span>
<a name="l00425"></a>00425 
<a name="l00426"></a>00426 <span class="keywordtype">void</span> ShadowText (<span class="keywordtype">int</span> x1, <span class="keywordtype">int</span> y1, <span class="keywordtype">int</span> x2, <span class="keywordtype">int</span> y2, COLORREF color, <span class="keyword">const</span> <span class="keywordtype">char</span> text[])
<a name="l00427"></a>00427     {
<a name="l00428"></a>00428     <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (ShadowColor);
<a name="l00429"></a>00429     <span class="keywordflow">if</span> (x2 &amp;&amp; y2) <a class="code" href="a00081.htm#gaf6a9b31e58b6a0523ce1636a97053606" title="Рисует текст, размещенный в прямоугольной области.">txDrawText</a> (x1+2, y1+2, x2+2, y2+2, text);
<a name="l00430"></a>00430     <span class="keywordflow">else</span>          <a class="code" href="a00081.htm#ga52e119361961d9eee33c176a3084e55d" title="Рисует текст.">txTextOut</a>  (x1+2, y1+2,             text);
<a name="l00431"></a>00431 
<a name="l00432"></a>00432     <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (color);
<a name="l00433"></a>00433     <span class="keywordflow">if</span> (x2 &amp;&amp; y2) <a class="code" href="a00081.htm#gaf6a9b31e58b6a0523ce1636a97053606" title="Рисует текст, размещенный в прямоугольной области.">txDrawText</a> (x1, y1, x2, y2, text);
<a name="l00434"></a>00434     <span class="keywordflow">else</span>          <a class="code" href="a00081.htm#ga52e119361961d9eee33c176a3084e55d" title="Рисует текст.">txTextOut</a>  (x1, y1,         text);
<a name="l00435"></a>00435     }
</pre></div></div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="a00039.htm">MathBeauty.cpp</a>      </li>
<!-- --------------------------------------------------------------------------
  Doxygen_HTM.htm
  $Version: 00173a, Revision: 165 $
  $Copyright: (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru> $
  $Date: 2020-03-26 02:25:56 +0400 $
 -------------------------------------------------------------------------- -->

<table class="" width="100%"><tr valign="top">

  <td align="left">
    <small><a href="http://orphus.ru">Нашли ошибку? Выделите ее мышкой и нажмите Ctrl+ENTER. &copy;&#160;Orphus.ru.</a></small><br>
    <a href="http://orphus.ru" id="orphus" target="_blank"><img class = "footer" alt="Orphus" src="http://storage.ded32.net.ru/orphus.gif" border="0"></a>
    </td>

  <td align="right">
    Документация по TX Library. Дата: Thu Aug 13 2020 00:46:49. Создано&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.3
    <img src="http://storage.ded32.net.ru/stat/TXLib-Help.chm" width=1px height=1px border="0">
    </td>
  </tr></table>

</ul>
</div>

<script type="text/javascript">var gaJsHost = (("https:" == document.location.protocol)? "https://ssl." : "http://www."); document.write (unescape ("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); try { var pageTracker = _gat._getTracker ("UA-7927138-1"); pageTracker._trackPageview(); } catch (err) {}</script>
<script type="text/javascript" src="http://storage.ded32.net.ru/orphus.js"></script>

</body>
</html>
