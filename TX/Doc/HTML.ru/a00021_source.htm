<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>TX Library: Исходный файл AR.cpp</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript">
$(document).ready(initResizable);
</script>
<link href="Doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!-- Создано системой Doxygen 1.7.3 -->
<div id="top">
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="TXLib.png"></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">TX Library&#160;<span id="projectnumber">Help &ndash; Version: 00173a, Revision: 165</span></div>
   <div id="projectbrief"><s>&nbsp;ALL&nbsp;</s> Windows graphics in a sandbox</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('a00021.htm','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<h1>AR.cpp</h1>  </div>
</div>
<div class="contents">
<a href="a00021.htm">См. документацию.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">//{=========================================================================== </span>
<a name="l00011"></a>00011 <span class="comment"></span><span class="comment">//              $Copyright: (C) Ded (Ilya Dedinsky, http://txlib.ru) &lt;mail@txlib.ru&gt; $</span>
<a name="l00012"></a>00012 <span class="comment">//}===========================================================================</span>
<a name="l00013"></a>00013 
<a name="l00014"></a>00014 <span class="preprocessor">#include &quot;TXLib.h&quot;</span>
<a name="l00015"></a>00015 
<a name="l00016"></a>00016 <span class="preprocessor">#if !defined (_TX_VER) || (_TX_VER &lt; 0x173a0165)</span>
<a name="l00017"></a>00017 <span class="preprocessor"></span><span class="preprocessor">#error Must use TXLib.h version &gt;= 1.73 and revision &gt;= 165 to compile this. -- Ded</span>
<a name="l00018"></a>00018 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00019"></a>00019 <span class="preprocessor"></span>
<a name="l00020"></a>00020 <span class="comment">//============================================================================</span>
<a name="l00021"></a>00021 
<a name="l00022"></a>00022 HWND txCreateAR (POINT pos, HDC image, <span class="keywordtype">bool</span> visible = <span class="keyword">true</span>, <span class="keywordtype">int</span> round = 10);
<a name="l00023"></a>00023 <span class="keywordtype">void</span> txDeleteAR (HWND wnd);
<a name="l00024"></a>00024 <span class="keywordtype">void</span> txMoveAR   (HWND wnd, <span class="keywordtype">int</span> x = INT_MIN, <span class="keywordtype">int</span> y = INT_MIN);
<a name="l00025"></a>00025 <span class="keywordtype">void</span> txSetAR    (HWND wnd, HDC image = NULL);
<a name="l00026"></a>00026 
<a name="l00027"></a>00027 <span class="comment">//============================================================================</span>
<a name="l00028"></a>00028 
<a name="l00029"></a>00029 <span class="keyword">namespace </span>{ <span class="keyword">namespace </span>TX { <span class="keyword">namespace </span>Win32 {
<a name="l00030"></a>00030 _TX_DLLIMPORT (<span class="stringliteral">&quot;GDI32&quot;</span>, HRGN, CreatePolygonRgn,   (<span class="keyword">const</span> POINT* points, <span class="keywordtype">int</span> nPoints, <span class="keywordtype">int</span> mode));
<a name="l00031"></a>00031 _TX_DLLIMPORT (<span class="stringliteral">&quot;GDI32&quot;</span>, HRGN, CreateRoundRectRgn, (<span class="keywordtype">int</span> x1, <span class="keywordtype">int</span> y1, <span class="keywordtype">int</span> x2, <span class="keywordtype">int</span> y2, <span class="keywordtype">int</span> width, <span class="keywordtype">int</span> height));
<a name="l00032"></a>00032 }}}
<a name="l00033"></a>00033 
<a name="l00034"></a>00034 LRESULT CALLBACK _txAR_WndProc (HWND wnd, UINT msg, WPARAM wpar, LPARAM lpar);
<a name="l00035"></a>00035 
<a name="l00036"></a>00036 <span class="comment">//----------------------------------------------------------------------------</span>
<a name="l00037"></a>00037 
<a name="l00038"></a>00038 HWND txCreateAR (POINT pos, HDC image, <span class="keywordtype">bool</span> visible <span class="comment">/*= true*/</span>, <span class="keywordtype">int</span> round <span class="comment">/*= 10*/</span>)
<a name="l00039"></a>00039     {
<a name="l00040"></a>00040     POINT size = <a class="code" href="a00081.htm#ga11074386e81c0c8677f36c0a16ac0aa1" title="Возвращает размер окна, картинки или холста в виде структуры POINT.">txGetExtent</a> (image);
<a name="l00041"></a>00041 
<a name="l00042"></a>00042     CREATESTRUCT createData = { NULL, NULL, NULL, <a class="code" href="a00081.htm#gafa31ebd8ed957c41713900a407497cf8" title="Возвращает дескриптор окна рисования">txWindow</a>(), size.y, size.x, pos.y, pos.x, WS_CHILD | WS_CLIPCHILDREN, <span class="stringliteral">&quot;_txAR_Window&quot;</span>,
<a name="l00043"></a>00043                                 txRegisterClass (<span class="stringliteral">&quot;_txAR_Class&quot;</span>, _txAR_WndProc, CS_OWNDC, HOLLOW_BRUSH, 1) };
<a name="l00044"></a>00044     
<a name="l00045"></a>00045     HWND wnd = txCreateExtraWindow (createData);
<a name="l00046"></a>00046     
<a name="l00047"></a>00047     <span class="keywordtype">int</span> sz = <a class="code" href="a00080.htm#ga3acffbd305ee72dcd4593c0d8af64a4f" title="Возвращает минимальное из двух чисел">MIN</a> (size.x, size.y) / round;
<a name="l00048"></a>00048     HRGN region = Win32::CreateRoundRectRgn (0, 0, size.x, size.y, sz, sz);
<a name="l00049"></a>00049     SetWindowRgn (wnd, region, <span class="keyword">true</span>);
<a name="l00050"></a>00050     
<a name="l00051"></a>00051     txSetAR (wnd, image);
<a name="l00052"></a>00052 
<a name="l00053"></a>00053     BringWindowToTop (wnd);
<a name="l00054"></a>00054     <span class="keywordflow">if</span> (visible) ShowWindow (wnd, SW_SHOW);
<a name="l00055"></a>00055 
<a name="l00056"></a>00056     <span class="keywordflow">return</span> wnd;
<a name="l00057"></a>00057     }
<a name="l00058"></a>00058 
<a name="l00059"></a>00059 <span class="comment">//----------------------------------------------------------------------------</span>
<a name="l00060"></a>00060 
<a name="l00061"></a>00061 <span class="keywordtype">void</span> txDeleteAR (HWND wnd)
<a name="l00062"></a>00062     {
<a name="l00063"></a>00063     txSetAR (wnd, NULL);
<a name="l00064"></a>00064     DestroyWindow (wnd);
<a name="l00065"></a>00065     }
<a name="l00066"></a>00066 
<a name="l00067"></a>00067 <span class="comment">//----------------------------------------------------------------------------</span>
<a name="l00068"></a>00068 
<a name="l00069"></a>00069 <span class="keywordtype">void</span> txMoveAR (HWND wnd, <span class="keywordtype">int</span> x <span class="comment">/*= INT_MIN*/</span>, <span class="keywordtype">int</span> y <span class="comment">/*= INT_MIN*/</span>)
<a name="l00070"></a>00070     {
<a name="l00071"></a>00071     RECT rect = {}; GetClientRect (wnd, &amp;rect);
<a name="l00072"></a>00072     
<a name="l00073"></a>00073     <span class="keywordflow">if</span> (x != INT_MIN &amp;&amp; y != INT_MIN)
<a name="l00074"></a>00074         MoveWindow (wnd, x, y, rect.right, rect.bottom, <span class="keyword">false</span>);
<a name="l00075"></a>00075     
<a name="l00076"></a>00076     InvalidateRect (wnd, NULL, <span class="keyword">false</span>);
<a name="l00077"></a>00077     }
<a name="l00078"></a>00078 
<a name="l00079"></a>00079 <span class="comment">//----------------------------------------------------------------------------</span>
<a name="l00080"></a>00080 
<a name="l00081"></a>00081 <span class="keywordtype">void</span> txSetAR (HWND wnd, HDC image <span class="comment">/*= NULL*/</span>)
<a name="l00082"></a>00082     {
<a name="l00083"></a>00083     SetWindowLongPtr (wnd, GWLP_USERDATA, (LONG_PTR) image);
<a name="l00084"></a>00084     }
<a name="l00085"></a>00085 
<a name="l00086"></a>00086 <span class="comment">//----------------------------------------------------------------------------</span>
<a name="l00087"></a>00087 
<a name="l00088"></a>00088 LRESULT CALLBACK _txAR_WndProc (HWND wnd, UINT msg, WPARAM wpar, LPARAM lpar)
<a name="l00089"></a>00089     {
<a name="l00090"></a>00090     <span class="keywordflow">if</span> (msg == WM_PAINT)
<a name="l00091"></a>00091         {
<a name="l00092"></a>00092         PAINTSTRUCT ps = {};
<a name="l00093"></a>00093         HDC dc = BeginPaint (wnd, &amp;ps);
<a name="l00094"></a>00094 
<a name="l00095"></a>00095         RECT rect = {}; GetClientRect (wnd, &amp;rect);
<a name="l00096"></a>00096 
<a name="l00097"></a>00097         HDC image = (HDC)(uintptr_t) GetWindowLongPtr (wnd, GWLP_USERDATA);
<a name="l00098"></a>00098         <span class="keywordflow">if</span> (image) Win32::BitBlt (dc, 0, 0, rect.right, rect.bottom, image, 0, 0, SRCCOPY);
<a name="l00099"></a>00099         
<a name="l00100"></a>00100         EndPaint (wnd, &amp;ps);
<a name="l00101"></a>00101         <span class="keywordflow">return</span> <span class="keyword">true</span>;
<a name="l00102"></a>00102         }
<a name="l00103"></a>00103 
<a name="l00104"></a>00104     <span class="keywordflow">return</span> DefWindowProc (wnd, msg, wpar, lpar);
<a name="l00105"></a>00105     }
<a name="l00106"></a>00106 
<a name="l00107"></a>00107 <span class="comment">//============================================================================</span>
<a name="l00108"></a>00108 
<a name="l00109"></a>00109 <span class="keywordtype">int</span> main()
<a name="l00110"></a>00110     {
<a name="l00111"></a>00111     <a class="code" href="a00081.htm#gafce21ce98474d5559f316b3d47cdbfab" title="Создание окна рисования">txCreateWindow</a> (800, 600);
<a name="l00112"></a>00112     <a class="code" href="a00081.htm#gae92e621aaed81f90e4d142356e38762a" title="Блокирует обновление изображения окна, во избежание мигания.">txBegin</a>();
<a name="l00113"></a>00113 
<a name="l00114"></a>00114     <a class="code" href="a00080.htm#ga3d4731dd56b60635c80bc662c295c821" title="Проигрывает видео.">txPlayVideo</a> (<span class="stringliteral">&quot;\a&quot;</span> <span class="stringliteral">&quot;http://ded32.net.ru/www.youtube.com-watch-z_AbfPXTKms&quot;</span>);
<a name="l00115"></a>00115     
<a name="l00116"></a>00116     HDC   info    = <a class="code" href="a00081.htm#ga1008da052f2fbe9ec0f70c2f6b4f0700" title="Создает дополнительный холст (контекст рисования, Device Context, DC) в памяти.">txCreateCompatibleDC</a> (200, 30);
<a name="l00117"></a>00117     POINT infoSz  = <a class="code" href="a00081.htm#ga11074386e81c0c8677f36c0a16ac0aa1" title="Возвращает размер окна, картинки или холста в виде структуры POINT.">txGetExtent</a> (info);
<a name="l00118"></a>00118     POINT infoPos = {<a class="code" href="a00081.htm#gab79782d80f6c61587d02f0633aa2f198" title="Возвращает ширину окна или холста.">txGetExtentX</a>()/2 - infoSz.x/2, <a class="code" href="a00081.htm#gaa9bb7fd84e0b9f59c96be89d70c74321" title="Возвращает высоту окна или холста.">txGetExtentY</a>()/5*4};
<a name="l00119"></a>00119     HWND  arInfo  = txCreateAR (infoPos, info);
<a name="l00120"></a>00120     
<a name="l00121"></a>00121     <a class="code" href="a00081.htm#ga09938df8859ae8b62638a3af76ee6735" title="Устанавливает текущее выравнивание текста (влево/вправо/по центру).">txSetTextAlign</a> (TA_CENTER, info);
<a name="l00122"></a>00122     <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025" title="Белый цвет.">TX_WHITE</a>, 1, info);
<a name="l00123"></a>00123     <a class="code" href="a00081.htm#ga52e119361961d9eee33c176a3084e55d" title="Рисует текст.">txTextOut</a> (infoSz.x/2, 5, <span class="stringliteral">&quot;[Move the mouse]&quot;</span>, info);
<a name="l00124"></a>00124     
<a name="l00125"></a>00125     HDC   racket = <a class="code" href="a00081.htm#gaec4970aac125bcf0d8a0b10a118222f7" title="Загружает из файла изображение в формате BMP. Делает это довольно медленно.">txLoadImage</a> (<span class="stringliteral">&quot;Mouse.bmp&quot;</span>); 
<a name="l00126"></a>00126     POINT arSz   = <a class="code" href="a00081.htm#ga11074386e81c0c8677f36c0a16ac0aa1" title="Возвращает размер окна, картинки или холста в виде структуры POINT.">txGetExtent</a> (racket);
<a name="l00127"></a>00127     HWND  ar     = txCreateAR  (<a class="code" href="a00082.htm#ga44606f3b7f5f345d15bb20d46fcf78b6" title="Возвращает позицию Мыши!">txMousePos</a>(), racket);
<a name="l00128"></a>00128 
<a name="l00129"></a>00129     <span class="keywordflow">while</span> (!<a class="code" href="a00080.htm#ga782025393f08a0efb645b9d2e30f2586" title="Проверяет, нажата ли указанная клавиша.">txGetAsyncKeyState</a> (VK_ESCAPE))
<a name="l00130"></a>00130         {
<a name="l00131"></a>00131         POINT pos = <a class="code" href="a00082.htm#ga44606f3b7f5f345d15bb20d46fcf78b6" title="Возвращает позицию Мыши!">txMousePos</a>();
<a name="l00132"></a>00132 
<a name="l00133"></a>00133         pos.x -= arSz.x/2;
<a name="l00134"></a>00134         pos.y -= arSz.y/2;
<a name="l00135"></a>00135 
<a name="l00136"></a>00136         <span class="keywordtype">char</span> str [100] = <span class="stringliteral">&quot;&quot;</span>;
<a name="l00137"></a>00137         _snprintf_s (str, <span class="keyword">sizeof</span> (str), <span class="stringliteral">&quot;[%03ld %03ld]&quot;</span>, pos.x, pos.y);
<a name="l00138"></a>00138         
<a name="l00139"></a>00139         txSetAR (ar);
<a name="l00140"></a>00140         <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a9f0adfcb24eeb418fc39fe950db65ec8" title="Черный цвет.">TX_BLACK</a>, 1, racket);
<a name="l00141"></a>00141         <a class="code" href="a00081.htm#gad21ad5660a5423f31c2c8e77329758b2" title="Устанавливает текущий цвет заполнения фигур.">txSetFillColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a9f0adfcb24eeb418fc39fe950db65ec8" title="Черный цвет.">TX_BLACK</a>, racket);
<a name="l00142"></a>00142         <a class="code" href="a00081.htm#ga18a0418f3c06463e958077cddf2a4864" title="Рисует прямоугольник.">txRectangle</a> (0, arSz.y-25, 200, arSz.y, racket);
<a name="l00143"></a>00143         <a class="code" href="a00081.htm#ga09938df8859ae8b62638a3af76ee6735" title="Устанавливает текущее выравнивание текста (влево/вправо/по центру).">txSetTextAlign</a> (TA_CENTER, racket);
<a name="l00144"></a>00144         <a class="code" href="a00081.htm#ga66facc5848748507d3ea48c75b33ba23" title="Устанавливает текущий цвет и толщину линий, цвет текста.">txSetColor</a> (<a class="code" href="a00081.htm#gga3e94cfad3d9080241f84129d6e5c09b5a4992f4f094a8e2ae9fdb68cfff1f6025" title="Белый цвет.">TX_WHITE</a>, 1, racket);
<a name="l00145"></a>00145         <a class="code" href="a00081.htm#ga52e119361961d9eee33c176a3084e55d" title="Рисует текст.">txTextOut</a> (arSz.x/2, arSz.y-23, str, racket);
<a name="l00146"></a>00146         txSetAR (ar, racket);
<a name="l00147"></a>00147 
<a name="l00148"></a>00148         txMoveAR (arInfo);
<a name="l00149"></a>00149         txMoveAR (ar, pos.x, pos.y);
<a name="l00150"></a>00150         
<a name="l00151"></a>00151         Sleep (0);
<a name="l00152"></a>00152         }
<a name="l00153"></a>00153 
<a name="l00154"></a>00154     txDeleteAR (ar);
<a name="l00155"></a>00155     txDeleteAR (arInfo);
<a name="l00156"></a>00156 
<a name="l00157"></a>00157     <a class="code" href="a00081.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC</a> (racket);
<a name="l00158"></a>00158     <a class="code" href="a00081.htm#ga505f212582bf9b2bf95a4ef15f84af42" title="Уничтожает холст (контекст рисования, DC) в памяти.">txDeleteDC</a> (info);
<a name="l00159"></a>00159     }
<a name="l00160"></a>00160 
</pre></div></div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="a00021.htm">AR.cpp</a>      </li>
<!-- --------------------------------------------------------------------------
  Doxygen_HTM.htm
  $Version: 00173a, Revision: 165 $
  $Copyright: (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru> $
  $Date: 2020-03-26 02:25:56 +0400 $
 -------------------------------------------------------------------------- -->

<table class="" width="100%"><tr valign="top">

  <td align="left">
    <small><a href="http://orphus.ru">Нашли ошибку? Выделите ее мышкой и нажмите Ctrl+ENTER. &copy;&#160;Orphus.ru.</a></small><br>
    <a href="http://orphus.ru" id="orphus" target="_blank"><img class = "footer" alt="Orphus" src="http://storage.ded32.net.ru/orphus.gif" border="0"></a>
    </td>

  <td align="right">
    Документация по TX Library. Дата: Thu Aug 13 2020 00:46:49. Создано&#160;<a href="http://www.doxygen.org/index.html"><img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.3
    <img src="http://storage.ded32.net.ru/stat/TXLib-Help.chm" width=1px height=1px border="0">
    </td>
  </tr></table>

</ul>
</div>

<script type="text/javascript">var gaJsHost = (("https:" == document.location.protocol)? "https://ssl." : "http://www."); document.write (unescape ("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E")); try { var pageTracker = _gat._getTracker ("UA-7927138-1"); pageTracker._trackPageview(); } catch (err) {}</script>
<script type="text/javascript" src="http://storage.ded32.net.ru/orphus.js"></script>

</body>
</html>
